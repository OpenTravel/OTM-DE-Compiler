---
- name: --> Install and Configure OTM Repository Server
  hosts: all
  vars_files:
    - vars/default-vars.yml
    - "{{inventory_dir}}/vars/{{inventory_hostname}}-vars.yml"
    - vars/otm-repository-vars.yml
  tasks:
  - name: --> Download Artifacts to Controller
    block:
    - name: Creating local temp directory
      file:
        path: "{{controller_temp_dir}}"
        state: directory
      delegate_to: localhost
    - name: Download artifacts that will need to be uploaded later
      get_url:
        url: "{{item.url}}"
        dest: "{{controller_temp_dir}}/{{item.file}}"
      with_items:
        - { url: "{{tomcat_download_url}}", file: "{{tomcat_archive}}.zip" }
        - { url: "{{repo_service_download_url}}", file: "ROOT.war" }
        - { url: "{{index_service_download_url}}", file: "ota2-indexing-service.zip" }
      delegate_to: localhost
  
  - name: --> Create Base Folder Structure
    block:
    - name: Creating missing folders
      file:
        path: "{{item}}"
        state: directory
      with_items:
        - "{{base_dir}}"
        - "{{indexsvc_dir}}"
        - "{{svnrepo_dir}}"
        - "{{searchindex_dir}}"
        - "{{backups_dir}}"
        - "{{uploads_dir}}"
        - "{{uploads_dir}}/repo_tmp"
  
  - name: --> Check for Existence of Major Components
    block:
    - name: Check for Java 1.8 installation
      shell: "java -version 2>&1 >/dev/null | grep 'java version' | awk '{print $3}'"
      register: java_status
    - name: Check for existing SVN repository checkout
      stat: 
        path: "{{otmrepo_dir}}/.svn"
      register: svn_status
    - name: Check for existing Tomcat OTM repository configuration
      stat: 
        path: "{{tomcat_dir}}/conf/ota2-repository-config.xml"
      register: tomcat_status
    - name: Check for existing Indexing Service configuration
      stat: 
        path: "{{indexsvc_dir}}/conf/indexing-service.properties"
      register: indexing_status
    
  - debug:
      msg: The Subversion repository appears to already be created (skipping)
    when: svn_status.stat.exists == true
  - name: --> Install and Configure SVN Server
    block:
    - name: Install and configure local SVN repository
      block:
      - name: Install Subversion package
        package:
          name: subversion
          state: latest
      - import_tasks: subtasks/init-svn-repository.yml
      when: remote_svn_url is undefined
    - name: Determin the Subversion URL to use in subsequent tasks
      set_fact:
        svn_url: "{{ remote_svn_url if remote_svn_url is defined else 'svn://localhost:{{svn_port}}'}}"
    - name: Copy the initial OTM repository content
      template:
        src: "templates/otm-repo/{{item.src}}"
        dest: "{{uploads_dir}}/repo_tmp/{{item.dest}}"
      with_items:
      - { src: auth.j2, dest: auth.xml }
      - { src: group-assignments.j2, dest: group-assignments.xml }
      - { src: repository-metadata.j2, dest: repository-metadata.xml }
      - { src: repository-users.j2, dest: repository-users.xml }
    - name: Copy the script that will create the initial root namespace
      template:
        src: "templates/otm-repo/{{item.src}}"
        dest: "{{uploads_dir}}/{{item.dest}}"
        mode: 0754
      with_items:
      - { src: create-nsid.j2, dest: create-nsid.sh }
    - name: Execute the script to create the initial root namespace
      command: ./create-nsid.sh
      args:
        chdir: "{{uploads_dir}}"
    - name: Import the initial content into the SVN repository
      shell: "svn import {{uploads_dir}}/repo_tmp {{svn_url}} --username {{svn_user}} --password {{svn_password}} --no-auth-cache -m 'Initial import'"
      args:
        warn: false
    - name: Checkout to managed repository location
      subversion:
        repo: "{{svn_url}}"
        dest: "{{otmrepo_dir}}"
    when: svn_status.stat.exists == false
    
  - debug:
      msg: The Tomcat server appears to already be created (skipping)
    when: tomcat_status.stat.exists == true
  - name: --> Install and Configure Tomcat Server
    block:
    - block:
      - name: Ensure Java 1.8 package is available (Ubuntu only)
        command: "add-apt-repository -y ppa:openjdk-r/ppa"
        when: ansible_distribution == 'Ubuntu'
      - name: Make sure Java 1.8 is installed (Debian or Ubuntu)
        package:
          name: openjdk-8-jdk
          state: latest
        when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      - name: Make sure Java 1.8 is installed (CentOS or RHEL)
        package:
          name: java-1.8.0-openjdk-devel
          state: latest
        when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
      when: java_status.stdout is not search("1.8")
    - name: Upload Tomcat distribution to remote host
      unarchive:
        src: "{{controller_temp_dir}}/{{tomcat_archive}}.zip"
        dest: "{{base_dir}}"
    - name: Create version-independent symlink
      file:
        src: "{{base_dir}}/{{tomcat_archive}}"
        dest: "{{tomcat_dir}}"
        state: link
    - name: Modify shell script permissions to allow execution
      shell: "chmod 754 {{tomcat_dir}}/bin/*.sh"
      args:
        warn: false
    - name: Remove pre-installed web applications
      shell: "rm -rf *"
      args:
        chdir: "{{tomcat_dir}}/webapps"
        warn: false
    - name: Change default tomcat port (if necessary)
      xml:
        path: "{{tomcat_dir}}/conf/server.xml"
        xpath: /Server/Service/Connector
        attribute: port
        value: "{{tomcat_port}}"
      when: tomcat_port != "8080"
    - name: Copy OTM repository configuration files
      template:
        src: "templates/otm-config/{{item.src}}"
        dest: "{{tomcat_dir}}/conf/{{item.dest}}"
      with_items:
      - { src: ota2-repository-config.j2, dest: ota2-repository-config.xml }
      - { src: svnCredentials.j2, dest: svnCredentials.properties }
    - name: Install the OTA2 Repository Web Service application
      copy:
        src: "{{controller_temp_dir}}/ROOT.war"
        dest: "{{tomcat_dir}}/webapps/ROOT.war"
    - name: Install the OTM Repository tomcat service
      template:
        src: "templates/otm-config/ota2-tomcat.j2"
        dest: "/lib/systemd/system/ota2-tomcat.service"
    when: tomcat_status.stat.exists == false
    
  - debug:
      msg: The Indexing Service appears to already be created (skipping)
    when: indexing_status.stat.exists == true
  - name: --> Install and Configure the Indexing Service
    block:
    - name: Upload ota2-indexing-service to remote host
      unarchive:
        src: "{{controller_temp_dir}}/ota2-indexing-service.zip"
        dest: "{{indexsvc_dir}}/.."
    - name: Copy ota2-indexing-service configuration files
      template:
        src: "templates/indexing-config/{{item.src}}"
        dest: "{{indexsvc_dir}}/conf/{{item.dest}}"
      with_items:
      - { src: indexing-service.j2, dest: indexing-service.properties }
    - name: Install the ota2-indexing system service
      template:
        src: "templates/indexing-config/ota2-indexing.j2"
        dest: "/lib/systemd/system/ota2-indexing.service"
    when: indexing_status.stat.exists == false
    
  - import_tasks: subtasks/start-indexing.yml
  - import_tasks: subtasks/start-tomcat.yml
  - import_tasks: subtasks/cleanup.yml
