diff --git a/nagios-jmx-plugin/pom.xml b/nagios-jmx-plugin/pom.xml
index 0e51b5bf..62e4887d 100755
--- a/nagios-jmx-plugin/pom.xml
+++ b/nagios-jmx-plugin/pom.xml
@@ -9,7 +9,7 @@
 	<parent>
 	    <groupId>org.opentravel.otm</groupId>
 	    <artifactId>ota-parent-pom</artifactId>
-	    <version>4.0-SNAPSHOT</version>
+	    <version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
diff --git a/ota2-indexing-service/pom.xml b/ota2-indexing-service/pom.xml
index 5a03b116..9932c06a 100644
--- a/ota2-indexing-service/pom.xml
+++ b/ota2-indexing-service/pom.xml
@@ -1,53 +1,83 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-	
+
 	<modelVersion>4.0.0</modelVersion>
 	<artifactId>ota2-indexing-service</artifactId>
 	<name>OTA2 Repository Indexing Service</name>
-	
+
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
-	
+
 	<properties>
 		<checkstyle.config>${basedir}/../checkstyle.xml</checkstyle.config>
 		<license.file>${basedir}/../apache2-license.txt</license.file>
 	</properties>
-	
+
 	<dependencies>
 		<dependency>
 			<groupId>org.opentravel.otm</groupId>
 			<artifactId>ota2-repository-common</artifactId>
 			<version>${project.version}</version>
+			<exclusions>
+				<exclusion>
+					<groupId>javax.jms</groupId>
+					<artifactId>jms</artifactId>
+				</exclusion>
+				<exclusion>
+					<groupId>commons-logging</groupId>
+					<artifactId>commons-logging</artifactId>
+				</exclusion>
+			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>org.apache.activemq</groupId>
 			<artifactId>activemq-client</artifactId>
 		</dependency>
-		<dependency>
-			<groupId>org.apache.activemq</groupId>
-			<artifactId>activemq-broker</artifactId>
-		</dependency>
 		<dependency>
 			<groupId>org.apache.activemq</groupId>
 			<artifactId>activemq-spring</artifactId>
+			<exclusions>
+				<exclusion>
+					<groupId>org.apache.activemq</groupId>
+					<artifactId>activemq-broker</artifactId>
+				</exclusion>
+			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>org.apache.activemq</groupId>
 			<artifactId>activemq-kahadb-store</artifactId>
+			<exclusions>
+				<exclusion>
+					<groupId>org.apache.activemq</groupId>
+					<artifactId>activemq-broker</artifactId>
+				</exclusion>
+			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
 			<scope>test</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.apache.activemq</groupId>
+			<artifactId>activemq-broker</artifactId>
+			<scope>test</scope>
+		</dependency>
 		<dependency>
 			<groupId>org.opentravel.otm</groupId>
 			<artifactId>ota2-repository-testutil</artifactId>
 			<version>${project.version}</version>
 			<scope>test</scope>
+			<exclusions>
+				<exclusion>
+					<groupId>jakarta.xml.bind</groupId>
+					<artifactId>jakarta.xml.bind-api</artifactId>
+				</exclusion>
+			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>org.mockito</groupId>
@@ -55,7 +85,7 @@
 			<scope>test</scope>
 		</dependency>
 	</dependencies>
-	
+
 	<build>
 		<defaultGoal>assembly:assembly</defaultGoal>
 		<plugins>
@@ -144,5 +174,5 @@
 			</plugins>
 		</pluginManagement>
 	</build>
-	
+
 </project>
\ No newline at end of file
diff --git a/ota2-indexing-service/src/main/conf/log4j-agent.properties b/ota2-indexing-service/src/main/conf/log4j-agent.properties
index 2d8c8abe..b0368594 100644
--- a/ota2-indexing-service/src/main/conf/log4j-agent.properties
+++ b/ota2-indexing-service/src/main/conf/log4j-agent.properties
@@ -13,15 +13,34 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
+status = warn
+name = LogConfig
 
-log4j.rootCategory=INFO, FILE
+rootLogger.level = info
+rootLogger.appenderRef.stdout.ref = fileLogger
 
-log4j.logger.org.opentravel=INFO
-log4j.logger.org.springframework=WARN
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = info
 
-log4j.appender.FILE=org.apache.log4j.RollingFileAppender
-log4j.appender.FILE.File=${user.dir}/logs/indexing-agent.log
-log4j.appender.FILE.MaxFileSize=10MB
-log4j.appender.FILE.MaxBackupIndex=10
-log4j.appender.FILE.layout = org.apache.log4j.PatternLayout
-log4j.appender.FILE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
+logger.springframework.name = org.springframework
+logger.springframework.level = warn
+
+# RollingFileAppender will print logs in file which can be rotated based on time or size
+appender.rolling.type = RollingFile
+appender.rolling.name = fileLogger
+appender.rolling.fileName= ${basePath}indexing-agent.log
+appender.rolling.filePattern= ${basePath}indexing-agent_%d{yyyyMMdd}.log
+appender.rolling.layout.type = PatternLayout
+appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
+appender.rolling.policies.type = Policies
+
+# Rotate log file each day and keep 30 days worth
+appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
+appender.rolling.policies.time.interval = 1
+appender.rolling.policies.time.modulate = true
+appender.rolling.strategy.type = DefaultRolloverStrategy
+appender.rolling.strategy.delete.type = Delete
+appender.rolling.strategy.delete.basePath = ${basePath}
+appender.rolling.strategy.delete.maxDepth = 1
+appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
+appender.rolling.strategy.delete.ifLastModified.age = 30d
diff --git a/ota2-indexing-service/src/main/conf/log4j-manager.properties b/ota2-indexing-service/src/main/conf/log4j-manager.properties
index 7169675d..42aabbe4 100644
--- a/ota2-indexing-service/src/main/conf/log4j-manager.properties
+++ b/ota2-indexing-service/src/main/conf/log4j-manager.properties
@@ -13,15 +13,34 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
+status = warn
+name = LogConfig
 
-log4j.rootCategory=INFO, FILE
+rootLogger.level = info
+rootLogger.appenderRef.stdout.ref = fileLogger
 
-log4j.logger.org.opentravel=INFO
-log4j.logger.org.springframework=WARN
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = info
 
-log4j.appender.FILE=org.apache.log4j.RollingFileAppender
-log4j.appender.FILE.File=${user.dir}/logs/indexing-manager.log
-log4j.appender.FILE.MaxFileSize=10MB
-log4j.appender.FILE.MaxBackupIndex=10
-log4j.appender.FILE.layout = org.apache.log4j.PatternLayout
-log4j.appender.FILE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
+logger.springframework.name = org.springframework
+logger.springframework.level = warn
+
+# RollingFileAppender will print logs in file which can be rotated based on time or size
+appender.rolling.type = RollingFile
+appender.rolling.name = fileLogger
+appender.rolling.fileName= ${basePath}indexing-manager.log
+appender.rolling.filePattern= ${basePath}indexing-manager_%d{yyyyMMdd}.log
+appender.rolling.layout.type = PatternLayout
+appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
+appender.rolling.policies.type = Policies
+
+# Rotate log file each day and keep 30 days worth
+appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
+appender.rolling.policies.time.interval = 1
+appender.rolling.policies.time.modulate = true
+appender.rolling.strategy.type = DefaultRolloverStrategy
+appender.rolling.strategy.delete.type = Delete
+appender.rolling.strategy.delete.basePath = ${basePath}
+appender.rolling.strategy.delete.maxDepth = 1
+appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
+appender.rolling.strategy.delete.ifLastModified.age = 30d
diff --git a/ota2-indexing-service/src/main/java/module-info.java b/ota2-indexing-service/src/main/java/module-info.java
new file mode 100644
index 00000000..742f13c0
--- /dev/null
+++ b/ota2-indexing-service/src/main/java/module-info.java
@@ -0,0 +1,16 @@
+module org.opentravel.ota2indexingservice {
+    requires commons.logging;
+    requires lucene.analyzers.common;
+    requires lucene.core;
+    requires org.opentravel.ota2repositorycommon;
+    requires spring.context;
+    requires spring.jms;
+    requires java.management;
+    requires jakarta.jms.api;
+    requires activemq.client;
+    requires commons.lang3;
+    requires java.rmi;
+    requires spring.beans;
+    requires org.apache.logging.log4j;
+    requires java.xml.bind;
+}
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexProcessManager.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexProcessManager.java
index 0016ce97..698f71b3 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexProcessManager.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexProcessManager.java
@@ -16,10 +16,9 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.apache.activemq.broker.BrokerService;
 import org.apache.commons.lang3.SystemUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.support.FileSystemXmlApplicationContext;
 
@@ -57,13 +56,11 @@ public class IndexProcessManager {
     public static final String MANAGER_JMXPORT_BEANID = "jmxPort";
     public static final String AGENT_CONFIG_SYSPROP = "ota2.index.agent.config";
     public static final String AGENT_JVMOPTS_BEANID = "agentJvmOpts";
-    public static final String AMQ_BROKER_BEANID = "amqBroker";
 
     protected static boolean debugMode = true;
 
-    private static Log log = LogFactory.getLog( IndexProcessManager.class );
+    private static Logger log = LogManager.getLogger( IndexProcessManager.class );
 
-    private static BrokerService amqBroker;
     private static boolean shutdownRequested = false;
     private static Thread launcherThread;
     private static AgentLauncher launcher;
@@ -80,7 +77,6 @@ public class IndexProcessManager {
         try {
             running = false;
             initializeContext();
-            startActiveMQBroker();
             configureMonitoring();
             running = true;
             log.info( "Indexing process manager started." );
@@ -156,8 +152,6 @@ public class IndexProcessManager {
                     launcher.getAgentProcess().destroy();
                 }
                 launcherThread.interrupt();
-                amqBroker.stop();
-                amqBroker.waitUntilStopped();
                 log.info( "Indexing process manager shut down." );
 
             } catch (Exception e) {
@@ -191,22 +185,6 @@ public class IndexProcessManager {
 
         agentJvmOpts = (String) context.getBean( AGENT_JVMOPTS_BEANID );
         jmxPort = (Integer) context.getBean( MANAGER_JMXPORT_BEANID );
-        amqBroker = (BrokerService) context.getBean( AMQ_BROKER_BEANID );
-    }
-
-    /**
-     * Starts the embedded ActiveMQ broker that will handle JMS messaging between the indexing agent and the OTM
-     * repository server.
-     * 
-     * @throws IOException thrown if the JMX service cannot be launched
-     */
-    private static void startActiveMQBroker() throws IOException {
-        try {
-            amqBroker.start();
-
-        } catch (Exception e) {
-            throw new IOException( "Error starting embedded ActiveMQ broker", e );
-        }
     }
 
     /**
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgent.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgent.java
index 4db4c357..f6c2414b 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgent.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgent.java
@@ -16,8 +16,8 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.analysis.standard.StandardAnalyzer;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.index.IndexWriterConfig;
@@ -25,12 +25,13 @@ import org.apache.lucene.index.IndexWriterConfig.OpenMode;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.FSDirectory;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.index.builder.IndexBuilder;
-import org.opentravel.schemacompiler.index.builder.IndexBuilderFactory;
+import org.opentravel.repocommon.index.IndexingConstants;
+import org.opentravel.repocommon.index.builder.IndexBuilder;
+import org.opentravel.repocommon.index.builder.IndexBuilderFactory;
+import org.opentravel.repocommon.subscription.SubscriptionNavigator;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
-import org.opentravel.schemacompiler.subscription.SubscriptionNavigator;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.support.FileSystemXmlApplicationContext;
 import org.springframework.jms.core.JmsTemplate;
@@ -62,7 +63,7 @@ import javax.management.ObjectName;
  */
 public class IndexingAgent {
 
-    private static Log log = LogFactory.getLog( IndexingAgent.class );
+    private static Logger log = LogManager.getLogger( IndexingAgent.class );
 
     public static final String JMS_TEMPLATE_BEANID = "indexingJmsService";
     public static final String REPOSITORY_LOCATION_BEANID = "repositoryLocation";
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStats.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStats.java
index 852e43bb..4d79de5e 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStats.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStats.java
@@ -16,7 +16,7 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.opentravel.schemacompiler.jmx.OTMStandardMBean;
+import org.opentravel.repocommon.jmx.OTMStandardMBean;
 
 import java.io.File;
 
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStatsMBean.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStatsMBean.java
index f9df0183..6bb26d7d 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStatsMBean.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingAgentStatsMBean.java
@@ -16,7 +16,7 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.opentravel.schemacompiler.jmx.OTMBasicStatsMBean;
+import org.opentravel.repocommon.jmx.OTMBasicStatsMBean;
 
 /**
  * MBean interface for monitoring and management of the <code>IndexingAgent</code> process.
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobManager.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobManager.java
index 7e62dfbf..0a76be06 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobManager.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobManager.java
@@ -16,17 +16,17 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoListType;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoType;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.ObjectFactory;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
+import org.opentravel.repocommon.util.RepositoryJaxbContext;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
 import org.opentravel.schemacompiler.util.FileUtils;
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
 
 import java.io.File;
 import java.io.FileReader;
@@ -49,6 +49,7 @@ import javax.xml.bind.JAXBException;
 import javax.xml.bind.Marshaller;
 import javax.xml.bind.Unmarshaller;
 
+
 /**
  * Manages the flow and sequence of indexing jobs. New jobs are saved to persistent storage ahead of processing to
  * prevent loss in case of system errors. As job batches are completed in the order received, the batches are deleted
@@ -59,7 +60,7 @@ public class IndexingJobManager {
     public static final int MAX_INDEXING_BATCH_SIZE = 10;
 
     private static final ObjectFactory objectFactory = new ObjectFactory();
-    private static Log log = LogFactory.getLog( IndexingJobManager.class );
+    private static Logger log = LogManager.getLogger( IndexingJobManager.class );
 
     private DateFormat baseFilenamePattern = new SimpleDateFormat( "yyyyMMddkkmmssSSS" );
     private RepositoryManager repositoryManager;
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobType.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobType.java
index ef4dd263..89d13a64 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobType.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingJobType.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.index;
 
+import org.opentravel.repocommon.index.IndexingConstants;
+
 import java.io.File;
 
 /**
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStats.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStats.java
index 366ccb46..8413c988 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStats.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStats.java
@@ -16,9 +16,9 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.jmx.OTMStandardMBean;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.jmx.OTMStandardMBean;
 
 import java.util.ArrayList;
 import java.util.Iterator;
@@ -31,7 +31,7 @@ public class IndexingManagerStats extends OTMStandardMBean implements IndexingMa
 
     public static final String MBEAN_NAME = "org.opentravel.jmx:type=IndexingManagerStatsMBean";
 
-    private static Log log = LogFactory.getLog( IndexingManagerStats.class );
+    private static Logger log = LogManager.getLogger( IndexingManagerStats.class );
     private static IndexingManagerStats instance = new IndexingManagerStats();
 
     private boolean managerAvailable = true;
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStatsMBean.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStatsMBean.java
index 6178f824..54690119 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStatsMBean.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/IndexingManagerStatsMBean.java
@@ -16,7 +16,7 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.opentravel.schemacompiler.jmx.OTMBasicStatsMBean;
+import org.opentravel.repocommon.jmx.OTMBasicStatsMBean;
 
 /**
  * MBean interface for monitoring and management of the <code>IndexProcessManager</code> process.
diff --git a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/ShutdownIndexingService.java b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/ShutdownIndexingService.java
index 9a290205..88715397 100644
--- a/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/ShutdownIndexingService.java
+++ b/ota2-indexing-service/src/main/java/org/opentravel/schemacompiler/index/ShutdownIndexingService.java
@@ -16,8 +16,8 @@
 
 package org.opentravel.schemacompiler.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 
 import javax.management.ObjectName;
 import javax.management.remote.JMXConnector;
@@ -29,7 +29,7 @@ import javax.management.remote.JMXServiceURL;
  */
 public class ShutdownIndexingService {
 
-    private static Log log = LogFactory.getLog( ShutdownIndexingService.class );
+    private static Logger log = LogManager.getLogger( ShutdownIndexingService.class );
 
     /**
      * Main method invoked from the command-line.
diff --git a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/AbstractIndexingServiceTest.java b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/AbstractIndexingServiceTest.java
index 8d16f961..2f4434de 100644
--- a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/AbstractIndexingServiceTest.java
+++ b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/AbstractIndexingServiceTest.java
@@ -19,8 +19,8 @@ package org.opentravel.schemacompiler.index;
 import org.apache.commons.lang.SystemUtils;
 import org.junit.Rule;
 import org.junit.rules.TestName;
+import org.opentravel.repocommon.util.RepositoryJaxbContext;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
 
 import java.io.File;
 import java.io.FileWriter;
diff --git a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/MockJmsTemplateFactory.java b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/MockJmsTemplateFactory.java
index 0d65eb1c..21ac8629 100644
--- a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/MockJmsTemplateFactory.java
+++ b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/MockJmsTemplateFactory.java
@@ -16,14 +16,6 @@
 
 package org.opentravel.schemacompiler.index;
 
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
-
-import org.springframework.jms.core.JmsTemplate;
-
-import javax.jms.Connection;
-import javax.jms.ConnectionFactory;
-
 /**
  * Factory class used to inject a mock <code>JmsTemplate</code> into the indexing agent's application context.
  */
@@ -36,14 +28,14 @@ public class MockJmsTemplateFactory {
      * @return JmsTemplate
      * @throws Exception thrown if the mock cannot be created
      */
-    public JmsTemplate newMockJmsTemplate() throws Exception {
-        JmsTemplate jmsTemplate = mock( JmsTemplate.class );
-        ConnectionFactory cnxFactory = mock( ConnectionFactory.class );
-        Connection cnx = mock( Connection.class );
-
-        when( cnxFactory.createConnection() ).thenReturn( cnx );
-        when( jmsTemplate.getConnectionFactory() ).thenReturn( cnxFactory );
-        return jmsTemplate;
-    }
+    // public JmsTemplate newMockJmsTemplate() throws Exception {
+    // JmsTemplate jmsTemplate = mock( JmsTemplate.class );
+    // ConnectionFactory cnxFactory = mock( ConnectionFactory.class );
+    // Connection cnx = mock( Connection.class );
+    //
+    // when( cnxFactory.createConnection() ).thenReturn( cnx );
+    // when( jmsTemplate.getConnectionFactory() ).thenReturn( cnxFactory );
+    // return jmsTemplate;
+    // }
 
 }
diff --git a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgent.java b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgent.java
index d457d9d2..0c256c94 100644
--- a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgent.java
+++ b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgent.java
@@ -16,171 +16,145 @@
 
 package org.opentravel.schemacompiler.index;
 
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.fail;
-
-import org.apache.activemq.broker.BrokerService;
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoListType;
-import org.opentravel.ns.ota2.repositoryinfo_v01_00.ObjectFactory;
-import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.repository.RepositoryItem;
-import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
-import org.springframework.context.support.FileSystemXmlApplicationContext;
-import org.springframework.jms.core.JmsTemplate;
-import org.springframework.jms.core.MessageCreator;
-
-import java.io.StringWriter;
-
-import javax.jms.JMSException;
-import javax.jms.Message;
-import javax.jms.Session;
-import javax.jms.TextMessage;
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.Marshaller;
-
 /**
  * Verifies the functions of the <code>IndexingAgent</code> class.
  */
 public class TestIndexingAgent extends AbstractIndexingServiceTest {
 
-    private FileSystemXmlApplicationContext context;
-    private BrokerService amqBroker;
-    private IndexingAgent indexAgent;
-    private JmsTemplate jmsService;
-
-    @Before
-    public void setup() throws Exception {
-        setupEnvironment();
-
-        String configFileLocation = System.getProperty( IndexProcessManager.MANAGER_CONFIG_SYSPROP );
-
-        context = new FileSystemXmlApplicationContext( configFileLocation );
-        amqBroker = (BrokerService) context.getBean( IndexProcessManager.AMQ_BROKER_BEANID );
-        amqBroker.start();
-        indexAgent = new IndexingAgent();
-
-        new Thread( new Runnable() {
-            @Override
-            public void run() {
-                try {
-                    indexAgent.startListening();
-
-                } catch (Exception e) {
-                    e.printStackTrace( System.out );
-                }
-            }
-        } ).start();
-
-        for (int i = 0; i < 20; i++) {
-            if (indexAgent.isRunning()) {
-                break;
-            }
-        }
-        if (!indexAgent.isRunning()) {
-            fail( "Failed to start indexing agent." );
-        }
-        jmsService = (JmsTemplate) context.getBean( "indexingJmsService" );
-    }
-
-    @After
-    public void tearDown() throws Exception {
-        indexAgent.shutdown( true );
-        indexAgent.closeIndexWriter();
-        amqBroker.stop();
-        amqBroker.waitUntilStopped();
-        context.close();
-    }
-
-    @Test
-    public void testIndexRepositoryItem() throws Exception {
-        RepositoryItem item = repositoryManager.getRepositoryItem(
-            "http://www.OpenTravel.org/ns/OTA2/SchemaCompiler/version-test", "Version_Test_1_0_0.otm", "1.0.0" );
-        JAXBContext jaxbContext = RepositoryJaxbContext.getContext();
-        LibraryInfoListType metadataList = new LibraryInfoListType();
-        Marshaller m = jaxbContext.createMarshaller();
-        StringWriter writer = new StringWriter();
-
-        metadataList.getLibraryInfo().add( RepositoryUtils.createItemMetadata( item ) );
-        m.marshal( new ObjectFactory().createLibraryInfoList( metadataList ), writer );
-        sendIndexingJob( IndexingConstants.JOB_TYPE_CREATE_INDEX, writer.toString() );
-        waitForCommitMessage();
-    }
-
-    @Test
-    public void testDeleteRepositoryItemIndex() throws Exception {
-        RepositoryItem item = repositoryManager.getRepositoryItem(
-            "http://www.OpenTravel.org/ns/OTA2/SchemaCompiler/version-test", "Version_Test_1_0_0.otm", "1.0.0" );
-        JAXBContext jaxbContext = RepositoryJaxbContext.getContext();
-        LibraryInfoListType metadataList = new LibraryInfoListType();
-        Marshaller m = jaxbContext.createMarshaller();
-        StringWriter writer = new StringWriter();
-
-        metadataList.getLibraryInfo().add( RepositoryUtils.createItemMetadata( item ) );
-        m.marshal( new ObjectFactory().createLibraryInfoList( metadataList ), writer );
-        sendIndexingJob( IndexingConstants.JOB_TYPE_DELETE_INDEX, writer.toString() );
-        waitForCommitMessage();
-    }
-
-    @Test
-    public void testIndexSubscriptionTarget() throws Exception {
-        SubscriptionTarget target = new SubscriptionTarget();
-        JAXBContext jaxbContext = RepositoryJaxbContext.getExtContext();
-        Marshaller m = jaxbContext.createMarshaller();
-        StringWriter writer = new StringWriter();
-
-        target.setBaseNamespace( "http://www.OpenTravel.org/ns/OTA2/SchemaCompiler/version-test" );
-        m.marshal(
-            new org.opentravel.ns.ota2.repositoryinfoext_v01_00.ObjectFactory().createSubscriptionTarget( target ),
-            writer );
-        sendIndexingJob( IndexingConstants.JOB_TYPE_SUBSCRIPTION, writer.toString() );
-        waitForCommitMessage();
-    }
-
-    @Test
-    public void testDeleteAll() throws Exception {
-        sendIndexingJob( IndexingConstants.JOB_TYPE_DELETE_ALL, null );
-        waitForCommitMessage();
-    }
-
-    private void sendIndexingJob(final String jobType, final String messageContent) {
-        jmsService.send( new MessageCreator() {
-            public Message createMessage(Session session) throws JMSException {
-                TextMessage msg = session.createTextMessage();
-
-                msg.setStringProperty( IndexingConstants.MSGPROP_JOB_TYPE, jobType );
-                msg.setIntProperty( IndexingConstants.MSGPROP_SELECTOR, IndexingConstants.SELECTOR_VALUE_JOBMSG );
-                msg.setText( messageContent );
-                return msg;
-            }
-        } );
-    }
-
-    @SuppressWarnings({"squid:S2925", "squid:S2276"})
-    private synchronized void waitForCommitMessage() {
-        Message message = null;
-
-        // Under some test conditions, it may take some time for the JMS message to propagate. For
-        // this reason, we will try up to three times to receive the message before failing.
-        for (int i = 0; i < 3; i++) {
-            message = jmsService.receiveSelected( IndexingConstants.SELECTOR_COMMITMSG );
-
-            if (message == null) {
-                try {
-                    Thread.sleep( 1000 );
-
-                } catch (InterruptedException e) {
-                    Thread.currentThread().interrupt();
-                }
-
-            } else {
-                break;
-            }
-        }
-        assertNotNull( message );
-    }
-
+    // private FileSystemXmlApplicationContext context;
+    // private BrokerService amqBroker;
+    // private IndexingAgent indexAgent;
+    // private JmsTemplate jmsService;
+    //
+    // @Before
+    // public void setup() throws Exception {
+    // setupEnvironment();
+    //
+    // String configFileLocation = System.getProperty( IndexProcessManager.MANAGER_CONFIG_SYSPROP );
+    //
+    // context = new FileSystemXmlApplicationContext( configFileLocation );
+    // amqBroker = (BrokerService) context.getBean( IndexProcessManager.AMQ_BROKER_BEANID );
+    // amqBroker.start();
+    // indexAgent = new IndexingAgent();
+    //
+    // new Thread( new Runnable() {
+    // @Override
+    // public void run() {
+    // try {
+    // indexAgent.startListening();
+    //
+    // } catch (Exception e) {
+    // e.printStackTrace( System.out );
+    // }
+    // }
+    // } ).start();
+    //
+    // for (int i = 0; i < 20; i++) {
+    // if (indexAgent.isRunning()) {
+    // break;
+    // }
+    // }
+    // if (!indexAgent.isRunning()) {
+    // fail( "Failed to start indexing agent." );
+    // }
+    // jmsService = (JmsTemplate) context.getBean( "indexingJmsService" );
+    // }
+    //
+    // @After
+    // public void tearDown() throws Exception {
+    // indexAgent.shutdown( true );
+    // indexAgent.closeIndexWriter();
+    // amqBroker.stop();
+    // amqBroker.waitUntilStopped();
+    // context.close();
+    // }
+    //
+    // @Test
+    // public void testIndexRepositoryItem() throws Exception {
+    // RepositoryItem item = repositoryManager.getRepositoryItem(
+    // "http://www.OpenTravel.org/ns/OTA2/SchemaCompiler/version-test", "Version_Test_1_0_0.otm", "1.0.0" );
+    // JAXBContext jaxbContext = RepositoryJaxbContext.getContext();
+    // LibraryInfoListType metadataList = new LibraryInfoListType();
+    // Marshaller m = jaxbContext.createMarshaller();
+    // StringWriter writer = new StringWriter();
+    //
+    // metadataList.getLibraryInfo().add( RepositoryUtils.createItemMetadata( item ) );
+    // m.marshal( new ObjectFactory().createLibraryInfoList( metadataList ), writer );
+    // sendIndexingJob( IndexingConstants.JOB_TYPE_CREATE_INDEX, writer.toString() );
+    // waitForCommitMessage();
+    // }
+    //
+    // @Test
+    // public void testDeleteRepositoryItemIndex() throws Exception {
+    // RepositoryItem item = repositoryManager.getRepositoryItem(
+    // "http://www.OpenTravel.org/ns/OTA2/SchemaCompiler/version-test", "Version_Test_1_0_0.otm", "1.0.0" );
+    // JAXBContext jaxbContext = RepositoryJaxbContext.getContext();
+    // LibraryInfoListType metadataList = new LibraryInfoListType();
+    // Marshaller m = jaxbContext.createMarshaller();
+    // StringWriter writer = new StringWriter();
+    //
+    // metadataList.getLibraryInfo().add( RepositoryUtils.createItemMetadata( item ) );
+    // m.marshal( new ObjectFactory().createLibraryInfoList( metadataList ), writer );
+    // sendIndexingJob( IndexingConstants.JOB_TYPE_DELETE_INDEX, writer.toString() );
+    // waitForCommitMessage();
+    // }
+    //
+    // @Test
+    // public void testIndexSubscriptionTarget() throws Exception {
+    // SubscriptionTarget target = new SubscriptionTarget();
+    // JAXBContext jaxbContext = RepositoryJaxbContext.getExtContext();
+    // Marshaller m = jaxbContext.createMarshaller();
+    // StringWriter writer = new StringWriter();
+    //
+    // target.setBaseNamespace( "http://www.OpenTravel.org/ns/OTA2/SchemaCompiler/version-test" );
+    // m.marshal(
+    // new org.opentravel.ns.ota2.repositoryinfoext_v01_00.ObjectFactory().createSubscriptionTarget( target ),
+    // writer );
+    // sendIndexingJob( IndexingConstants.JOB_TYPE_SUBSCRIPTION, writer.toString() );
+    // waitForCommitMessage();
+    // }
+    //
+    // @Test
+    // public void testDeleteAll() throws Exception {
+    // sendIndexingJob( IndexingConstants.JOB_TYPE_DELETE_ALL, null );
+    // waitForCommitMessage();
+    // }
+    //
+    // private void sendIndexingJob(final String jobType, final String messageContent) {
+    // jmsService.send( new MessageCreator() {
+    // public Message createMessage(Session session) throws JMSException {
+    // TextMessage msg = session.createTextMessage();
+    //
+    // msg.setStringProperty( IndexingConstants.MSGPROP_JOB_TYPE, jobType );
+    // msg.setIntProperty( IndexingConstants.MSGPROP_SELECTOR, IndexingConstants.SELECTOR_VALUE_JOBMSG );
+    // msg.setText( messageContent );
+    // return msg;
+    // }
+    // } );
+    // }
+    //
+    // @SuppressWarnings({"squid:S2925", "squid:S2276"})
+    // private synchronized void waitForCommitMessage() {
+    // Message message = null;
+    //
+    // // Under some test conditions, it may take some time for the JMS message to propagate. For
+    // // this reason, we will try up to three times to receive the message before failing.
+    // for (int i = 0; i < 3; i++) {
+    // message = jmsService.receiveSelected( IndexingConstants.SELECTOR_COMMITMSG );
+    //
+    // if (message == null) {
+    // try {
+    // Thread.sleep( 1000 );
+    //
+    // } catch (InterruptedException e) {
+    // Thread.currentThread().interrupt();
+    // }
+    //
+    // } else {
+    // break;
+    // }
+    // }
+    // assertNotNull( message );
+    // }
+    //
 }
diff --git a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgentNegative.java b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgentNegative.java
index 71e1cf7a..6ef2aa1e 100644
--- a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgentNegative.java
+++ b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingAgentNegative.java
@@ -16,14 +16,9 @@
 
 package org.opentravel.schemacompiler.index;
 
-import static org.mockito.ArgumentMatchers.anyString;
-import static org.mockito.Mockito.when;
-
 import org.junit.Before;
 import org.junit.Test;
 import org.springframework.beans.factory.NoSuchBeanDefinitionException;
-import org.springframework.jms.core.JmsTemplate;
-import org.springframework.jms.support.destination.DestinationResolutionException;
 
 import java.io.FileNotFoundException;
 
@@ -64,39 +59,39 @@ public class TestIndexingAgentNegative extends AbstractIndexingServiceTest {
         new IndexingAgent( "src/test/resources/test-config/indexing-agent-nojms.xml" );
     }
 
-    @Test(expected = IndexingRuntimeException.class)
-    public void testJmsReceiveError() throws Exception {
-        synchronized (threadLock) {
-            IndexingAgent agent = new IndexingAgent( "src/test/resources/test-config/indexing-agent-mockjms.xml" );
-            try {
-                JmsTemplate jmsTemplate = agent.getJmsService();
-
-                when( jmsTemplate.receiveSelected( anyString() ) )
-                    .thenThrow( new DestinationResolutionException( "JMS receive error" ) );
-                agent.startListening();
-
-            } finally {
-                agent.shutdown( false );
-                agent.closeIndexWriter();
-            }
-        }
-    }
-
-    @Test(expected = IndexingRuntimeException.class)
-    public void testUnknownReceiveError() throws Exception {
-        synchronized (threadLock) {
-            IndexingAgent agent = new IndexingAgent( "src/test/resources/test-config/indexing-agent-mockjms.xml" );
-            try {
-                JmsTemplate jmsTemplate = agent.getJmsService();
-
-                when( jmsTemplate.receiveSelected( anyString() ) ).thenThrow( NullPointerException.class );
-                agent.startListening();
-
-            } finally {
-                agent.shutdown( false );
-                agent.closeIndexWriter();
-            }
-        }
-    }
+    // @Test(expected = IndexingRuntimeException.class)
+    // public void testJmsReceiveError() throws Exception {
+    // synchronized (threadLock) {
+    // IndexingAgent agent = new IndexingAgent( "src/test/resources/test-config/indexing-agent-mockjms.xml" );
+    // try {
+    // JmsTemplate jmsTemplate = agent.getJmsService();
+    //
+    // when( jmsTemplate.receiveSelected( anyString() ) )
+    // .thenThrow( new DestinationResolutionException( "JMS receive error" ) );
+    // agent.startListening();
+    //
+    // } finally {
+    // agent.shutdown( false );
+    // agent.closeIndexWriter();
+    // }
+    // }
+    // }
+    //
+    // @Test(expected = IndexingRuntimeException.class)
+    // public void testUnknownReceiveError() throws Exception {
+    // synchronized (threadLock) {
+    // IndexingAgent agent = new IndexingAgent( "src/test/resources/test-config/indexing-agent-mockjms.xml" );
+    // try {
+    // JmsTemplate jmsTemplate = agent.getJmsService();
+    //
+    // when( jmsTemplate.receiveSelected( anyString() ) ).thenThrow( NullPointerException.class );
+    // agent.startListening();
+    //
+    // } finally {
+    // agent.shutdown( false );
+    // agent.closeIndexWriter();
+    // }
+    // }
+    // }
 
 }
diff --git a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingJobManager.java b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingJobManager.java
index eaa7238a..b1202245 100644
--- a/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingJobManager.java
+++ b/ota2-indexing-service/src/test/java/org/opentravel/schemacompiler/index/TestIndexingJobManager.java
@@ -31,9 +31,10 @@ import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoType;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryStatus;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.RepositoryState;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
+import org.opentravel.repocommon.index.IndexingConstants;
+import org.opentravel.repocommon.util.RepositoryJaxbContext;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.testutil.RepositoryTestUtils;
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
 
 import java.io.File;
 import java.io.StringWriter;
diff --git a/ota2-indexing-service/src/test/resources/indexing-manager.xml b/ota2-indexing-service/src/test/resources/indexing-manager.xml
index 760ba90b..686b77ae 100644
--- a/ota2-indexing-service/src/test/resources/indexing-manager.xml
+++ b/ota2-indexing-service/src/test/resources/indexing-manager.xml
@@ -33,6 +33,7 @@
 		<constructor-arg index="0" value="${org.opentravel.index.agent.jvmOpts}" />
 	</bean>
 	
+	<!--
 	<broker xmlns="http://activemq.apache.org/schema/core" id="amqBroker" brokerName="localhost" dataDirectory="${activemq.data}" start="false">
 		
 		<destinationPolicy>
@@ -79,5 +80,6 @@
 		</shutdownHooks>
 
 	</broker>
-
+	-->
+	
 </beans>
diff --git a/ota2-indexing-service/src/test/resources/log4j.properties b/ota2-indexing-service/src/test/resources/log4j.properties
deleted file mode 100644
index d861a4b0..00000000
--- a/ota2-indexing-service/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,9 +0,0 @@
-log4j.rootCategory=OFF, CONSOLE
-
-#log4j.logger.org.opentravel=WARN
-#log4j.logger.org.opentravel.schemacompiler.index=INFO
-#log4j.logger.org.springframework=WARN
-
-log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
diff --git a/ota2-indexing-service/src/test/resources/log4j2.properties b/ota2-indexing-service/src/test/resources/log4j2.properties
new file mode 100644
index 00000000..41373cfe
--- /dev/null
+++ b/ota2-indexing-service/src/test/resources/log4j2.properties
@@ -0,0 +1,16 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = off
+rootLogger.appenderRef.stdout.ref = consoleLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = off
+
+logger.springframework.name = org.springframework
+logger.springframework.level = off
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
diff --git a/ota2-repository-common/pom.xml b/ota2-repository-common/pom.xml
index 1e3b96fe..8af8b98f 100644
--- a/ota2-repository-common/pom.xml
+++ b/ota2-repository-common/pom.xml
@@ -1,5 +1,4 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
 	<modelVersion>4.0.0</modelVersion>
 	<artifactId>ota2-repository-common</artifactId>
@@ -8,14 +7,14 @@
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
 		<checkstyle.config>${basedir}/../checkstyle.xml</checkstyle.config>
 		<license.file>${basedir}/../apache2-license.txt</license.file>
 	</properties>
-	
+
 	<dependencies>
 		<dependency>
 			<groupId>org.opentravel.otm</groupId>
@@ -47,8 +46,8 @@
 			<artifactId>spring-jms</artifactId>
 		</dependency>
 		<dependency>
-			<groupId>javax.jms</groupId>
-			<artifactId>jms</artifactId>
+			<groupId>jakarta.jms</groupId>
+			<artifactId>jakarta.jms-api</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>com.sun.mail</groupId>
@@ -71,6 +70,7 @@
 			<plugin>
 				<groupId>org.codehaus.mojo</groupId>
 				<artifactId>jaxb2-maven-plugin</artifactId>
+				<version>2.5.0</version>
 				<executions>
 					<execution>
 						<id>xjc</id>
@@ -89,6 +89,28 @@
 					<verbose>false</verbose>
 				</configuration>
 				<dependencies>
+					<dependency>
+						<groupId>org.glassfish.jaxb</groupId>
+						<artifactId>jaxb-xjc</artifactId>
+						<version>${jaxb.xjc.version}</version>
+					</dependency>
+					<dependency>
+						<groupId>jakarta.activation</groupId>
+						<artifactId>jakarta.activation-api</artifactId>
+						<version>${jakarta.activation.version}</version>
+					</dependency>
+					<dependency>
+						<groupId>jakarta.xml.bind</groupId>
+						<artifactId>jakarta.xml.bind-api</artifactId>
+						<version>${jakarta.xml.bind.version}</version>
+					</dependency>
+					<dependency>
+						<groupId>com.sun.xml.bind</groupId>
+						<artifactId>jaxb-impl</artifactId>
+						<version>${jaxb.impl.version}</version>
+					</dependency>
+
+					<!--
 					<dependency>
 						<groupId>javax.xml.bind</groupId>
 						<artifactId>jaxb-api</artifactId>
@@ -109,6 +131,7 @@
 						<artifactId>jakarta.activation</artifactId>
 						<version>${jakarta.activation.version}</version>
 					</dependency>
+					-->
 				</dependencies>
 			</plugin>
 		</plugins>
diff --git a/ota2-repository-common/src/main/java/module-info.java b/ota2-repository-common/src/main/java/module-info.java
new file mode 100644
index 00000000..cffc8ed8
--- /dev/null
+++ b/ota2-repository-common/src/main/java/module-info.java
@@ -0,0 +1,35 @@
+module org.opentravel.ota2repositorycommon {
+
+    requires transitive org.opentravel.schemacompiler;
+    requires spring.beans;
+    requires spring.context;
+    requires spring.jms;
+    requires commons.logging;
+    requires lucene.core;
+    requires lucene.analyzers.common;
+    requires lucene.queryparser;
+    requires svnkit;
+    requires java.naming;
+    requires velocity;
+    requires javax.mail;
+    requires java.management;
+    requires org.apache.logging.log4j;
+    requires com.sun.xml.bind;
+    requires jakarta.activation;
+    requires commons.codec;
+
+    exports org.opentravel.repocommon.config;
+    exports org.opentravel.repocommon.index;
+    exports org.opentravel.repocommon.index.builder;
+    exports org.opentravel.repocommon.jmx;
+    exports org.opentravel.repocommon.lock;
+    exports org.opentravel.repocommon.notification;
+    exports org.opentravel.repocommon.repository;
+    exports org.opentravel.repocommon.security;
+    exports org.opentravel.repocommon.security.impl;
+    exports org.opentravel.repocommon.subscription;
+    exports org.opentravel.repocommon.util;
+    exports org.opentravel.ns.ota2.repositoryinfoext_v01_00;
+    exports org.opentravel.ns.ota2.security_v01_00;
+
+}
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/config/FileResource.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/config/FileResource.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/config/FileResource.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/config/FileResource.java
index 8858928d..2c79b6c3 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/config/FileResource.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/config/FileResource.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.config;
+package org.opentravel.repocommon.config;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 
 import java.io.File;
 import java.io.IOException;
@@ -32,7 +32,7 @@ import java.io.IOException;
  */
 public abstract class FileResource<R> {
 
-    private static Log log = LogFactory.getLog( FileResource.class );
+    private static Logger log = LogManager.getLogger( FileResource.class );
     private File dataFile;
     private long lastUpdated = -1;
     private R resource;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/AssemblySearchResult.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/AssemblySearchResult.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/AssemblySearchResult.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/AssemblySearchResult.java
index 870fcdff..137dde15 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/AssemblySearchResult.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/AssemblySearchResult.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.util.BytesRef;
 import org.opentravel.ns.ota2.assembly_v01_00.AssemblyItemType;
@@ -38,7 +38,7 @@ import javax.xml.bind.JAXBException;
  */
 public class AssemblySearchResult extends SearchResult<AssemblyType> {
 
-    private static Log log = LogFactory.getLog( AssemblySearchResult.class );
+    private static Logger log = LogManager.getLogger( AssemblySearchResult.class );
 
     private String assemblyName;
     private String namespace;
@@ -97,7 +97,7 @@ public class AssemblySearchResult extends SearchResult<AssemblyType> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
+     * @see org.opentravel.repocommon.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
      */
     @Override
     protected void initializeItemContent(Document itemDoc) {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/EntitySearchResult.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/EntitySearchResult.java
similarity index 94%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/EntitySearchResult.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/EntitySearchResult.java
index b56631db..f1205405 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/EntitySearchResult.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/EntitySearchResult.java
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.util.BytesRef;
-import org.opentravel.schemacompiler.index.builder.IndexContentHelper;
+import org.opentravel.repocommon.index.builder.IndexContentHelper;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLBusinessObject;
 import org.opentravel.schemacompiler.model.TLChoiceObject;
@@ -39,7 +39,7 @@ import java.util.Set;
  */
 public class EntitySearchResult extends SearchResult<NamedEntity> {
 
-    private static Log log = LogFactory.getLog( EntitySearchResult.class );
+    private static Logger log = LogManager.getLogger( EntitySearchResult.class );
 
     private String itemLocalName;
     private TLLibraryStatus status;
@@ -79,7 +79,7 @@ public class EntitySearchResult extends SearchResult<NamedEntity> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
+     * @see org.opentravel.repocommon.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
      */
     @Override
     protected void initializeItemContent(Document itemDoc) {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/FreeTextSearchService.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/FreeTextSearchService.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/FreeTextSearchService.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/FreeTextSearchService.java
index f47e8132..164dfd4d 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/FreeTextSearchService.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/FreeTextSearchService.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.analysis.standard.StandardAnalyzer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.index.DirectoryReader;
@@ -82,7 +82,7 @@ public abstract class FreeTextSearchService {
         IndexingTerms.EXTENDS_ENTITY_FIELD, IndexingTerms.REFERENCE_IDENTITY_FIELD, IndexingTerms.FACET_OWNER_FIELD ) );
     private static final Set<String> contentAttr = new HashSet<>( Arrays.asList( IndexingTerms.CONTENT_DATA_FIELD ) );
 
-    private static Log log = LogFactory.getLog( FreeTextSearchService.class );
+    private static Logger log = LogManager.getLogger( FreeTextSearchService.class );
 
     protected static Object indexingLock = new Object();
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/FreeTextSearchServiceFactory.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/FreeTextSearchServiceFactory.java
similarity index 96%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/FreeTextSearchServiceFactory.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/FreeTextSearchServiceFactory.java
index 5a0feaec..28156130 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/FreeTextSearchServiceFactory.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/FreeTextSearchServiceFactory.java
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 
 import java.io.File;
@@ -39,7 +39,7 @@ public class FreeTextSearchServiceFactory {
     private static final String JMS_SEARCH_SERVICE_IMPL =
         "org.opentravel.schemacompiler.index.JMSFreeTextSearchService";
 
-    private static Log log = LogFactory.getLog( FreeTextSearchServiceFactory.class );
+    private static Logger log = LogManager.getLogger( FreeTextSearchServiceFactory.class );
 
     private static Map<String,FreeTextSearchService> defaultInstanceMap = new HashMap<>();
     private static Set<Object> serviceOwners = new HashSet<>();
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingConstants.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingConstants.java
similarity index 97%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingConstants.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingConstants.java
index 5d7d103c..4e6636b4 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingConstants.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingConstants.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
 /**
  * Constant definitions used for various aspects of the indexing service.
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingTerms.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingTerms.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingTerms.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingTerms.java
index 5619389c..2b9d9037 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingTerms.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingTerms.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
 /**
  * Constants for all indexing fields and terms used by the free-text search service.
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingUtils.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingUtils.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingUtils.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingUtils.java
index 8a791ae6..dfac5b1e 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/IndexingUtils.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/IndexingUtils.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
 import org.opentravel.ns.ota2.release_v01_00.ReleaseMemberType;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionEventType;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/LibrarySearchResult.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/LibrarySearchResult.java
similarity index 94%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/LibrarySearchResult.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/LibrarySearchResult.java
index a2258070..6f7153f5 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/LibrarySearchResult.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/LibrarySearchResult.java
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.util.BytesRef;
-import org.opentravel.schemacompiler.index.builder.IndexContentHelper;
+import org.opentravel.repocommon.index.builder.IndexContentHelper;
 import org.opentravel.schemacompiler.model.TLLibrary;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.repository.Repository;
@@ -40,7 +40,7 @@ import java.util.Map;
  */
 public class LibrarySearchResult extends SearchResult<TLLibrary> {
 
-    private static Log log = LogFactory.getLog( LibrarySearchResult.class );
+    private static Logger log = LogManager.getLogger( LibrarySearchResult.class );
 
     private RepositoryItem repositoryItem;
     private TLLibraryStatus status;
@@ -99,7 +99,7 @@ public class LibrarySearchResult extends SearchResult<TLLibrary> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
+     * @see org.opentravel.repocommon.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
      */
     @Override
     protected void initializeItemContent(Document itemDoc) {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/RealTimeFreeTextSearchService.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/RealTimeFreeTextSearchService.java
similarity index 81%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/RealTimeFreeTextSearchService.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/RealTimeFreeTextSearchService.java
index e5f8670f..0724f716 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/RealTimeFreeTextSearchService.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/RealTimeFreeTextSearchService.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.analysis.standard.StandardAnalyzer;
 import org.apache.lucene.index.DirectoryReader;
 import org.apache.lucene.index.IndexWriter;
@@ -25,8 +25,8 @@ import org.apache.lucene.index.IndexWriterConfig;
 import org.apache.lucene.index.IndexWriterConfig.OpenMode;
 import org.apache.lucene.store.Directory;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.index.builder.IndexBuilder;
-import org.opentravel.schemacompiler.index.builder.IndexBuilderFactory;
+import org.opentravel.repocommon.index.builder.IndexBuilder;
+import org.opentravel.repocommon.index.builder.IndexBuilderFactory;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 
@@ -42,7 +42,7 @@ import java.util.List;
  */
 public class RealTimeFreeTextSearchService extends FreeTextSearchService {
 
-    private static Log log = LogFactory.getLog( RealTimeFreeTextSearchService.class );
+    private static Logger log = LogManager.getLogger( RealTimeFreeTextSearchService.class );
 
     private IndexWriter indexWriter;
 
@@ -59,7 +59,7 @@ public class RealTimeFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#onStartup(org.apache.lucene.store.Directory)
+     * @see org.opentravel.repocommon.index.FreeTextSearchService#onStartup(org.apache.lucene.store.Directory)
      */
     @Override
     protected void onStartup(Directory indexDirectory) throws IOException {
@@ -70,7 +70,7 @@ public class RealTimeFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#onShutdown()
+     * @see org.opentravel.repocommon.index.FreeTextSearchService#onShutdown()
      */
     @Override
     protected void onShutdown() throws IOException {
@@ -83,7 +83,7 @@ public class RealTimeFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#isIndexingServiceAvailable()
+     * @see org.opentravel.repocommon.index.FreeTextSearchService#isIndexingServiceAvailable()
      */
     @Override
     public boolean isIndexingServiceAvailable() {
@@ -91,7 +91,7 @@ public class RealTimeFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#newIndexReader(org.apache.lucene.store.Directory)
+     * @see org.opentravel.repocommon.index.FreeTextSearchService#newIndexReader(org.apache.lucene.store.Directory)
      */
     @Override
     protected DirectoryReader newIndexReader(Directory indexDirectory) throws IOException {
@@ -99,7 +99,7 @@ public class RealTimeFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#submitIndexingJob(java.util.List, boolean)
+     * @see org.opentravel.repocommon.index.FreeTextSearchService#submitIndexingJob(java.util.List, boolean)
      */
     @Override
     protected void submitIndexingJob(List<RepositoryItem> itemsToIndex, boolean deleteIndex) {
@@ -131,7 +131,7 @@ public class RealTimeFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#submitIndexingJob(org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget)
+     * @see org.opentravel.repocommon.index.FreeTextSearchService#submitIndexingJob(org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget)
      */
     @Override
     protected void submitIndexingJob(SubscriptionTarget subscriptionTarget) {
@@ -149,7 +149,7 @@ public class RealTimeFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#deleteSearchIndex()
+     * @see org.opentravel.repocommon.index.FreeTextSearchService#deleteSearchIndex()
      */
     @Override
     protected void deleteSearchIndex() {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/ReleaseSearchResult.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/ReleaseSearchResult.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/ReleaseSearchResult.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/ReleaseSearchResult.java
index 6608c42a..90b16393 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/ReleaseSearchResult.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/ReleaseSearchResult.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.util.BytesRef;
 import org.opentravel.ns.ota2.release_v01_00.ReleaseMemberType;
@@ -36,7 +36,7 @@ import java.util.List;
  */
 public class ReleaseSearchResult extends SearchResult<Release> {
 
-    private static Log log = LogFactory.getLog( ReleaseSearchResult.class );
+    private static Logger log = LogManager.getLogger( ReleaseSearchResult.class );
 
     private String releaseName;
     private String namespace;
@@ -105,7 +105,7 @@ public class ReleaseSearchResult extends SearchResult<Release> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
+     * @see org.opentravel.repocommon.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
      */
     @Override
     protected void initializeItemContent(Document itemDoc) {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/SearchResult.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/SearchResult.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/SearchResult.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/SearchResult.java
index c0c43af6..98d43bb1 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/SearchResult.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/SearchResult.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 
@@ -26,7 +26,7 @@ import org.opentravel.schemacompiler.repository.RepositoryException;
  */
 public abstract class SearchResult<T> {
 
-    private static Log log = LogFactory.getLog( SearchResult.class );
+    private static Logger log = LogManager.getLogger( SearchResult.class );
 
     private FreeTextSearchService searchService;
     private String searchIndexId;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/SubscriptionSearchResult.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/SubscriptionSearchResult.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/SubscriptionSearchResult.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/SubscriptionSearchResult.java
index 8c52ff85..8876381c 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/SubscriptionSearchResult.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/SubscriptionSearchResult.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionEventType;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/ValidationResult.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/ValidationResult.java
similarity index 91%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/ValidationResult.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/ValidationResult.java
index e6c97274..f596fd90 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/ValidationResult.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/ValidationResult.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.repocommon.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.opentravel.schemacompiler.validate.FindingType;
 import org.opentravel.schemacompiler.validate.ValidationFinding;
@@ -27,7 +27,7 @@ import org.opentravel.schemacompiler.validate.ValidationFinding;
  */
 public class ValidationResult extends SearchResult<ValidationFinding> {
 
-    private static Log log = LogFactory.getLog( ValidationResult.class );
+    private static Logger log = LogManager.getLogger( ValidationResult.class );
 
     private String libraryIndexId;
     private String entityIndexId;
@@ -61,7 +61,7 @@ public class ValidationResult extends SearchResult<ValidationFinding> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
+     * @see org.opentravel.repocommon.index.SearchResult#initializeItemContent(org.apache.lucene.document.Document)
      */
     @Override
     protected void initializeItemContent(Document itemDoc) {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/AssemblyIndexBuilder.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/AssemblyIndexBuilder.java
similarity index 96%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/AssemblyIndexBuilder.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/AssemblyIndexBuilder.java
index 2caa765a..dd239e9f 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/AssemblyIndexBuilder.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/AssemblyIndexBuilder.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.StoredField;
@@ -27,8 +27,8 @@ import org.apache.lucene.index.Term;
 import org.apache.lucene.util.BytesRef;
 import org.opentravel.ns.ota2.assembly_v01_00.AssemblyItemType;
 import org.opentravel.ns.ota2.assembly_v01_00.AssemblyType;
-import org.opentravel.schemacompiler.index.IndexingTerms;
-import org.opentravel.schemacompiler.index.IndexingUtils;
+import org.opentravel.repocommon.index.IndexingTerms;
+import org.opentravel.repocommon.index.IndexingUtils;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.repository.Repository;
 import org.opentravel.schemacompiler.repository.RepositoryException;
@@ -53,7 +53,7 @@ import javax.xml.bind.JAXBException;
  */
 public class AssemblyIndexBuilder extends IndexBuilder<RepositoryItem> {
 
-    private static Log log = LogFactory.getLog( AssemblyIndexBuilder.class );
+    private static Logger log = LogManager.getLogger( AssemblyIndexBuilder.class );
 
     @Override
     protected void createIndex() {
@@ -213,7 +213,7 @@ public class AssemblyIndexBuilder extends IndexBuilder<RepositoryItem> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#deleteIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#deleteIndex()
      */
     @Override
     protected void deleteIndex() {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/EntityIndexBuilder.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/EntityIndexBuilder.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/EntityIndexBuilder.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/EntityIndexBuilder.java
index ec3bb84d..dfcc71a9 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/EntityIndexBuilder.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/EntityIndexBuilder.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.StoredField;
@@ -26,9 +26,9 @@ import org.apache.lucene.document.TextField;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.index.Term;
 import org.apache.lucene.util.BytesRef;
+import org.opentravel.repocommon.index.IndexingTerms;
+import org.opentravel.repocommon.index.IndexingUtils;
 import org.opentravel.schemacompiler.codegen.impl.DocumentationFinder;
-import org.opentravel.schemacompiler.index.IndexingTerms;
-import org.opentravel.schemacompiler.index.IndexingUtils;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLAction;
 import org.opentravel.schemacompiler.model.TLActionFacet;
@@ -85,7 +85,7 @@ import java.util.Set;
  */
 public class EntityIndexBuilder<T extends NamedEntity> extends IndexBuilder<T> {
 
-    private static Log log = LogFactory.getLog( EntityIndexBuilder.class );
+    private static Logger log = LogManager.getLogger( EntityIndexBuilder.class );
 
     private boolean latestVersion;
     private boolean latestVersionAtUnderReview;
@@ -98,7 +98,7 @@ public class EntityIndexBuilder<T extends NamedEntity> extends IndexBuilder<T> {
     private String extendsEntityKey;
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#createIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#createIndex()
      */
     @Override
     public void createIndex() {
@@ -212,7 +212,7 @@ public class EntityIndexBuilder<T extends NamedEntity> extends IndexBuilder<T> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#setSourceObject(java.lang.Object)
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#setSourceObject(java.lang.Object)
      */
     @Override
     public void setSourceObject(T sourceObject) {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/FacetIndexingService.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/FacetIndexingService.java
similarity index 97%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/FacetIndexingService.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/FacetIndexingService.java
index 14426d7c..1df2ad4d 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/FacetIndexingService.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/FacetIndexingService.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.StoredField;
@@ -36,8 +36,8 @@ import org.apache.lucene.search.SearcherManager;
 import org.apache.lucene.search.TermQuery;
 import org.apache.lucene.search.TopDocs;
 import org.apache.lucene.util.BytesRef;
-import org.opentravel.schemacompiler.index.IndexingTerms;
-import org.opentravel.schemacompiler.index.IndexingUtils;
+import org.opentravel.repocommon.index.IndexingTerms;
+import org.opentravel.repocommon.index.IndexingUtils;
 import org.opentravel.schemacompiler.model.TLContextualFacet;
 import org.opentravel.schemacompiler.validate.ValidationFinding;
 
@@ -53,7 +53,7 @@ import java.util.Set;
  */
 public class FacetIndexingService {
 
-    private static Log log = LogFactory.getLog( FacetIndexingService.class );
+    private static Logger log = LogManager.getLogger( FacetIndexingService.class );
 
     private Set<String> rootFacetOwnerIds = new HashSet<>();
     private IndexWriter indexWriter;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexBuilder.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexBuilder.java
similarity index 96%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexBuilder.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexBuilder.java
index 0d65ce99..7edf4600 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexBuilder.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexBuilder.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.index.IndexWriter;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 
@@ -32,7 +32,7 @@ import java.util.regex.Pattern;
  */
 public abstract class IndexBuilder<T> {
 
-    private static Log log = LogFactory.getLog( IndexBuilder.class );
+    private static Logger log = LogManager.getLogger( IndexBuilder.class );
 
     private static Pattern tokenPattern = Pattern.compile( "[A-Za-z0-9]+" );
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexBuilderFactory.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexBuilderFactory.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexBuilderFactory.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexBuilderFactory.java
index 298d6f79..3d40bb91 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexBuilderFactory.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexBuilderFactory.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
 import org.apache.lucene.index.IndexWriter;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexContentHelper.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexContentHelper.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexContentHelper.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexContentHelper.java
index 66075a7c..82e52dd7 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/IndexContentHelper.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/IndexContentHelper.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
 import org.opentravel.ns.ota2.librarymodel_v01_06.Library;
 import org.opentravel.ns.ota2.librarymodel_v01_06.ObjectFactory;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/LibraryIndexBuilder.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/LibraryIndexBuilder.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/LibraryIndexBuilder.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/LibraryIndexBuilder.java
index be3c8716..8bc53bdf 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/LibraryIndexBuilder.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/LibraryIndexBuilder.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.analysis.standard.StandardAnalyzer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
@@ -38,9 +38,9 @@ import org.apache.lucene.search.TermQuery;
 import org.apache.lucene.search.TopDocs;
 import org.apache.lucene.util.BytesRef;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoType;
+import org.opentravel.repocommon.index.IndexingTerms;
+import org.opentravel.repocommon.index.IndexingUtils;
 import org.opentravel.schemacompiler.ic.ImportManagementIntegrityChecker;
-import org.opentravel.schemacompiler.index.IndexingTerms;
-import org.opentravel.schemacompiler.index.IndexingUtils;
 import org.opentravel.schemacompiler.loader.LibraryLoaderException;
 import org.opentravel.schemacompiler.model.LibraryMember;
 import org.opentravel.schemacompiler.model.NamedEntity;
@@ -87,10 +87,10 @@ public class LibraryIndexBuilder extends IndexBuilder<RepositoryItem> {
     private static final Pattern findingSourcePattern = Pattern.compile( "[A-Za-z0-9_]*?\\.otm\\s+\\:\\s+(.*)" );
 
     private static Map<TLLibraryStatus,List<TLLibraryStatus>> inclusiveStatuses;
-    private static Log log = LogFactory.getLog( LibraryIndexBuilder.class );
+    private static Logger log = LogManager.getLogger( LibraryIndexBuilder.class );
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#createIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#createIndex()
      */
     @Override
     public void createIndex() {
@@ -377,7 +377,7 @@ public class LibraryIndexBuilder extends IndexBuilder<RepositoryItem> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#deleteIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#deleteIndex()
      */
     @Override
     public void deleteIndex() {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/ObsoleteBuiltInValidationVisitor.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/ObsoleteBuiltInValidationVisitor.java
similarity index 92%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/ObsoleteBuiltInValidationVisitor.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/ObsoleteBuiltInValidationVisitor.java
index eef7cc41..1e88f6b5 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/ObsoleteBuiltInValidationVisitor.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/ObsoleteBuiltInValidationVisitor.java
@@ -14,8 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.loader.LibraryInputSource;
 import org.opentravel.schemacompiler.loader.LibraryModelLoader;
 import org.opentravel.schemacompiler.loader.impl.LibraryStreamInputSource;
@@ -24,8 +26,6 @@ import org.opentravel.schemacompiler.model.TLModel;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.transform.util.ObsoleteBuiltInVisitor;
 import org.opentravel.schemacompiler.util.URLUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.io.File;
 import java.io.InputStream;
@@ -41,7 +41,7 @@ public class ObsoleteBuiltInValidationVisitor extends ObsoleteBuiltInVisitor {
     private static final String OTA_SIMPLE_TYPES_PATH =
         "/http/org/opentravel/www/otm/common/0.0.0/OTA_SimpleTypes_0_0_0.otm";
 
-    private static Logger log = LoggerFactory.getLogger( ObsoleteBuiltInValidationVisitor.class );
+    private static Logger log = LogManager.getLogger( ObsoleteBuiltInValidationVisitor.class );
 
     /**
      * @see org.opentravel.schemacompiler.transform.util.ObsoleteBuiltInVisitor#loadObsoleteBuiltIn()
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/ReleaseIndexBuilder.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/ReleaseIndexBuilder.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/ReleaseIndexBuilder.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/ReleaseIndexBuilder.java
index b36e34f5..2b64b83d 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/ReleaseIndexBuilder.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/ReleaseIndexBuilder.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.StoredField;
@@ -28,8 +28,8 @@ import org.apache.lucene.util.BytesRef;
 import org.opentravel.ns.ota2.release_v01_00.ReleaseIdentityType;
 import org.opentravel.ns.ota2.release_v01_00.ReleaseMemberType;
 import org.opentravel.ns.ota2.release_v01_00.ReleaseType;
-import org.opentravel.schemacompiler.index.IndexingTerms;
-import org.opentravel.schemacompiler.index.IndexingUtils;
+import org.opentravel.repocommon.index.IndexingTerms;
+import org.opentravel.repocommon.index.IndexingUtils;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.repository.Release;
 import org.opentravel.schemacompiler.repository.RepositoryException;
@@ -53,10 +53,10 @@ import javax.xml.bind.JAXBException;
  */
 public class ReleaseIndexBuilder extends IndexBuilder<RepositoryItem> {
 
-    private static Log log = LogFactory.getLog( ReleaseIndexBuilder.class );
+    private static Logger log = LogManager.getLogger( ReleaseIndexBuilder.class );
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#createIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#createIndex()
      */
     @Override
     protected void createIndex() {
@@ -184,7 +184,7 @@ public class ReleaseIndexBuilder extends IndexBuilder<RepositoryItem> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#deleteIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#deleteIndex()
      */
     @Override
     protected void deleteIndex() {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/SubscriptionIndexBuilder.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/SubscriptionIndexBuilder.java
similarity index 87%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/SubscriptionIndexBuilder.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/SubscriptionIndexBuilder.java
index 36821fcb..7dc64949 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/index/builder/SubscriptionIndexBuilder.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/index/builder/SubscriptionIndexBuilder.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index.builder;
+package org.opentravel.repocommon.index.builder;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.StringField;
@@ -25,10 +25,10 @@ import org.apache.lucene.index.Term;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.Subscription;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionList;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.index.IndexingTerms;
-import org.opentravel.schemacompiler.index.IndexingUtils;
+import org.opentravel.repocommon.index.IndexingTerms;
+import org.opentravel.repocommon.index.IndexingUtils;
+import org.opentravel.repocommon.subscription.SubscriptionManager;
 import org.opentravel.schemacompiler.repository.RepositoryException;
-import org.opentravel.schemacompiler.subscription.SubscriptionManager;
 
 import java.io.IOException;
 
@@ -37,10 +37,10 @@ import java.io.IOException;
  */
 public class SubscriptionIndexBuilder extends IndexBuilder<SubscriptionTarget> {
 
-    private static Log log = LogFactory.getLog( SubscriptionIndexBuilder.class );
+    private static Logger log = LogManager.getLogger( SubscriptionIndexBuilder.class );
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#createIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#createIndex()
      */
     @Override
     protected void createIndex() {
@@ -90,7 +90,7 @@ public class SubscriptionIndexBuilder extends IndexBuilder<SubscriptionTarget> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.builder.IndexBuilder#deleteIndex()
+     * @see org.opentravel.repocommon.index.builder.IndexBuilder#deleteIndex()
      */
     @Override
     protected void deleteIndex() {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMBasicStatsMBean.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMBasicStatsMBean.java
similarity index 96%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMBasicStatsMBean.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMBasicStatsMBean.java
index 969d5621..c20bdfec 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMBasicStatsMBean.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMBasicStatsMBean.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.jmx;
+package org.opentravel.repocommon.jmx;
 
 /**
  * MBean interface that provides basic monitoring statistics for the JVM process.
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMRepositoryStats.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMRepositoryStats.java
similarity index 83%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMRepositoryStats.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMRepositoryStats.java
index bebc0f57..1ff1c8be 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMRepositoryStats.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMRepositoryStats.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.jmx;
+package org.opentravel.repocommon.jmx;
 
 import java.io.File;
 
@@ -108,7 +108,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#isRepositoryAvailable()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#isRepositoryAvailable()
      */
     @Override
     public boolean isRepositoryAvailable() {
@@ -116,7 +116,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#isSvnServiceAvailable()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#isSvnServiceAvailable()
      */
     @Override
     public boolean isSvnServiceAvailable() {
@@ -124,7 +124,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#isSvnUserConfigOk()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#isSvnUserConfigOk()
      */
     @Override
     public boolean isSvnUserConfigOk() {
@@ -132,7 +132,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#getSvnServerDiskUtilization()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#getSvnServerDiskUtilization()
      */
     @Override
     public double getSvnServerDiskUtilization() {
@@ -140,7 +140,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#getSvnServerDiskMaxGB()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#getSvnServerDiskMaxGB()
      */
     @Override
     public int getSvnServerDiskMaxGB() {
@@ -148,7 +148,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#getRepositoryDataDiskUtilization()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#getRepositoryDataDiskUtilization()
      */
     @Override
     public double getRepositoryDataDiskUtilization() {
@@ -156,7 +156,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#getRepositoryDataDiskMaxGB()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#getRepositoryDataDiskMaxGB()
      */
     @Override
     public int getRepositoryDataDiskMaxGB() {
@@ -164,7 +164,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#getSearchIndexDiskUtilization()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#getSearchIndexDiskUtilization()
      */
     @Override
     public double getSearchIndexDiskUtilization() {
@@ -172,7 +172,7 @@ public class OTMRepositoryStats extends OTMStandardMBean implements OTMRepositor
     }
 
     /**
-     * @see org.opentravel.schemacompiler.jmx.OTMRepositoryStatsMBean#getSearchIndexDiskMaxGB()
+     * @see org.opentravel.repocommon.jmx.OTMRepositoryStatsMBean#getSearchIndexDiskMaxGB()
      */
     @Override
     public int getSearchIndexDiskMaxGB() {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMRepositoryStatsMBean.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMRepositoryStatsMBean.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMRepositoryStatsMBean.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMRepositoryStatsMBean.java
index e7dac2a8..aea10c4c 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMRepositoryStatsMBean.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMRepositoryStatsMBean.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.jmx;
+package org.opentravel.repocommon.jmx;
 
 /**
  * MBean interface for monitoring and management of the OTM repository process.
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMStandardMBean.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMStandardMBean.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMStandardMBean.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMStandardMBean.java
index 8d5d31ee..2e4eba96 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/jmx/OTMStandardMBean.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/jmx/OTMStandardMBean.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.jmx;
+package org.opentravel.repocommon.jmx;
 
 import java.io.File;
 import java.lang.management.ManagementFactory;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/lock/LockableResource.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/lock/LockableResource.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/lock/LockableResource.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/lock/LockableResource.java
index c6823985..6cad3298 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/lock/LockableResource.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/lock/LockableResource.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.lock;
+package org.opentravel.repocommon.lock;
 
 /**
  * Identity of a resource for which a read/write lock can be obtained.
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/lock/RepositoryLockManager.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/lock/RepositoryLockManager.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/lock/RepositoryLockManager.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/lock/RepositoryLockManager.java
index 75ed5c44..204d7deb 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/lock/RepositoryLockManager.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/lock/RepositoryLockManager.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.lock;
+package org.opentravel.repocommon.lock;
 
 import org.opentravel.schemacompiler.repository.RepositoryException;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/notification/NotificationConstants.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/notification/NotificationConstants.java
similarity index 96%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/notification/NotificationConstants.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/notification/NotificationConstants.java
index f1804496..8bc24e3b 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/notification/NotificationConstants.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/notification/NotificationConstants.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.notification;
+package org.opentravel.repocommon.notification;
 
 /**
  * Constant definitions used by the notification service.
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/notification/NotificationService.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/notification/NotificationService.java
similarity index 97%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/notification/NotificationService.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/notification/NotificationService.java
index 7a0487df..8c0f0dfc 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/notification/NotificationService.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/notification/NotificationService.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.notification;
+package org.opentravel.repocommon.notification;
 
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/RepositoryComponentFactory.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/RepositoryComponentFactory.java
similarity index 96%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/RepositoryComponentFactory.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/RepositoryComponentFactory.java
index 6baf3795..902044b6 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/RepositoryComponentFactory.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/RepositoryComponentFactory.java
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.repocommon.repository;
 
-import org.opentravel.schemacompiler.notification.NotificationService;
-import org.opentravel.schemacompiler.security.AuthenticationProvider;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.subscription.SubscriptionManager;
+import org.opentravel.repocommon.notification.NotificationService;
+import org.opentravel.repocommon.security.AuthenticationProvider;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.subscription.SubscriptionManager;
+import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.springframework.beans.factory.NoSuchBeanDefinitionException;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.support.ClassPathXmlApplicationContext;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/RepositoryMetadataResource.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/RepositoryMetadataResource.java
similarity index 87%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/RepositoryMetadataResource.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/RepositoryMetadataResource.java
index 9aa3210f..8396d98c 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/RepositoryMetadataResource.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/RepositoryMetadataResource.java
@@ -14,10 +14,12 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.repocommon.repository;
 
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.RepositoryInfoType;
-import org.opentravel.schemacompiler.config.FileResource;
+import org.opentravel.repocommon.config.FileResource;
+import org.opentravel.schemacompiler.repository.RepositoryException;
+import org.opentravel.schemacompiler.repository.RepositoryFileManager;
 import org.opentravel.schemacompiler.repository.impl.DefaultRepositoryFileManager;
 
 import java.io.File;
@@ -44,7 +46,7 @@ public class RepositoryMetadataResource extends FileResource<RepositoryInfoType>
     }
 
     /**
-     * @see org.opentravel.schemacompiler.config.FileResource#loadResource(java.io.File)
+     * @see org.opentravel.repocommon.config.FileResource#loadResource(java.io.File)
      */
     @Override
     protected RepositoryInfoType loadResource(File dataFile) throws IOException {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/SVNRepositoryFileManager.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/SVNRepositoryFileManager.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/SVNRepositoryFileManager.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/SVNRepositoryFileManager.java
index 247b186d..861aa9a6 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/repository/SVNRepositoryFileManager.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/repository/SVNRepositoryFileManager.java
@@ -14,11 +14,13 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.repocommon.repository;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.jmx.OTMRepositoryStats;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.jmx.OTMRepositoryStats;
+import org.opentravel.schemacompiler.repository.RepositoryException;
+import org.opentravel.schemacompiler.repository.RepositoryFileManager;
 import org.opentravel.schemacompiler.util.FileUtils;
 import org.tmatesoft.svn.core.SVNCancelException;
 import org.tmatesoft.svn.core.SVNDepth;
@@ -66,7 +68,7 @@ public class SVNRepositoryFileManager extends RepositoryFileManager {
     private static final String USER_COMMIT_MESSAGE = "Committed by repository user: {0}.";
 
     private static Object svnCommitLock = new Object();
-    private static Log log = LogFactory.getLog( SVNRepositoryFileManager.class );
+    private static Logger log = LogManager.getLogger( SVNRepositoryFileManager.class );
 
     private ThreadLocal<Set<File>> svnChangeSet = ThreadLocal.withInitial( HashSet::new );
 
@@ -103,7 +105,7 @@ public class SVNRepositoryFileManager extends RepositoryFileManager {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryFileManager#commitChangeSet(java.util.Set)
+     * @see org.opentravel.repocommon.repository.RepositoryFileManager#commitChangeSet(java.util.Set)
      */
     @Override
     protected void commitChangeSet(Set<File> changeSet) throws RepositoryException {
@@ -132,7 +134,7 @@ public class SVNRepositoryFileManager extends RepositoryFileManager {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryFileManager#rollbackChangeSet(java.util.Set)
+     * @see org.opentravel.repocommon.repository.RepositoryFileManager#rollbackChangeSet(java.util.Set)
      */
     @Override
     protected void rollbackChangeSet(Set<File> changeSet) throws RepositoryException {
@@ -272,8 +274,10 @@ public class SVNRepositoryFileManager extends RepositoryFileManager {
 
         try {
             if (rootFolderLocation.exists()) {
-                svnClient.getStatusClient().doStatus( rootFolderLocation, SVNRevision.HEAD, SVNDepth.INFINITY, false,
-                    false, false, false, new RepositorySVNStatusHandler(), null );
+                SVNStatusClient c = svnClient.getStatusClient();
+
+                c.doStatus( rootFolderLocation, SVNRevision.HEAD, SVNDepth.INFINITY, false, false, false, false,
+                    new RepositorySVNStatusHandler(), null );
             }
         } catch (SVNException e) {
             log.error( "Error constructing SVN change set for all repository content.", e );
@@ -335,7 +339,10 @@ public class SVNRepositoryFileManager extends RepositoryFileManager {
         public void handleStatus(SVNStatus status) throws SVNException {
             File file = status.getFile();
 
-            if ((status.getContentsStatus() == SVNStatusType.CHANGED)
+            if (status.getContentsStatus() == SVNStatusType.STATUS_NORMAL) {
+                // No action required
+
+            } else if ((status.getContentsStatus() == SVNStatusType.CHANGED)
                 || (status.getContentsStatus() == SVNStatusType.STATUS_MODIFIED)) {
                 log.info( "Adding Modified File to SVN Change Set: " + file.getAbsolutePath() );
                 svnChangeSet.get().add( file );
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthenticationProvider.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthenticationProvider.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthenticationProvider.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthenticationProvider.java
index 22c86ec4..6d5b783d 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthenticationProvider.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthenticationProvider.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo;
 import org.opentravel.schemacompiler.repository.RepositoryException;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthorizationProvider.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthorizationProvider.java
similarity index 96%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthorizationProvider.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthorizationProvider.java
index d5bb87b4..c9bb97e1 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthorizationProvider.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthorizationProvider.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthorizationResource.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthorizationResource.java
similarity index 94%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthorizationResource.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthorizationResource.java
index b810ac3c..b475ec45 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/AuthorizationResource.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/AuthorizationResource.java
@@ -14,16 +14,16 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import org.opentravel.ns.ota2.security_v01_00.AuthorizationSpec;
 import org.opentravel.ns.ota2.security_v01_00.NamespaceAuthorizations;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
-import org.opentravel.schemacompiler.config.FileResource;
+import org.opentravel.repocommon.config.FileResource;
+import org.opentravel.repocommon.security.impl.SecurityFileUtils;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryFileManager;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
-import org.opentravel.schemacompiler.security.impl.SecurityFileUtils;
 
 import java.io.File;
 import java.io.IOException;
@@ -124,7 +124,7 @@ public class AuthorizationResource extends FileResource<NamespaceAuthorizations>
     }
 
     /**
-     * @see org.opentravel.schemacompiler.config.FileResource#getDefaultResourceValue()
+     * @see org.opentravel.repocommon.config.FileResource#getDefaultResourceValue()
      */
     @Override
     protected NamespaceAuthorizations getDefaultResourceValue() {
@@ -132,7 +132,7 @@ public class AuthorizationResource extends FileResource<NamespaceAuthorizations>
     }
 
     /**
-     * @see org.opentravel.schemacompiler.config.FileResource#loadResource(java.io.File)
+     * @see org.opentravel.repocommon.config.FileResource#loadResource(java.io.File)
      */
     @Override
     protected NamespaceAuthorizations loadResource(File dataFile) throws IOException {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/GroupAssignmentsResource.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/GroupAssignmentsResource.java
similarity index 94%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/GroupAssignmentsResource.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/GroupAssignmentsResource.java
index efc41273..0ba55137 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/GroupAssignmentsResource.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/GroupAssignmentsResource.java
@@ -14,15 +14,15 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import org.opentravel.ns.ota2.security_v01_00.Group;
 import org.opentravel.ns.ota2.security_v01_00.GroupAssignments;
-import org.opentravel.schemacompiler.config.FileResource;
+import org.opentravel.repocommon.config.FileResource;
+import org.opentravel.repocommon.security.impl.SecurityFileUtils;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryFileManager;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
-import org.opentravel.schemacompiler.security.impl.SecurityFileUtils;
 
 import java.io.File;
 import java.io.IOException;
@@ -122,7 +122,7 @@ public class GroupAssignmentsResource extends FileResource<Map<String,List<Strin
     }
 
     /**
-     * @see org.opentravel.schemacompiler.config.FileResource#getDefaultResourceValue()
+     * @see org.opentravel.repocommon.config.FileResource#getDefaultResourceValue()
      */
     @Override
     protected Map<String,List<String>> getDefaultResourceValue() {
@@ -130,7 +130,7 @@ public class GroupAssignmentsResource extends FileResource<Map<String,List<Strin
     }
 
     /**
-     * @see org.opentravel.schemacompiler.config.FileResource#loadResource(java.io.File)
+     * @see org.opentravel.repocommon.config.FileResource#loadResource(java.io.File)
      */
     @Override
     protected Map<String,List<String>> loadResource(File dataFile) throws IOException {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/PasswordValidator.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/PasswordValidator.java
similarity index 94%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/PasswordValidator.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/PasswordValidator.java
index 48554551..a185798a 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/PasswordValidator.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/PasswordValidator.java
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.security.impl.Base64;
-import org.opentravel.schemacompiler.security.impl.ByteChunk;
-import org.opentravel.schemacompiler.security.impl.CharChunk;
-import org.opentravel.schemacompiler.security.impl.HexUtils;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.security.impl.Base64;
+import org.opentravel.repocommon.security.impl.ByteChunk;
+import org.opentravel.repocommon.security.impl.CharChunk;
+import org.opentravel.repocommon.security.impl.HexUtils;
+import org.opentravel.schemacompiler.security.PasswordHelper;
 
 import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
@@ -35,7 +36,7 @@ import java.util.Arrays;
  */
 public class PasswordValidator {
 
-    private static Log log = LogFactory.getLog( PasswordValidator.class );
+    private static Logger log = LogManager.getLogger( PasswordValidator.class );
 
     private MessageDigest messageDigest = null;
     private String digestEncoding = null;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/RepositorySecurityManager.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/RepositorySecurityManager.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/RepositorySecurityManager.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/RepositorySecurityManager.java
index 295396ca..f4696bdd 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/RepositorySecurityManager.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/RepositorySecurityManager.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
 import org.opentravel.schemacompiler.repository.RepositoryException;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/UserGroup.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/UserGroup.java
similarity index 97%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/UserGroup.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/UserGroup.java
index 29d53027..ed5f2a1e 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/UserGroup.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/UserGroup.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/UserPrincipal.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/UserPrincipal.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/UserPrincipal.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/UserPrincipal.java
index a444ca80..0d5a896b 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/UserPrincipal.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/UserPrincipal.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/AbstractAuthenticationProvider.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/AbstractAuthenticationProvider.java
similarity index 93%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/AbstractAuthenticationProvider.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/AbstractAuthenticationProvider.java
index 5b31981e..efd819cc 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/AbstractAuthenticationProvider.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/AbstractAuthenticationProvider.java
@@ -14,17 +14,17 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.ObjectFactory;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.RepositoryUsers;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo;
+import org.opentravel.repocommon.security.AuthenticationProvider;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryFileManager;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
-import org.opentravel.schemacompiler.security.AuthenticationProvider;
 import org.opentravel.schemacompiler.util.ClasspathResourceResolver;
 import org.opentravel.schemacompiler.util.FileUtils;
 import org.opentravel.schemacompiler.xml.NamespacePrefixMapper;
@@ -63,14 +63,14 @@ public abstract class AbstractAuthenticationProvider implements AuthenticationPr
     private static ObjectFactory objectFactory = new ObjectFactory();
     private static JAXBContext jaxbContext;
 
-    private static Log log = LogFactory.getLog( AbstractAuthenticationProvider.class );
+    private static Logger log = LogManager.getLogger( AbstractAuthenticationProvider.class );
 
     private RepositoryManager repositoryManager;
     private long userFileLastModified = Integer.MIN_VALUE;
     protected Map<String,UserInfo> userRegistry;
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#getUserInfo(java.lang.String)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#getUserInfo(java.lang.String)
      */
     @Override
     public UserInfo getUserInfo(String userId) {
@@ -82,7 +82,7 @@ public abstract class AbstractAuthenticationProvider implements AuthenticationPr
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#getAllUsers()
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#getAllUsers()
      */
     @Override
     public List<UserInfo> getAllUsers() {
@@ -95,7 +95,7 @@ public abstract class AbstractAuthenticationProvider implements AuthenticationPr
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#addUser(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#addUser(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
      */
     @Override
     public void addUser(UserInfo userInfo) throws RepositoryException {
@@ -111,7 +111,7 @@ public abstract class AbstractAuthenticationProvider implements AuthenticationPr
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#updateUser(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#updateUser(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
      */
     @Override
     public void updateUser(UserInfo userInfo) throws RepositoryException {
@@ -139,7 +139,7 @@ public abstract class AbstractAuthenticationProvider implements AuthenticationPr
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#deleteUser(java.lang.String)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#deleteUser(java.lang.String)
      */
     @Override
     public void deleteUser(String userId) throws RepositoryException {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/Base64.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/Base64.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/Base64.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/Base64.java
index f827e356..4281aee4 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/Base64.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/Base64.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import java.nio.charset.StandardCharsets;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/ByteChunk.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/ByteChunk.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/ByteChunk.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/ByteChunk.java
index 93ee23ce..190d78c3 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/ByteChunk.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/ByteChunk.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 /**
  * This class is used to represent a chunk of bytes, and utilities to manipulate byte[].
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/CharChunk.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/CharChunk.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/CharChunk.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/CharChunk.java
index db53abe0..05f66dd8 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/CharChunk.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/CharChunk.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import java.util.Arrays;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/DefaultAuthorizationProvider.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/DefaultAuthorizationProvider.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/DefaultAuthorizationProvider.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/DefaultAuthorizationProvider.java
index 89181347..25cec7a4 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/DefaultAuthorizationProvider.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/DefaultAuthorizationProvider.java
@@ -14,18 +14,18 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.security_v01_00.AuthorizationSpec;
 import org.opentravel.ns.ota2.security_v01_00.NamespaceAuthorizations;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
+import org.opentravel.repocommon.security.AuthorizationProvider;
+import org.opentravel.repocommon.security.AuthorizationResource;
+import org.opentravel.repocommon.security.UserPrincipal;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
-import org.opentravel.schemacompiler.security.AuthorizationProvider;
-import org.opentravel.schemacompiler.security.AuthorizationResource;
-import org.opentravel.schemacompiler.security.UserPrincipal;
 
 import java.io.File;
 import java.net.URI;
@@ -43,7 +43,7 @@ import java.util.Set;
  */
 public class DefaultAuthorizationProvider implements AuthorizationProvider {
 
-    private Log log = LogFactory.getLog( DefaultAuthorizationProvider.class );
+    private Logger log = LogManager.getLogger( DefaultAuthorizationProvider.class );
 
     private Map<String,AuthorizationResource> authorizationCache = new HashMap<>();
     private SecurityFileUtils fileUtils;
@@ -63,7 +63,7 @@ public class DefaultAuthorizationProvider implements AuthorizationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthorizationProvider#getAuthorization(org.opentravel.schemacompiler.security.UserPrincipal,
+     * @see org.opentravel.repocommon.security.AuthorizationProvider#getAuthorization(org.opentravel.repocommon.security.UserPrincipal,
      *      java.lang.String)
      */
     @Override
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/DefaultRepositorySecurityManager.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/DefaultRepositorySecurityManager.java
similarity index 80%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/DefaultRepositorySecurityManager.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/DefaultRepositorySecurityManager.java
index 6e0c6e77..bc7ee603 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/DefaultRepositorySecurityManager.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/DefaultRepositorySecurityManager.java
@@ -14,23 +14,22 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
-import org.apache.commons.codec.binary.Base64;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
+import org.opentravel.repocommon.security.AuthenticationProvider;
+import org.opentravel.repocommon.security.AuthorizationProvider;
+import org.opentravel.repocommon.security.GroupAssignmentsResource;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserGroup;
+import org.opentravel.repocommon.security.UserPrincipal;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.RepositoryNamespaceUtils;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
-import org.opentravel.schemacompiler.security.AuthenticationProvider;
-import org.opentravel.schemacompiler.security.AuthorizationProvider;
-import org.opentravel.schemacompiler.security.GroupAssignmentsResource;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserGroup;
-import org.opentravel.schemacompiler.security.UserPrincipal;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -65,7 +64,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#getUser(java.lang.String)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#getUser(java.lang.String)
      */
     @Override
     public UserPrincipal getUser(String userId) {
@@ -76,7 +75,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#getAllUsers()
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#getAllUsers()
      */
     @Override
     public List<UserPrincipal> getAllUsers() {
@@ -91,7 +90,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#authenticateUser(java.lang.String)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#authenticateUser(java.lang.String)
      */
     @Override
     public UserPrincipal authenticateUser(String authorizationHeader) throws RepositorySecurityException {
@@ -109,7 +108,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#authenticateUser(java.lang.String,
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#authenticateUser(java.lang.String,
      *      java.lang.String)
      */
     @Override
@@ -132,7 +131,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#addUser(org.opentravel.schemacompiler.security.UserPrincipal)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#addUser(org.opentravel.repocommon.security.UserPrincipal)
      */
     @Override
     public void addUser(UserPrincipal user) throws RepositoryException {
@@ -140,7 +139,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#updateUser(org.opentravel.schemacompiler.security.UserPrincipal)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#updateUser(org.opentravel.repocommon.security.UserPrincipal)
      */
     @Override
     public void updateUser(UserPrincipal user) throws RepositoryException {
@@ -148,7 +147,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#deleteUser(java.lang.String)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#deleteUser(java.lang.String)
      */
     @Override
     public void deleteUser(String userId) throws RepositoryException {
@@ -156,7 +155,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#setUserPassword(java.lang.String,
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#setUserPassword(java.lang.String,
      *      java.lang.String)
      */
     @Override
@@ -181,7 +180,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#isAuthorized(org.opentravel.schemacompiler.security.UserPrincipal,java.lang.String,
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#isAuthorized(org.opentravel.repocommon.security.UserPrincipal,java.lang.String,
      *      org.opentravel.ns.ota2.security_v01_00.RepositoryPermission)
      */
     @Override
@@ -217,8 +216,8 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#isReadAuthorized(org.opentravel.schemacompiler.security.UserPrincipal,
-     *      org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#isReadAuthorized(org.opentravel.repocommon.security.UserPrincipal,
+     *      org.opentravel.repocommon.repository.RepositoryItem)
      */
     @Override
     public boolean isReadAuthorized(UserPrincipal user, RepositoryItem item) throws RepositorySecurityException {
@@ -235,8 +234,8 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#isWriteAuthorized(org.opentravel.schemacompiler.security.UserPrincipal,
-     *      org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#isWriteAuthorized(org.opentravel.repocommon.security.UserPrincipal,
+     *      org.opentravel.repocommon.repository.RepositoryItem)
      */
     @Override
     public boolean isWriteAuthorized(UserPrincipal user, RepositoryItem item) throws RepositorySecurityException {
@@ -252,8 +251,8 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#isPromoteAuthorized(org.opentravel.schemacompiler.security.UserPrincipal,
-     *      org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#isPromoteAuthorized(org.opentravel.repocommon.security.UserPrincipal,
+     *      org.opentravel.repocommon.repository.RepositoryItem)
      */
     @Override
     public boolean isPromoteAuthorized(UserPrincipal user, RepositoryItem item) throws RepositorySecurityException {
@@ -269,7 +268,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#isAdministrator(org.opentravel.schemacompiler.security.UserPrincipal)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#isAdministrator(org.opentravel.repocommon.security.UserPrincipal)
      */
     @Override
     public boolean isAdministrator(UserPrincipal user) {
@@ -282,7 +281,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#getAuthorization(org.opentravel.schemacompiler.security.UserPrincipal,
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#getAuthorization(org.opentravel.repocommon.security.UserPrincipal,
      *      java.lang.String)
      */
     @Override
@@ -303,7 +302,8 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
      */
     public static String[] getAuthorizationCredentials(String authorizationHeader) throws RepositorySecurityException {
         if ((authorizationHeader != null) && authorizationHeader.startsWith( "Basic " )) {
-            String credentials = new String( Base64.decodeBase64( authorizationHeader.substring( 6 ) ) );
+            String credentials =
+                new String( org.apache.commons.codec.binary.Base64.decodeBase64( authorizationHeader.substring( 6 ) ) );
             int colonIdx = credentials.indexOf( ':' );
             String userId = "";
             String password = "";
@@ -329,7 +329,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#getGroupNames()
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#getGroupNames()
      */
     @Override
     public List<String> getGroupNames() throws RepositorySecurityException {
@@ -338,7 +338,7 @@ public class DefaultRepositorySecurityManager implements RepositorySecurityManag
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.RepositorySecurityManager#getGroup(java.lang.String)
+     * @see org.opentravel.repocommon.security.RepositorySecurityManager#getGroup(java.lang.String)
      */
     @Override
     public UserGroup getGroup(String groupName) throws RepositorySecurityException {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/FileAuthenticationProvider.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/FileAuthenticationProvider.java
similarity index 83%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/FileAuthenticationProvider.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/FileAuthenticationProvider.java
index 027294b6..68985585 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/FileAuthenticationProvider.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/FileAuthenticationProvider.java
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo;
+import org.opentravel.repocommon.security.UserPrincipal;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.security.PasswordHelper;
-import org.opentravel.schemacompiler.security.UserPrincipal;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -35,7 +35,7 @@ public class FileAuthenticationProvider extends AbstractAuthenticationProvider {
     private static Pattern userIdPattern = Pattern.compile( "[A-Za-z_][A-Za-z0-9\\.\\-_]*" );
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#isValidUser(java.lang.String,java.lang.String)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#isValidUser(java.lang.String,java.lang.String)
      */
     @Override
     public boolean isValidUser(String userId, String password) {
@@ -50,7 +50,7 @@ public class FileAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.impl.AbstractAuthenticationProvider#validateUserInfo(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
+     * @see org.opentravel.repocommon.security.impl.impl.AbstractAuthenticationProvider#validateUserInfo(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
      */
     @Override
     protected void validateUserInfo(UserInfo userInfo) throws RepositoryException {
@@ -66,7 +66,7 @@ public class FileAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#setUserPassword(java.lang.String,
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#setUserPassword(java.lang.String,
      *      java.lang.String)
      */
     @Override
@@ -91,7 +91,7 @@ public class FileAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#searchCandidateUsers(java.lang.String, int)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#searchCandidateUsers(java.lang.String, int)
      */
     @Override
     public List<UserPrincipal> searchCandidateUsers(String searchCriteria, int maxResults) throws RepositoryException {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/HexUtils.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/HexUtils.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/HexUtils.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/HexUtils.java
index f7c772c5..0ab53e71 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/HexUtils.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/HexUtils.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import java.io.ByteArrayOutputStream;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/JNDIAuthenticationProvider.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/JNDIAuthenticationProvider.java
similarity index 97%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/JNDIAuthenticationProvider.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/JNDIAuthenticationProvider.java
index fa957331..3fd2b030 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/JNDIAuthenticationProvider.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/JNDIAuthenticationProvider.java
@@ -14,16 +14,16 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo;
+import org.opentravel.repocommon.security.PasswordValidator;
+import org.opentravel.repocommon.security.UserPrincipal;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
 import org.opentravel.schemacompiler.security.PasswordHelper;
-import org.opentravel.schemacompiler.security.PasswordValidator;
-import org.opentravel.schemacompiler.security.UserPrincipal;
 
 import java.security.NoSuchAlgorithmException;
 import java.text.MessageFormat;
@@ -255,7 +255,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     private static final String REQUIRED_SEARCH_PROPERTY =
         " property is a required value for the JNDI user-search mode.";
     private static final String ERROR_CLOSING_JNDI_CONTEXT = "Error closing JNDI context.";
-    private static Log log = LogFactory.getLog( JNDIAuthenticationProvider.class );
+    private static Logger log = LogManager.getLogger( JNDIAuthenticationProvider.class );
 
     private enum AuthenticationMode {
         USER_LOOKUP, USER_SEARCH
@@ -294,7 +294,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     private PasswordValidator passwordValidator;
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#isValidUser(java.lang.String,java.lang.String)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#isValidUser(java.lang.String,java.lang.String)
      */
     @Override
     public boolean isValidUser(String userId, String password) throws RepositorySecurityException {
@@ -320,7 +320,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#setUserPassword(java.lang.String,
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#setUserPassword(java.lang.String,
      *      java.lang.String)
      */
     @Override
@@ -330,7 +330,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.impl.AbstractAuthenticationProvider#deleteUser(java.lang.String)
+     * @see org.opentravel.repocommon.security.impl.impl.AbstractAuthenticationProvider#deleteUser(java.lang.String)
      */
     @Override
     public void deleteUser(String userId) throws RepositoryException {
@@ -340,7 +340,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.AuthenticationProvider#searchCandidateUsers(java.lang.String, int)
+     * @see org.opentravel.repocommon.security.AuthenticationProvider#searchCandidateUsers(java.lang.String, int)
      */
     @Override
     public List<UserPrincipal> searchCandidateUsers(String searchCriteria, int maxResults) throws RepositoryException {
@@ -503,7 +503,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     /**
      * Verifies that the user has a valid account in the directory.
      * 
-     * @see org.opentravel.schemacompiler.security.impl.AbstractAuthenticationProvider#validateUserInfo(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
+     * @see org.opentravel.repocommon.security.impl.impl.AbstractAuthenticationProvider#validateUserInfo(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
      */
     @Override
     protected void validateUserInfo(UserInfo userInfo) throws RepositoryException {
@@ -512,7 +512,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.impl.AbstractAuthenticationProvider#refreshUserInfo(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
+     * @see org.opentravel.repocommon.security.impl.impl.AbstractAuthenticationProvider#refreshUserInfo(org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo)
      */
     @Override
     protected void refreshUserInfo(UserInfo userInfo) {
@@ -593,7 +593,7 @@ public class JNDIAuthenticationProvider extends AbstractAuthenticationProvider {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.security.impl.AbstractAuthenticationProvider#refreshAllUsers()
+     * @see org.opentravel.repocommon.security.impl.impl.AbstractAuthenticationProvider#refreshAllUsers()
      */
     @Override
     protected void refreshAllUsers() {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/SecurityFileUtils.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/SecurityFileUtils.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/SecurityFileUtils.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/SecurityFileUtils.java
index 6d66989e..cc03e6e8 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/security/impl/SecurityFileUtils.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/security/impl/SecurityFileUtils.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import org.opentravel.ns.ota2.security_v01_00.GroupAssignments;
 import org.opentravel.ns.ota2.security_v01_00.NamespaceAuthorizations;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/RepositoryActionType.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/RepositoryActionType.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/RepositoryActionType.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/RepositoryActionType.java
index 8dcd01ea..ade20d6f 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/RepositoryActionType.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/RepositoryActionType.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionEventType;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/RepositorySubscriptionListener.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/RepositorySubscriptionListener.java
similarity index 78%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/RepositorySubscriptionListener.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/RepositorySubscriptionListener.java
index f272bc59..8e6dda0f 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/RepositorySubscriptionListener.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/RepositorySubscriptionListener.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryListener;
@@ -32,7 +32,7 @@ import java.util.List;
 public class RepositorySubscriptionListener implements RepositoryListener {
 
     private static final String SUBSCRIBER_NOTIFICATION_ERROR = "Error during subscriber notification.";
-    private static Log log = LogFactory.getLog( RepositorySubscriptionListener.class );
+    private static Logger log = LogManager.getLogger( RepositorySubscriptionListener.class );
 
     private SubscriptionManager subscriptionManager;
     private RepositoryManager repositoryManager;
@@ -50,7 +50,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onCreateRootNamespace(java.lang.String)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onCreateRootNamespace(java.lang.String)
      */
     @Override
     public void onCreateRootNamespace(String rootNamespace) {
@@ -58,7 +58,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDeleteRootNamespace(java.lang.String)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onDeleteRootNamespace(java.lang.String)
      */
     @Override
     public void onDeleteRootNamespace(String rootNamespace) {
@@ -66,7 +66,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onCreateNamespace(java.lang.String)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onCreateNamespace(java.lang.String)
      */
     @Override
     public void onCreateNamespace(String baseNamespace) {
@@ -79,7 +79,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDeleteNamespace(java.lang.String)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onDeleteNamespace(java.lang.String)
      */
     @Override
     public void onDeleteNamespace(String baseNamespace) {
@@ -92,7 +92,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onPublish(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onPublish(org.opentravel.repocommon.repository.RepositoryItem)
      */
     @Override
     public void onPublish(RepositoryItem item) {
@@ -119,7 +119,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onCommit(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onCommit(org.opentravel.repocommon.repository.RepositoryItem,
      *      java.lang.String)
      */
     @Override
@@ -133,7 +133,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onLock(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onLock(org.opentravel.repocommon.repository.RepositoryItem)
      */
     @Override
     public void onLock(RepositoryItem item) {
@@ -146,7 +146,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onUnlock(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onUnlock(org.opentravel.repocommon.repository.RepositoryItem,
      *      boolean, java.lang.String)
      */
     @Override
@@ -163,7 +163,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onPromote(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onPromote(org.opentravel.repocommon.repository.RepositoryItem,
      *      org.opentravel.schemacompiler.model.TLLibraryStatus)
      */
     @Override
@@ -177,7 +177,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDemote(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onDemote(org.opentravel.repocommon.repository.RepositoryItem,
      *      org.opentravel.schemacompiler.model.TLLibraryStatus)
      */
     @Override
@@ -191,7 +191,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onUpdateStatus(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onUpdateStatus(org.opentravel.repocommon.repository.RepositoryItem,
      *      org.opentravel.schemacompiler.model.TLLibraryStatus)
      */
     @Override
@@ -212,7 +212,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onRecalculateCrc(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onRecalculateCrc(org.opentravel.repocommon.repository.RepositoryItem)
      */
     @Override
     public void onRecalculateCrc(RepositoryItem item) {
@@ -225,7 +225,7 @@ public class RepositorySubscriptionListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDelete(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.repocommon.repository.RepositoryListener#onDelete(org.opentravel.repocommon.repository.RepositoryItem)
      */
     @Override
     public void onDelete(RepositoryItem item) {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SMTPConfig.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SMTPConfig.java
similarity index 99%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SMTPConfig.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SMTPConfig.java
index 0d253942..136e98db 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SMTPConfig.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SMTPConfig.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionFileUtils.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionFileUtils.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionFileUtils.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionFileUtils.java
index 8d1262d1..47b2268f 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionFileUtils.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionFileUtils.java
@@ -14,18 +14,18 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.ObjectFactory;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionList;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
+import org.opentravel.repocommon.util.RepositoryJaxbContext;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryFileManager;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.util.ClasspathResourceResolver;
 import org.opentravel.schemacompiler.util.FileUtils;
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
 import org.opentravel.schemacompiler.xml.NamespacePrefixMapper;
 
 import java.io.File;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionManager.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionManager.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionManager.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionManager.java
index 7762ffbe..a36dc7c7 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionManager.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionManager.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.velocity.Template;
 import org.apache.velocity.VelocityContext;
 import org.apache.velocity.app.VelocityEngine;
@@ -27,14 +27,14 @@ import org.opentravel.ns.ota2.repositoryinfoext_v01_00.Subscription;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionEventType;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionList;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserPrincipal;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.RepositoryNamespaceUtils;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserPrincipal;
 import org.opentravel.schemacompiler.version.VersionScheme;
 import org.opentravel.schemacompiler.version.VersionSchemeException;
 import org.opentravel.schemacompiler.version.VersionSchemeFactory;
@@ -81,7 +81,7 @@ public class SubscriptionManager {
     private static final String SUBJECT_FORMAT = "{1} - {0}";
     private static final int MAX_RETRIES = 3;
 
-    private static Log log = LogFactory.getLog( SubscriptionManager.class );
+    private static Logger log = LogManager.getLogger( SubscriptionManager.class );
     private static VelocityEngine velocityEngine;
 
     private Map<String,SubscriptionResource> namespaceCache = new HashMap<>();
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionNavigator.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionNavigator.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionNavigator.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionNavigator.java
index 7c26d114..e5d238a9 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionNavigator.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionNavigator.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionList;
 import org.opentravel.schemacompiler.repository.RepositoryException;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionResource.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionResource.java
similarity index 93%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionResource.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionResource.java
index df43a011..b34e37b2 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionResource.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionResource.java
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.Subscription;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionEventType;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionList;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.config.FileResource;
+import org.opentravel.repocommon.config.FileResource;
 
 import java.io.File;
 import java.io.IOException;
@@ -86,7 +86,7 @@ public class SubscriptionResource extends FileResource<SubscriptionList> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.config.FileResource#getDefaultResourceValue()
+     * @see org.opentravel.repocommon.config.FileResource#getDefaultResourceValue()
      */
     @Override
     protected SubscriptionList getDefaultResourceValue() {
@@ -111,7 +111,7 @@ public class SubscriptionResource extends FileResource<SubscriptionList> {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.config.FileResource#loadResource(java.io.File)
+     * @see org.opentravel.repocommon.config.FileResource#loadResource(java.io.File)
      */
     @Override
     protected SubscriptionList loadResource(File dataFile) throws IOException {
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionVisitor.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionVisitor.java
similarity index 95%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionVisitor.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionVisitor.java
index a1a18a00..acc807c2 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/SubscriptionVisitor.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/SubscriptionVisitor.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionList;
 
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/TemplateUtils.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/TemplateUtils.java
similarity index 98%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/TemplateUtils.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/TemplateUtils.java
index a3b2e80d..6dbd3320 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/subscription/TemplateUtils.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/subscription/TemplateUtils.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.subscription;
+package org.opentravel.repocommon.subscription;
 
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
diff --git a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/util/RepositoryJaxbContext.java b/ota2-repository-common/src/main/java/org/opentravel/repocommon/util/RepositoryJaxbContext.java
similarity index 97%
rename from ota2-repository-common/src/main/java/org/opentravel/schemacompiler/util/RepositoryJaxbContext.java
rename to ota2-repository-common/src/main/java/org/opentravel/repocommon/util/RepositoryJaxbContext.java
index e60c81de..6e08fa1b 100644
--- a/ota2-repository-common/src/main/java/org/opentravel/schemacompiler/util/RepositoryJaxbContext.java
+++ b/ota2-repository-common/src/main/java/org/opentravel/repocommon/util/RepositoryJaxbContext.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.repocommon.util;
 
 import javax.xml.bind.JAXBContext;
 
diff --git a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/jmx/TestOTMRepositoryStats.java b/ota2-repository-common/src/test/java/org/opentravel/repocommon/jmx/TestOTMRepositoryStats.java
similarity index 96%
rename from ota2-repository-common/src/test/java/org/opentravel/schemacompiler/jmx/TestOTMRepositoryStats.java
rename to ota2-repository-common/src/test/java/org/opentravel/repocommon/jmx/TestOTMRepositoryStats.java
index ee476e6a..46df7d7f 100644
--- a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/jmx/TestOTMRepositoryStats.java
+++ b/ota2-repository-common/src/test/java/org/opentravel/repocommon/jmx/TestOTMRepositoryStats.java
@@ -14,13 +14,14 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.jmx;
+package org.opentravel.repocommon.jmx;
 
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 
 import org.junit.Before;
 import org.junit.Test;
+import org.opentravel.repocommon.jmx.OTMRepositoryStats;
 
 import java.io.File;
 
diff --git a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/TestPasswordValidator.java b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/TestPasswordValidator.java
similarity index 95%
rename from ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/TestPasswordValidator.java
rename to ota2-repository-common/src/test/java/org/opentravel/repocommon/security/TestPasswordValidator.java
index 8fd91c8d..5e785f5e 100644
--- a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/TestPasswordValidator.java
+++ b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/TestPasswordValidator.java
@@ -14,11 +14,12 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security;
+package org.opentravel.repocommon.security;
 
 import static org.junit.Assert.assertTrue;
 
 import org.junit.Test;
+import org.opentravel.schemacompiler.security.PasswordHelper;
 
 /**
  * Verifies the function of the <code>PasswordValidator</code> class.
diff --git a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestChunks.java b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestChunks.java
similarity index 92%
rename from ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestChunks.java
rename to ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestChunks.java
index d7265052..a6a7f221 100644
--- a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestChunks.java
+++ b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestChunks.java
@@ -14,13 +14,15 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 
 import org.junit.Assert;
 import org.junit.Test;
+import org.opentravel.repocommon.security.impl.ByteChunk;
+import org.opentravel.repocommon.security.impl.CharChunk;
 
 /**
  * Verifies the function of the <code>ByteChunk</code> class.
diff --git a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestHexUtils.java b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestHexUtils.java
similarity index 95%
rename from ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestHexUtils.java
rename to ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestHexUtils.java
index 5053666f..34271f9b 100644
--- a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestHexUtils.java
+++ b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestHexUtils.java
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 
 import org.junit.Test;
+import org.opentravel.repocommon.security.impl.HexUtils;
 
 /**
  * Verifies the function of the <code>HexUtils</code> class.
diff --git a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestJNDIAuthenticationProvider.java b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestJNDIAuthenticationProvider.java
similarity index 98%
rename from ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestJNDIAuthenticationProvider.java
rename to ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestJNDIAuthenticationProvider.java
index 0c1c2523..a7c08004 100644
--- a/ota2-repository-common/src/test/java/org/opentravel/schemacompiler/security/impl/TestJNDIAuthenticationProvider.java
+++ b/ota2-repository-common/src/test/java/org/opentravel/repocommon/security/impl/TestJNDIAuthenticationProvider.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.security.impl;
+package org.opentravel.repocommon.security.impl;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNull;
@@ -24,6 +24,7 @@ import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.rules.TemporaryFolder;
+import org.opentravel.repocommon.security.impl.JNDIAuthenticationProvider;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
 
diff --git a/ota2-repository-common/src/test/resources/log4j.properties b/ota2-repository-common/src/test/resources/log4j.properties
deleted file mode 100644
index ea07b060..00000000
--- a/ota2-repository-common/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,8 +0,0 @@
-log4j.rootCategory=OFF, CONSOLE
-
-log4j.logger.org.opentravel=ERROR
-log4j.logger.org.springframework=WARN
-
-log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
diff --git a/ota2-repository-common/src/test/resources/log4j2.properties b/ota2-repository-common/src/test/resources/log4j2.properties
new file mode 100644
index 00000000..19cf9ef5
--- /dev/null
+++ b/ota2-repository-common/src/test/resources/log4j2.properties
@@ -0,0 +1,16 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = off
+rootLogger.appenderRef.stdout.ref = consoleLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = error
+
+logger.springframework.name = org.springframework
+logger.springframework.level = warn
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
diff --git a/ota2-repository-plugin/pom.xml b/ota2-repository-plugin/pom.xml
index 1147f3a3..7dcb9691 100644
--- a/ota2-repository-plugin/pom.xml
+++ b/ota2-repository-plugin/pom.xml
@@ -1,4 +1,5 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
 	<modelVersion>4.0.0</modelVersion>
@@ -9,14 +10,14 @@
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
 		<checkstyle.config>${basedir}/../checkstyle.xml</checkstyle.config>
 		<license.file>${basedir}/../apache2-license.txt</license.file>
 	</properties>
-	
+
 	<dependencies>
 		<dependency>
 			<groupId>org.opentravel.otm</groupId>
@@ -26,6 +27,7 @@
 		<dependency>
 			<groupId>org.apache.maven</groupId>
 			<artifactId>maven-plugin-api</artifactId>
+			<scope>provided</scope>
 		</dependency>
 		<dependency>
 			<groupId>org.apache.maven.plugin-tools</groupId>
@@ -58,7 +60,7 @@
 			<scope>test</scope>
 		</dependency>
 	</dependencies>
-	
+
 	<build>
 		<plugins>
 			<plugin>
@@ -67,5 +69,5 @@
 			</plugin>
 		</plugins>
 	</build>
-	
+
 </project>
\ No newline at end of file
diff --git a/ota2-repository-plugin/src/main/resources/log4j.properties b/ota2-repository-plugin/src/main/resources/log4j.properties
deleted file mode 100644
index 89c6faea..00000000
--- a/ota2-repository-plugin/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,5 +0,0 @@
-log4j.rootCategory=OFF,CONSOLE
-
-log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
diff --git a/ota2-repository-plugin/src/main/resources/log4j2.properties b/ota2-repository-plugin/src/main/resources/log4j2.properties
new file mode 100644
index 00000000..41373cfe
--- /dev/null
+++ b/ota2-repository-plugin/src/main/resources/log4j2.properties
@@ -0,0 +1,16 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = off
+rootLogger.appenderRef.stdout.ref = consoleLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = off
+
+logger.springframework.name = org.springframework
+logger.springframework.level = off
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
diff --git a/ota2-repository-service/pom.xml b/ota2-repository-service/pom.xml
index 4c371e08..2ef2395d 100644
--- a/ota2-repository-service/pom.xml
+++ b/ota2-repository-service/pom.xml
@@ -1,5 +1,4 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
 	<modelVersion>4.0.0</modelVersion>
 	<artifactId>ota2-repository-service</artifactId>
@@ -9,14 +8,14 @@
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
 		<checkstyle.config>${basedir}/../checkstyle.xml</checkstyle.config>
 		<license.file>${basedir}/../apache2-license.txt</license.file>
 	</properties>
-	
+
 	<dependencies>
 		<dependency>
 			<groupId>org.opentravel.otm</groupId>
@@ -24,20 +23,24 @@
 			<version>${project.version}</version>
 		</dependency>
 		<dependency>
-			<groupId>org.glassfish.jersey.core</groupId>
-			<artifactId>jersey-server</artifactId>
+			<groupId>jakarta.servlet</groupId>
+			<artifactId>jakarta.servlet-api</artifactId>
 		</dependency>
 		<dependency>
-			<groupId>org.glassfish.jersey.inject</groupId>
-			<artifactId>jersey-hk2</artifactId>
+			<groupId>jakarta.ws.rs</groupId>
+			<artifactId>jakarta.ws.rs-api</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>org.glassfish.jersey.containers</groupId>
 			<artifactId>jersey-container-servlet</artifactId>
 		</dependency>
 		<dependency>
-			<groupId>org.glassfish.jersey.core</groupId>
-			<artifactId>jersey-common</artifactId>
+			<groupId>org.glassfish.jersey.inject</groupId>
+			<artifactId>jersey-hk2</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.glassfish.jersey.media</groupId>
+			<artifactId>jersey-media-jaxb</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>org.glassfish.jersey.media</groupId>
@@ -50,16 +53,18 @@
 		<dependency>
 			<groupId>org.apache.tiles</groupId>
 			<artifactId>tiles-jsp</artifactId>
+			<exclusions>
+				<exclusion>
+					<groupId>org.slf4j</groupId>
+					<artifactId>jcl-over-slf4j</artifactId>
+				</exclusion>
+			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>commons-fileupload</groupId>
 			<artifactId>commons-fileupload</artifactId>
 			<version>1.4</version>
 		</dependency>
-		<dependency>
-			<groupId>javax.servlet</groupId>
-			<artifactId>jstl</artifactId>
-		</dependency>
 		<dependency>
 			<groupId>org.apache.activemq</groupId>
 			<artifactId>activemq-client</artifactId>
@@ -79,22 +84,18 @@
 			<groupId>net.sourceforge.htmlunit</groupId>
 			<artifactId>htmlunit</artifactId>
 			<scope>test</scope>
+			<exclusions>
+				<exclusion>
+					<groupId>xml-apis</groupId>
+					<artifactId>xml-apis</artifactId>
+				</exclusion>
+			</exclusions>
 		</dependency>
 		<dependency>
 			<groupId>com.mockrunner</groupId>
 			<artifactId>mockrunner-jms</artifactId>
 			<scope>test</scope>
 		</dependency>
-		<dependency>
-			<groupId>javax.servlet</groupId>
-			<artifactId>servlet-api</artifactId>
-			<scope>provided</scope>
-		</dependency>
-		<dependency>
-			<groupId>javax.servlet.jsp</groupId>
-			<artifactId>jsp-api</artifactId>
-			<scope>provided</scope>
-		</dependency>
 	</dependencies>
 
 	<build>
@@ -117,4 +118,4 @@
 		</testResources>
 	</build>
 
-</project>
+</project>
\ No newline at end of file
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/AdminController.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/AdminController.java
similarity index 98%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/AdminController.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/AdminController.java
index 28c91388..108fa580 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/AdminController.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/AdminController.java
@@ -14,31 +14,31 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.security_v01_00.NamespaceAuthorizations;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.security.AuthenticationProvider;
+import org.opentravel.repocommon.security.AuthorizationResource;
+import org.opentravel.repocommon.security.GroupAssignmentsResource;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserGroup;
+import org.opentravel.repocommon.security.UserPrincipal;
+import org.opentravel.repocommon.security.impl.SecurityFileUtils;
+import org.opentravel.reposervice.util.RepositoryLogoImage;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryFileManager;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.impl.ProjectFileUtils;
 import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
-import org.opentravel.schemacompiler.security.AuthenticationProvider;
-import org.opentravel.schemacompiler.security.AuthorizationResource;
-import org.opentravel.schemacompiler.security.GroupAssignmentsResource;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserGroup;
-import org.opentravel.schemacompiler.security.UserPrincipal;
-import org.opentravel.schemacompiler.security.impl.SecurityFileUtils;
 import org.opentravel.schemacompiler.util.FileUtils;
-import org.opentravel.schemacompiler.util.RepositoryLogoImage;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.ModelAttribute;
@@ -87,7 +87,7 @@ public class AdminController extends BaseController {
             + "@{1}((([0-9A-Za-z_-]+)([\\.]{1}[0-9A-Za-z_-]+)*\\.{1}"
             + "([A-Za-z]){1,6})|(([0-9]{1,3}[\\.]{1}){3}([0-9]{1,3}){1}))$" );
 
-    private static Log log = LogFactory.getLog( AdminController.class );
+    private static Logger log = LogManager.getLogger( AdminController.class );
 
     private FreeTextSearchService searchService;
 
@@ -512,7 +512,7 @@ public class AdminController extends BaseController {
         }
 
         if (targetPage == null) {
-            for (RepositoryPermission permissionOption : RepositoryPermission.values()) {
+            for (RepositoryPermission permissionOption : Arrays.asList( RepositoryPermission.values() )) {
                 permissionOptions.add( permissionOption.toString() );
             }
             model.addAttribute( BASE_NAMESPACE, baseNamespace );
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/BaseController.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/BaseController.java
similarity index 89%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/BaseController.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/BaseController.java
index 774942ec..8fa3e42b 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/BaseController.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/BaseController.java
@@ -14,15 +14,15 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
-
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
+package org.opentravel.reposervice.console;
+
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.repository.RepositoryMetadataResource;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserPrincipal;
+import org.opentravel.repocommon.security.impl.FileAuthenticationProvider;
+import org.opentravel.reposervice.util.RepositoryLogoImage;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
-import org.opentravel.schemacompiler.repository.RepositoryMetadataResource;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserPrincipal;
-import org.opentravel.schemacompiler.security.impl.FileAuthenticationProvider;
-import org.opentravel.schemacompiler.util.RepositoryLogoImage;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.ui.Model;
 
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/BrowseController.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/BrowseController.java
similarity index 97%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/BrowseController.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/BrowseController.java
index e23a7638..95be667c 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/BrowseController.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/BrowseController.java
@@ -14,28 +14,28 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionEventType;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
-import org.opentravel.schemacompiler.index.IndexingUtils;
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
-import org.opentravel.schemacompiler.index.SubscriptionSearchResult;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.IndexingUtils;
+import org.opentravel.repocommon.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.SubscriptionSearchResult;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserPrincipal;
+import org.opentravel.repocommon.subscription.SubscriptionManager;
+import org.opentravel.reposervice.util.PageUtils;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.RepositoryNamespaceUtils;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserPrincipal;
-import org.opentravel.schemacompiler.subscription.SubscriptionManager;
-import org.opentravel.schemacompiler.util.PageUtils;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -66,7 +66,7 @@ public class BrowseController extends BaseController {
     private static final String REDIRECT_INDEX = "redirect:/console/index.html";
     private static final String REDIRECT_BROWSE = "redirect:/console/browse.html";
 
-    private static Log log = LogFactory.getLog( BrowseController.class );
+    private static Logger log = LogManager.getLogger( BrowseController.class );
 
     /**
      * Called by the Spring MVC controller to display the application browse page.
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/LoginController.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/LoginController.java
similarity index 97%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/LoginController.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/LoginController.java
index edb23b04..69c8211c 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/LoginController.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/LoginController.java
@@ -14,15 +14,15 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserPrincipal;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserPrincipal;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -47,7 +47,7 @@ public class LoginController extends BaseController {
     private static final String LOGIN_ERROR = "loginError";
     private static final String REDIRECT_INDEX = "redirect:/console/index.html";
 
-    private static Log log = LogFactory.getLog( LoginController.class );
+    private static Logger log = LogManager.getLogger( LoginController.class );
 
     /**
      * Called by the Spring MVC controller to process a login request from a user.
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespaceItem.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespaceItem.java
similarity index 92%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespaceItem.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespaceItem.java
index 49fbb7bc..0679ccf1 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespaceItem.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespaceItem.java
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.index.LibrarySearchResult;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryItemState;
@@ -34,7 +34,7 @@ import java.util.Date;
  */
 public class NamespaceItem {
 
-    private static Log log = LogFactory.getLog( NamespaceItem.class );
+    private static Logger log = LogManager.getLogger( NamespaceItem.class );
 
     private String baseNamespace;
     private String filename;
@@ -179,13 +179,13 @@ public class NamespaceItem {
      */
     public static Date getLastModified(RepositoryItem item) {
         Date lastModified = null;
-    
+
         if (item != null) {
             try {
                 RepositoryManager repositoryManager = item.getRepository().getManager();
                 File metadataFile = repositoryManager.getFileManager()
                     .getLibraryMetadataLocation( item.getBaseNamespace(), item.getFilename(), item.getVersion() );
-    
+
                 if ((metadataFile != null) && metadataFile.exists()) {
                     lastModified = new Date( metadataFile.lastModified() );
                 }
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespacePermission.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespacePermission.java
similarity index 98%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespacePermission.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespacePermission.java
index d104fe43..1fdd1613 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespacePermission.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespacePermission.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
 
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespacePermissions.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespacePermissions.java
similarity index 99%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespacePermissions.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespacePermissions.java
index f40c4c43..0daf394a 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/NamespacePermissions.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/NamespacePermissions.java
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import org.opentravel.ns.ota2.security_v01_00.AuthorizationSpec;
 import org.opentravel.ns.ota2.security_v01_00.NamespaceAuthorizations;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
-import org.opentravel.schemacompiler.security.UserPrincipal;
+import org.opentravel.repocommon.security.UserPrincipal;
 
 import java.util.ArrayList;
 import java.util.Arrays;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/ReleaseMemberItem.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/ReleaseMemberItem.java
similarity index 93%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/ReleaseMemberItem.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/ReleaseMemberItem.java
index 0cafe17c..2a1e556c 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/ReleaseMemberItem.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/ReleaseMemberItem.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.LibrarySearchResult;
 
 import java.util.Date;
 
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/SearchController.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/SearchController.java
similarity index 94%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/SearchController.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/SearchController.java
index c1ac6e2d..7bd1e025 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/SearchController.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/SearchController.java
@@ -14,18 +14,22 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
-import org.opentravel.schemacompiler.index.AssemblySearchResult;
-import org.opentravel.schemacompiler.index.EntitySearchResult;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
-import org.opentravel.schemacompiler.index.ReleaseSearchResult;
-import org.opentravel.schemacompiler.index.SearchResult;
+import org.opentravel.repocommon.index.AssemblySearchResult;
+import org.opentravel.repocommon.index.EntitySearchResult;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.ReleaseSearchResult;
+import org.opentravel.repocommon.index.SearchResult;
+import org.opentravel.repocommon.security.UserPrincipal;
+import org.opentravel.reposervice.util.MessageFormatter;
+import org.opentravel.reposervice.util.PageUtils;
+import org.opentravel.reposervice.util.SelectOption;
 import org.opentravel.schemacompiler.model.TLAbstractEnumeration;
 import org.opentravel.schemacompiler.model.TLBusinessObject;
 import org.opentravel.schemacompiler.model.TLChoiceObject;
@@ -40,10 +44,6 @@ import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
 import org.opentravel.schemacompiler.repository.ServiceAssembly;
-import org.opentravel.schemacompiler.security.UserPrincipal;
-import org.opentravel.schemacompiler.util.MessageFormatter;
-import org.opentravel.schemacompiler.util.PageUtils;
-import org.opentravel.schemacompiler.util.SelectOption;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -65,7 +65,7 @@ import javax.servlet.http.HttpSession;
 @Controller
 public class SearchController extends BaseController {
 
-    private static Log log = LogFactory.getLog( SearchController.class );
+    private static Logger log = LogManager.getLogger( SearchController.class );
     private static MessageFormatter messageFormatter = new MessageFormatter();
     private static List<Class<?>> entityFilterTypes = Arrays.asList( TLLibrary.class, Release.class,
         ServiceAssembly.class, TLBusinessObject.class, TLChoiceObject.class, TLCoreObject.class,
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/SearchResultImageResolver.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/SearchResultImageResolver.java
similarity index 98%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/SearchResultImageResolver.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/SearchResultImageResolver.java
index 83c20210..a62d86f5 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/SearchResultImageResolver.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/SearchResultImageResolver.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.opentravel.schemacompiler.index.SearchResult;
+import org.opentravel.repocommon.index.SearchResult;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLAction;
 import org.opentravel.schemacompiler.model.TLActionFacet;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/ViewItemController.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/ViewItemController.java
similarity index 97%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/ViewItemController.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/console/ViewItemController.java
index 3ce62fbe..6db1965c 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/console/ViewItemController.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/console/ViewItemController.java
@@ -14,21 +14,29 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import org.apache.commons.lang.StringEscapeUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.index.AssemblySearchResult;
-import org.opentravel.schemacompiler.index.EntitySearchResult;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
-import org.opentravel.schemacompiler.index.IndexingUtils;
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
-import org.opentravel.schemacompiler.index.ReleaseSearchResult;
-import org.opentravel.schemacompiler.index.SearchResult;
-import org.opentravel.schemacompiler.index.ValidationResult;
+import org.opentravel.repocommon.index.AssemblySearchResult;
+import org.opentravel.repocommon.index.EntitySearchResult;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.IndexingUtils;
+import org.opentravel.repocommon.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.ReleaseSearchResult;
+import org.opentravel.repocommon.index.SearchResult;
+import org.opentravel.repocommon.index.ValidationResult;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserPrincipal;
+import org.opentravel.repocommon.subscription.SubscriptionManager;
+import org.opentravel.reposervice.util.DocumentationHelper;
+import org.opentravel.reposervice.util.FacetIdentityWrapper;
+import org.opentravel.reposervice.util.PageUtils;
+import org.opentravel.reposervice.util.ReferenceFinder;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLBusinessObject;
 import org.opentravel.schemacompiler.model.TLChoiceObject;
@@ -36,7 +44,6 @@ import org.opentravel.schemacompiler.model.TLContextualFacet;
 import org.opentravel.schemacompiler.model.TLCoreObject;
 import org.opentravel.schemacompiler.model.TLOperation;
 import org.opentravel.schemacompiler.repository.ReleaseMember;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryItemCommit;
@@ -44,13 +51,6 @@ import org.opentravel.schemacompiler.repository.RepositoryItemHistory;
 import org.opentravel.schemacompiler.repository.RepositoryItemType;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserPrincipal;
-import org.opentravel.schemacompiler.subscription.SubscriptionManager;
-import org.opentravel.schemacompiler.util.DocumentationHelper;
-import org.opentravel.schemacompiler.util.FacetIdentityWrapper;
-import org.opentravel.schemacompiler.util.PageUtils;
-import org.opentravel.schemacompiler.util.ReferenceFinder;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -98,7 +98,7 @@ public class ViewItemController extends BaseController {
     public static final String ERROR_DISPLAYING_LIBRARY2 =
         "An error occured while displaying the library (see server log for details).";
 
-    private static Log log = LogFactory.getLog( BrowseController.class );
+    private static Logger log = LogManager.getLogger( BrowseController.class );
 
     /**
      * Called by the Spring MVC controller to display the release view page.
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/index/JMSFreeTextSearchService.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/index/JMSFreeTextSearchService.java
similarity index 90%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/index/JMSFreeTextSearchService.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/index/JMSFreeTextSearchService.java
index b335a6a8..841b05e9 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/index/JMSFreeTextSearchService.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/index/JMSFreeTextSearchService.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.index;
+package org.opentravel.reposervice.index;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.lucene.analysis.standard.StandardAnalyzer;
 import org.apache.lucene.index.DirectoryReader;
 import org.apache.lucene.index.IndexNotFoundException;
@@ -27,11 +27,13 @@ import org.apache.lucene.index.IndexWriterConfig.OpenMode;
 import org.apache.lucene.store.Directory;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoListType;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.IndexingConstants;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.util.RepositoryJaxbContext;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
 import org.springframework.jms.connection.CachingConnectionFactory;
 import org.springframework.jms.core.JmsTemplate;
 import org.springframework.jms.core.MessageCreator;
@@ -63,7 +65,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
         "Unable to submit indexing job for processing - service unavailable.";
     private static final long JMS_LISTENER_RETRY_INTERVAL = 10000;
 
-    private static Log log = LogFactory.getLog( JMSFreeTextSearchService.class );
+    private static Logger log = LogManager.getLogger( JMSFreeTextSearchService.class );
     private static org.opentravel.ns.ota2.repositoryinfo_v01_00.ObjectFactory objectFactory =
         new org.opentravel.ns.ota2.repositoryinfo_v01_00.ObjectFactory();
     private static org.opentravel.ns.ota2.repositoryinfoext_v01_00.ObjectFactory extObjectFactory =
@@ -86,7 +88,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#onStartup(org.apache.lucene.store.Directory)
+     * @see org.opentravel.repocommon.index.indexing.FreeTextSearchService#onStartup(org.apache.lucene.store.Directory)
      */
     @Override
     protected void onStartup(Directory indexDirectory) throws IOException {
@@ -96,7 +98,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#onShutdown()
+     * @see org.opentravel.repocommon.index.indexing.FreeTextSearchService#onShutdown()
      */
     @Override
     protected void onShutdown() throws IOException {
@@ -131,7 +133,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#isIndexingServiceAvailable()
+     * @see org.opentravel.repocommon.index.indexing.FreeTextSearchService#isIndexingServiceAvailable()
      */
     @Override
     public boolean isIndexingServiceAvailable() {
@@ -139,7 +141,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#newIndexReader(org.apache.lucene.store.Directory)
+     * @see org.opentravel.repocommon.index.indexing.FreeTextSearchService#newIndexReader(org.apache.lucene.store.Directory)
      */
     @Override
     protected DirectoryReader newIndexReader(Directory indexDirectory) throws IOException {
@@ -162,7 +164,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#submitIndexingJob(java.util.List, boolean)
+     * @see org.opentravel.repocommon.index.indexing.FreeTextSearchService#submitIndexingJob(java.util.List, boolean)
      */
     @Override
     protected void submitIndexingJob(List<RepositoryItem> itemsToIndex, boolean deleteIndex) {
@@ -193,7 +195,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#submitIndexingJob(org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget)
+     * @see org.opentravel.repocommon.index.indexing.FreeTextSearchService#submitIndexingJob(org.opentravel.ns.ota2.repositoryinfoext_v01_00.SubscriptionTarget)
      */
     @Override
     protected void submitIndexingJob(SubscriptionTarget subscriptionTarget) {
@@ -217,7 +219,7 @@ public class JMSFreeTextSearchService extends FreeTextSearchService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.index.FreeTextSearchService#deleteSearchIndex()
+     * @see org.opentravel.repocommon.index.indexing.FreeTextSearchService#deleteSearchIndex()
      */
     @Override
     protected void deleteSearchIndex() {
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/JMSNotificationService.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/JMSNotificationService.java
similarity index 84%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/JMSNotificationService.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/JMSNotificationService.java
index 7df55e4c..d6cd5668 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/JMSNotificationService.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/JMSNotificationService.java
@@ -14,15 +14,17 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.notification;
+package org.opentravel.reposervice.notification;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoType;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.ObjectFactory;
+import org.opentravel.repocommon.notification.NotificationConstants;
+import org.opentravel.repocommon.notification.NotificationService;
+import org.opentravel.repocommon.util.RepositoryJaxbContext;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
 import org.springframework.jms.connection.CachingConnectionFactory;
 import org.springframework.jms.core.JmsTemplate;
 import org.springframework.jms.core.MessageCreator;
@@ -45,7 +47,7 @@ import javax.xml.bind.Marshaller;
  */
 public class JMSNotificationService implements NotificationService {
 
-    private static Log log = LogFactory.getLog( JMSNotificationService.class );
+    private static Logger log = LogManager.getLogger( JMSNotificationService.class );
     private static ObjectFactory objectFactory = new ObjectFactory();
 
     private JmsTemplate jmsService;
@@ -65,7 +67,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#startup()
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#startup()
      */
     @Override
     public void startup() {
@@ -99,7 +101,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#shutdown()
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#shutdown()
      */
     @Override
     public void shutdown() {
@@ -145,7 +147,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemPublished(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemPublished(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemPublished(RepositoryItem item) {
@@ -153,7 +155,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemModified(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemModified(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemModified(RepositoryItem item) {
@@ -161,7 +163,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemLocked(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemLocked(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemLocked(RepositoryItem item) {
@@ -169,7 +171,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemUnlocked(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemUnlocked(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemUnlocked(RepositoryItem item) {
@@ -177,7 +179,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemStatusChanged(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemStatusChanged(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemStatusChanged(RepositoryItem item) {
@@ -185,7 +187,7 @@ public class JMSNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemDeleted(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemDeleted(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemDeleted(RepositoryItem item) {
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/NoOpNotificationService.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/NoOpNotificationService.java
similarity index 62%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/NoOpNotificationService.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/NoOpNotificationService.java
index e748e723..752b8c52 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/NoOpNotificationService.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/NoOpNotificationService.java
@@ -14,8 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.notification;
+package org.opentravel.reposervice.notification;
 
+import org.opentravel.repocommon.notification.NotificationService;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 
 /**
@@ -24,7 +25,7 @@ import org.opentravel.schemacompiler.repository.RepositoryItem;
 public class NoOpNotificationService implements NotificationService {
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#startup()
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#startup()
      */
     @Override
     public void startup() {
@@ -32,7 +33,7 @@ public class NoOpNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#shutdown()
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#shutdown()
      */
     @Override
     public void shutdown() {
@@ -40,7 +41,7 @@ public class NoOpNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemPublished(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemPublished(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemPublished(RepositoryItem item) {
@@ -48,7 +49,7 @@ public class NoOpNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemModified(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemModified(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemModified(RepositoryItem item) {
@@ -56,7 +57,7 @@ public class NoOpNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemLocked(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemLocked(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemLocked(RepositoryItem item) {
@@ -64,7 +65,7 @@ public class NoOpNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemUnlocked(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemUnlocked(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemUnlocked(RepositoryItem item) {
@@ -72,7 +73,7 @@ public class NoOpNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemStatusChanged(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemStatusChanged(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemStatusChanged(RepositoryItem item) {
@@ -80,7 +81,7 @@ public class NoOpNotificationService implements NotificationService {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.notification.NotificationService#itemDeleted(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.reposervice.notification.NotificationService#itemDeleted(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void itemDeleted(RepositoryItem item) {
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/NotificationServiceFactory.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/NotificationServiceFactory.java
similarity index 93%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/NotificationServiceFactory.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/NotificationServiceFactory.java
index 20f2db91..00d06a32 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/NotificationServiceFactory.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/NotificationServiceFactory.java
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.notification;
+package org.opentravel.reposervice.notification;
 
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.notification.NotificationService;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 
 /**
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/RepositoryNotificationListener.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/RepositoryNotificationListener.java
similarity index 66%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/RepositoryNotificationListener.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/RepositoryNotificationListener.java
index a82dbc71..d8540405 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/notification/RepositoryNotificationListener.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/notification/RepositoryNotificationListener.java
@@ -14,8 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.notification;
+package org.opentravel.reposervice.notification;
 
+import org.opentravel.repocommon.notification.NotificationService;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryListener;
@@ -26,7 +27,7 @@ import org.opentravel.schemacompiler.repository.RepositoryListener;
 public class RepositoryNotificationListener implements RepositoryListener {
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onPublish(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onPublish(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void onPublish(RepositoryItem item) {
@@ -34,7 +35,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onCommit(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onCommit(org.opentravel.schemacompiler.resource.RepositoryItem,
      *      java.lang.String)
      */
     @Override
@@ -43,7 +44,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onLock(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onLock(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void onLock(RepositoryItem item) {
@@ -51,7 +52,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onUnlock(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onUnlock(org.opentravel.schemacompiler.resource.RepositoryItem,
      *      boolean, java.lang.String)
      */
     @Override
@@ -60,7 +61,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onPromote(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onPromote(org.opentravel.schemacompiler.resource.RepositoryItem,
      *      org.opentravel.schemacompiler.model.TLLibraryStatus)
      */
     @Override
@@ -69,7 +70,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDemote(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onDemote(org.opentravel.schemacompiler.resource.RepositoryItem,
      *      org.opentravel.schemacompiler.model.TLLibraryStatus)
      */
     @Override
@@ -78,7 +79,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onUpdateStatus(org.opentravel.schemacompiler.repository.RepositoryItem,
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onUpdateStatus(org.opentravel.schemacompiler.resource.RepositoryItem,
      *      org.opentravel.schemacompiler.model.TLLibraryStatus)
      */
     @Override
@@ -87,7 +88,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onRecalculateCrc(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onRecalculateCrc(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void onRecalculateCrc(RepositoryItem item) {
@@ -95,7 +96,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDelete(org.opentravel.schemacompiler.repository.RepositoryItem)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onDelete(org.opentravel.schemacompiler.resource.RepositoryItem)
      */
     @Override
     public void onDelete(RepositoryItem item) {
@@ -112,7 +113,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onCreateRootNamespace(java.lang.String)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onCreateRootNamespace(java.lang.String)
      */
     @Override
     public void onCreateRootNamespace(String rootNamespace) {
@@ -120,7 +121,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDeleteRootNamespace(java.lang.String)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onDeleteRootNamespace(java.lang.String)
      */
     @Override
     public void onDeleteRootNamespace(String rootNamespace) {
@@ -128,7 +129,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onCreateNamespace(java.lang.String)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onCreateNamespace(java.lang.String)
      */
     @Override
     public void onCreateNamespace(String baseNamespace) {
@@ -136,7 +137,7 @@ public class RepositoryNotificationListener implements RepositoryListener {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.RepositoryListener#onDeleteNamespace(java.lang.String)
+     * @see org.opentravel.schemacompiler.resource.RepositoryListener#onDeleteNamespace(java.lang.String)
      */
     @Override
     public void onDeleteNamespace(String baseNamespace) {
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/providers/JAXBContextResolver.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/providers/JAXBContextResolver.java
similarity index 91%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/providers/JAXBContextResolver.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/providers/JAXBContextResolver.java
index 17d329e1..8cc1feeb 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/providers/JAXBContextResolver.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/providers/JAXBContextResolver.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.providers;
+package org.opentravel.reposervice.providers;
 
-import org.opentravel.schemacompiler.util.RepositoryJaxbContext;
+import org.opentravel.repocommon.util.RepositoryJaxbContext;
 
 import javax.ws.rs.ext.ContextResolver;
 import javax.ws.rs.ext.Provider;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/providers/RepositoryServiceExceptionMapper.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/providers/RepositoryServiceExceptionMapper.java
similarity index 94%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/providers/RepositoryServiceExceptionMapper.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/providers/RepositoryServiceExceptionMapper.java
index 56ac8134..4e1c5409 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/providers/RepositoryServiceExceptionMapper.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/providers/RepositoryServiceExceptionMapper.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.providers;
+package org.opentravel.reposervice.providers;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositorySecurityException;
 
@@ -35,7 +35,7 @@ import javax.xml.bind.JAXBException;
  */
 public abstract class RepositoryServiceExceptionMapper {
 
-    private static Log log = LogFactory.getLog( RepositoryServiceExceptionMapper.class );
+    private static Logger log = LogManager.getLogger( RepositoryServiceExceptionMapper.class );
 
     /**
      * Private constructor to prevent instantiation.
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/BasicAuthFilter.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/BasicAuthFilter.java
similarity index 86%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/BasicAuthFilter.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/BasicAuthFilter.java
index 128b0cf2..5868a1b1 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/BasicAuthFilter.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/BasicAuthFilter.java
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.console.LoginController;
-import org.opentravel.schemacompiler.security.impl.DefaultRepositorySecurityManager;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.security.impl.DefaultRepositorySecurityManager;
+import org.opentravel.reposervice.console.LoginController;
+import org.opentravel.schemacompiler.repository.RepositorySecurityException;
 
 import java.io.IOException;
 
@@ -37,7 +38,7 @@ import javax.servlet.http.HttpServletRequest;
  */
 public class BasicAuthFilter implements Filter {
 
-    private static Log log = LogFactory.getLog( BasicAuthFilter.class );
+    private static Logger log = LogManager.getLogger( BasicAuthFilter.class );
 
     /**
      * @see javax.servlet.Filter#init(javax.servlet.FilterConfig)
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/CustomLogoResource.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/CustomLogoResource.java
similarity index 97%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/CustomLogoResource.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/CustomLogoResource.java
index bb833ad3..042a167a 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/CustomLogoResource.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/CustomLogoResource.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
-import org.opentravel.schemacompiler.util.RepositoryLogoImage;
+import org.opentravel.reposervice.util.RepositoryLogoImage;
 
 import java.io.ByteArrayInputStream;
 import java.io.File;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/RepositoryContentResource.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/RepositoryContentResource.java
similarity index 98%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/RepositoryContentResource.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/RepositoryContentResource.java
index 97d46a0c..5a214e9f 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/RepositoryContentResource.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/RepositoryContentResource.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.glassfish.jersey.media.multipart.FormDataContentDisposition;
 import org.glassfish.jersey.media.multipart.FormDataParam;
 import org.glassfish.jersey.server.ResourceConfig;
@@ -35,20 +35,28 @@ import org.opentravel.ns.ota2.repositoryinfo_v01_00.RepositoryItemIdentityType;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.RepositoryPermissionType;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.SearchResultsListType;
 import org.opentravel.ns.ota2.security_v01_00.RepositoryPermission;
-import org.opentravel.schemacompiler.index.AssemblySearchResult;
-import org.opentravel.schemacompiler.index.EntitySearchResult;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
-import org.opentravel.schemacompiler.index.ReleaseSearchResult;
-import org.opentravel.schemacompiler.index.SearchResult;
-import org.opentravel.schemacompiler.lock.LockableResource;
-import org.opentravel.schemacompiler.lock.RepositoryLockManager;
+import org.opentravel.repocommon.index.AssemblySearchResult;
+import org.opentravel.repocommon.index.EntitySearchResult;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.ReleaseSearchResult;
+import org.opentravel.repocommon.index.SearchResult;
+import org.opentravel.repocommon.lock.LockableResource;
+import org.opentravel.repocommon.lock.RepositoryLockManager;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.repository.RepositoryMetadataResource;
+import org.opentravel.repocommon.security.RepositorySecurityManager;
+import org.opentravel.repocommon.security.UserPrincipal;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
+import org.opentravel.schemacompiler.repository.RepositoryException;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
+import org.opentravel.schemacompiler.repository.RepositoryItemType;
+import org.opentravel.schemacompiler.repository.RepositoryManager;
+import org.opentravel.schemacompiler.repository.RepositoryNamespaceUtils;
+import org.opentravel.schemacompiler.repository.RepositorySecurityException;
 import org.opentravel.schemacompiler.repository.impl.RepositoryItemImpl;
 import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
-import org.opentravel.schemacompiler.security.RepositorySecurityManager;
-import org.opentravel.schemacompiler.security.UserPrincipal;
 import org.opentravel.schemacompiler.version.VersionScheme;
 import org.opentravel.schemacompiler.version.VersionSchemeException;
 import org.opentravel.schemacompiler.version.VersionSchemeFactory;
@@ -91,7 +99,7 @@ public class RepositoryContentResource {
         "The user does not have permission to access the requested resource.";
 
     private static ObjectFactory objectFactory = new ObjectFactory();
-    static Log log = LogFactory.getLog( RepositoryContentResource.class );
+    static Logger log = LogManager.getLogger( RepositoryContentResource.class );
 
     private RepositoryMetadataResource repositoryMetadataResource;
     private RepositorySecurityManager securityManager;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/RepositoryServlet.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/RepositoryServlet.java
similarity index 87%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/RepositoryServlet.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/RepositoryServlet.java
index b4f3d227..0fce5aa8 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/repository/RepositoryServlet.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/repository/RepositoryServlet.java
@@ -14,18 +14,19 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.glassfish.jersey.media.multipart.MultiPartFeature;
 import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.servlet.ServletContainer;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
-import org.opentravel.schemacompiler.jmx.OTMRepositoryStats;
-import org.opentravel.schemacompiler.notification.NotificationServiceFactory;
-import org.opentravel.schemacompiler.subscription.SubscriptionManager;
-import org.opentravel.schemacompiler.util.RepositoryLogoImage;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.jmx.OTMRepositoryStats;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
+import org.opentravel.repocommon.subscription.SubscriptionManager;
+import org.opentravel.reposervice.notification.NotificationServiceFactory;
+import org.opentravel.reposervice.util.RepositoryLogoImage;
 
 import java.io.IOException;
 import java.lang.management.ManagementFactory;
@@ -43,7 +44,7 @@ import javax.servlet.ServletException;
 public class RepositoryServlet extends ServletContainer {
 
     private static final long serialVersionUID = -5879953110490573634L;
-    private static Log log = LogFactory.getLog( RepositoryServlet.class );
+    private static Logger log = LogManager.getLogger( RepositoryServlet.class );
 
     /**
      * Default constructor.
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/DocumentationHelper.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/DocumentationHelper.java
similarity index 98%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/DocumentationHelper.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/DocumentationHelper.java
index 0c661260..1d1e37a8 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/DocumentationHelper.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/DocumentationHelper.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
-import org.opentravel.schemacompiler.index.EntitySearchResult;
+import org.opentravel.repocommon.index.EntitySearchResult;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLDocumentation;
 import org.opentravel.schemacompiler.model.TLDocumentationItem;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/EntityNameResolver.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/EntityNameResolver.java
similarity index 97%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/EntityNameResolver.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/EntityNameResolver.java
index e77fc165..2571baeb 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/EntityNameResolver.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/EntityNameResolver.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.LibrarySearchResult;
 import org.opentravel.schemacompiler.model.BuiltInLibrary;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLModel;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/FacetIdentityWrapper.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/FacetIdentityWrapper.java
similarity index 96%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/FacetIdentityWrapper.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/FacetIdentityWrapper.java
index 6da7e8bd..e485dc6b 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/FacetIdentityWrapper.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/FacetIdentityWrapper.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
-import org.opentravel.schemacompiler.index.IndexingUtils;
+import org.opentravel.repocommon.index.IndexingUtils;
 import org.opentravel.schemacompiler.model.TLContextualFacet;
 import org.opentravel.schemacompiler.model.TLFacet;
 import org.opentravel.schemacompiler.model.TLOperation;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/MessageFormatter.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/MessageFormatter.java
similarity index 98%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/MessageFormatter.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/MessageFormatter.java
index 6f64293b..86efc700 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/MessageFormatter.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/MessageFormatter.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/PageUtils.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/PageUtils.java
similarity index 97%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/PageUtils.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/PageUtils.java
index 257b3d2a..3ee27395 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/PageUtils.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/PageUtils.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
-import org.opentravel.schemacompiler.console.NamespaceItem;
-import org.opentravel.schemacompiler.index.EntitySearchResult;
+import org.opentravel.repocommon.index.EntitySearchResult;
+import org.opentravel.reposervice.console.NamespaceItem;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLActionResponse;
 import org.opentravel.schemacompiler.model.TLCoreObject;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/ReferenceFinder.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/ReferenceFinder.java
similarity index 97%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/ReferenceFinder.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/ReferenceFinder.java
index 4b6f3e7f..c4d7c86b 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/ReferenceFinder.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/ReferenceFinder.java
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
-import org.opentravel.schemacompiler.index.EntitySearchResult;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.IndexingUtils;
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.EntitySearchResult;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.IndexingUtils;
+import org.opentravel.repocommon.index.LibrarySearchResult;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLAbstractEnumeration;
 import org.opentravel.schemacompiler.model.TLAttribute;
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/RepositoryLogoImage.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/RepositoryLogoImage.java
similarity index 95%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/RepositoryLogoImage.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/RepositoryLogoImage.java
index 3bc8f01d..ee09dedd 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/RepositoryLogoImage.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/RepositoryLogoImage.java
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;
@@ -37,7 +37,7 @@ public class RepositoryLogoImage {
     public static final String CUSTOM_LOGO_URL = "/service/customLogo";
 
     private static final Map<String,String> CONTENT_TYPE_MAPPINGS;
-    private static Log log = LogFactory.getLog( RepositoryLogoImage.class );
+    private static Logger log = LogManager.getLogger( RepositoryLogoImage.class );
 
     private static Map<String,RepositoryLogoImage> defaultInstances = new HashMap<>();
 
diff --git a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/SelectOption.java b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/SelectOption.java
similarity index 98%
rename from ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/SelectOption.java
rename to ota2-repository-service/src/main/java/org/opentravel/reposervice/util/SelectOption.java
index 4c8d36f7..e28cd5be 100644
--- a/ota2-repository-service/src/main/java/org/opentravel/schemacompiler/util/SelectOption.java
+++ b/ota2-repository-service/src/main/java/org/opentravel/reposervice/util/SelectOption.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.util;
+package org.opentravel.reposervice.util;
 
 import java.util.List;
 
diff --git a/ota2-repository-service/src/main/resources/log4j.properties b/ota2-repository-service/src/main/resources/log4j.properties
deleted file mode 100644
index addd1359..00000000
--- a/ota2-repository-service/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,7 +0,0 @@
-log4j.rootCategory=INFO,CONSOLE
-
-log4j.logger.org.springframework=WARN
-
-log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
diff --git a/ota2-repository-service/src/main/resources/log4j2.properties b/ota2-repository-service/src/main/resources/log4j2.properties
new file mode 100644
index 00000000..b97bf0d0
--- /dev/null
+++ b/ota2-repository-service/src/main/resources/log4j2.properties
@@ -0,0 +1,16 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = info
+rootLogger.appenderRef.stdout.ref = consoleLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = info
+
+logger.springframework.name = org.springframework
+logger.springframework.level = warn
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
diff --git a/ota2-repository-service/src/main/webapp/WEB-INF/console-servlet.xml b/ota2-repository-service/src/main/webapp/WEB-INF/console-servlet.xml
index 93e04d97..2405af46 100644
--- a/ota2-repository-service/src/main/webapp/WEB-INF/console-servlet.xml
+++ b/ota2-repository-service/src/main/webapp/WEB-INF/console-servlet.xml
@@ -23,7 +23,7 @@
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 	
-	<context:component-scan base-package="org.opentravel.schemacompiler.console" />
+	<context:component-scan base-package="org.opentravel.reposervice.console" />
 	<mvc:annotation-driven />
 	
 	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
diff --git a/ota2-repository-service/src/main/webapp/WEB-INF/web.xml b/ota2-repository-service/src/main/webapp/WEB-INF/web.xml
index 4b78fa17..696508ab 100644
--- a/ota2-repository-service/src/main/webapp/WEB-INF/web.xml
+++ b/ota2-repository-service/src/main/webapp/WEB-INF/web.xml
@@ -22,7 +22,7 @@
 
 	<servlet>
 		<servlet-name>jersey-serlvet</servlet-name>
-		<servlet-class>org.opentravel.schemacompiler.repository.RepositoryServlet</servlet-class>
+		<servlet-class>org.opentravel.reposervice.repository.RepositoryServlet</servlet-class>
 		<init-param>
 			<param-name>jersey.config.server.provider.classnames</param-name>
 			<param-value>
@@ -57,7 +57,7 @@
 
 	<filter>
 		<filter-name>BasicAuthFilter</filter-name>
-		<filter-class>org.opentravel.schemacompiler.repository.BasicAuthFilter</filter-class>
+		<filter-class>org.opentravel.reposervice.repository.BasicAuthFilter</filter-class>
 	</filter>
 
 	<filter-mapping>
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/AbstractConsoleTest.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/AbstractConsoleTest.java
similarity index 96%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/AbstractConsoleTest.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/AbstractConsoleTest.java
index 3279faad..3bdb7e56 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/AbstractConsoleTest.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/AbstractConsoleTest.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
-import org.opentravel.schemacompiler.repository.RepositoryTestBase;
+import org.opentravel.reposervice.repository.RepositoryTestBase;
 
 import com.gargoylesoftware.htmlunit.BrowserVersion;
 import com.gargoylesoftware.htmlunit.WebClient;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestAdminController.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestAdminController.java
similarity index 99%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestAdminController.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestAdminController.java
index 60bd4f00..c7fe4b60 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestAdminController.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestAdminController.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseController.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseController.java
similarity index 99%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseController.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseController.java
index 97e62dba..ac91e5d0 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseController.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseController.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseControllerJMS.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseControllerJMS.java
similarity index 96%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseControllerJMS.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseControllerJMS.java
index 2569de24..488bae5d 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseControllerJMS.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseControllerJMS.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseControllerRealTime.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseControllerRealTime.java
similarity index 96%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseControllerRealTime.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseControllerRealTime.java
index a4e9102f..0b5f79c8 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestBrowseControllerRealTime.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestBrowseControllerRealTime.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestConsoleBasicAuth.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestConsoleBasicAuth.java
similarity index 96%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestConsoleBasicAuth.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestConsoleBasicAuth.java
index 6f01fbc4..1c9a7a20 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestConsoleBasicAuth.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestConsoleBasicAuth.java
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import static org.junit.Assert.assertEquals;
 
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import org.opentravel.schemacompiler.repository.RepositoryTestBase;
+import org.opentravel.reposervice.repository.RepositoryTestBase;
 
 import com.unboundid.util.Base64;
 
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapAuthentication.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapAuthentication.java
similarity index 98%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapAuthentication.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapAuthentication.java
index 8c0b0546..192f663a 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapAuthentication.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapAuthentication.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import static org.junit.Assert.assertTrue;
 
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapLookupAuthentication.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapLookupAuthentication.java
similarity index 96%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapLookupAuthentication.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapLookupAuthentication.java
index dcce639f..6b78952d 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapLookupAuthentication.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapLookupAuthentication.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapSearchAuthentication.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapSearchAuthentication.java
similarity index 96%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapSearchAuthentication.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapSearchAuthentication.java
index 45f36f2e..9ec31ffa 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLdapSearchAuthentication.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLdapSearchAuthentication.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLoginController.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLoginController.java
similarity index 99%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLoginController.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLoginController.java
index b64efb29..2529edc3 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestLoginController.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestLoginController.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestSearchController.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestSearchController.java
similarity index 98%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestSearchController.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestSearchController.java
index 9d89d5a6..50ec55ea 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestSearchController.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestSearchController.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import static org.junit.Assert.assertTrue;
 
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestViewItemController.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestViewItemController.java
similarity index 99%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestViewItemController.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestViewItemController.java
index cd141859..1eb2b037 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/console/TestViewItemController.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/console/TestViewItemController.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.console;
+package org.opentravel.reposervice.console;
 
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryLockValidationTest.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryLockValidationTest.java
similarity index 97%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryLockValidationTest.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryLockValidationTest.java
index a6dbca5b..1f95766d 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryLockValidationTest.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryLockValidationTest.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.fail;
@@ -23,6 +23,8 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 import org.opentravel.schemacompiler.model.TLLibrary;
 import org.opentravel.schemacompiler.model.TLSimple;
+import org.opentravel.schemacompiler.repository.ProjectItem;
+import org.opentravel.schemacompiler.repository.RepositoryOutOfSyncException;
 
 import java.util.List;
 
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryMultiUserTestBase.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryMultiUserTestBase.java
similarity index 95%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryMultiUserTestBase.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryMultiUserTestBase.java
index 9f22b743..d933868b 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryMultiUserTestBase.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryMultiUserTestBase.java
@@ -14,13 +14,19 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertFalse;
 
 import org.junit.AfterClass;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
 import org.opentravel.schemacompiler.model.TLModel;
+import org.opentravel.schemacompiler.repository.Project;
+import org.opentravel.schemacompiler.repository.ProjectItem;
+import org.opentravel.schemacompiler.repository.ProjectManager;
+import org.opentravel.schemacompiler.repository.Repository;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
+import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.testutil.JettyTestServer;
 import org.opentravel.schemacompiler.repository.testutil.RepositoryTestUtils;
 import org.opentravel.schemacompiler.validate.FindingType;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryRefreshTest.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryRefreshTest.java
similarity index 97%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryRefreshTest.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryRefreshTest.java
index 8f811322..6acd8f35 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryRefreshTest.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryRefreshTest.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
@@ -22,6 +22,7 @@ import static org.junit.Assert.assertNotEquals;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.opentravel.schemacompiler.model.TLLibrary;
+import org.opentravel.schemacompiler.repository.ProjectItem;
 
 import java.util.List;
 
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryTestBase.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryTestBase.java
similarity index 97%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryTestBase.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryTestBase.java
index 73f69ff1..e1ee267e 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/RepositoryTestBase.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/RepositoryTestBase.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import org.opentravel.schemacompiler.repository.testutil.AbstractRepositoryTest;
 
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestFreeTextSearchService.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestFreeTextSearchService.java
similarity index 92%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestFreeTextSearchService.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestFreeTextSearchService.java
index 756ed089..649bd747 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestFreeTextSearchService.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestFreeTextSearchService.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
@@ -23,14 +23,18 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Test;
 import org.opentravel.ns.ota2.assembly_v01_00.AssemblyIdentityType;
 import org.opentravel.ns.ota2.assembly_v01_00.AssemblyType;
-import org.opentravel.schemacompiler.index.AssemblySearchResult;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.LibrarySearchResult;
-import org.opentravel.schemacompiler.index.RealTimeFreeTextSearchService;
-import org.opentravel.schemacompiler.index.ReleaseSearchResult;
-import org.opentravel.schemacompiler.index.SearchResult;
+import org.opentravel.repocommon.index.AssemblySearchResult;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.LibrarySearchResult;
+import org.opentravel.repocommon.index.RealTimeFreeTextSearchService;
+import org.opentravel.repocommon.index.ReleaseSearchResult;
+import org.opentravel.repocommon.index.SearchResult;
 import org.opentravel.schemacompiler.model.TLLibrary;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
+import org.opentravel.schemacompiler.repository.Release;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
+import org.opentravel.schemacompiler.repository.RepositoryManager;
+import org.opentravel.schemacompiler.repository.ServiceAssembly;
 import org.opentravel.schemacompiler.repository.testutil.RepositoryTestUtils;
 
 import java.io.File;
@@ -208,7 +212,7 @@ public class TestFreeTextSearchService {
         RepositoryItem item = service.getRepositoryManager().getRepositoryItem(
             "http://www.OpenTravel.org/ns/OTA2/SchemaCompiler/version-test", "Version_Test_1_0_0.otm", "1.0.0" );
         LibrarySearchResult lsr = service.getLibrary( item, true );
-        org.opentravel.schemacompiler.index.EntitySearchResult esr =
+        org.opentravel.repocommon.index.EntitySearchResult esr =
             service.getEntity( lsr.getSearchIndexId(), "SimpleCore", true );
 
         assertEquals( 2, service.getLibraryWhereUsed( lsr, true, true ).size() );
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestLocalRepositoryFunctions.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestLocalRepositoryFunctions.java
similarity index 90%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestLocalRepositoryFunctions.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestLocalRepositoryFunctions.java
index 2515b1df..6347a645 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestLocalRepositoryFunctions.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestLocalRepositoryFunctions.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
@@ -23,6 +23,10 @@ import static org.junit.Assert.assertNotNull;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.opentravel.schemacompiler.model.TLModel;
+import org.opentravel.schemacompiler.repository.Project;
+import org.opentravel.schemacompiler.repository.ProjectManager;
+import org.opentravel.schemacompiler.repository.Repository;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.testutil.RepositoryTestUtils;
 import org.opentravel.schemacompiler.validate.FindingType;
 import org.opentravel.schemacompiler.validate.ValidationFindings;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRemoteRepositoryFunctions.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRemoteRepositoryFunctions.java
similarity index 92%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRemoteRepositoryFunctions.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRemoteRepositoryFunctions.java
index b4d2afd0..1c1bf3b2 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRemoteRepositoryFunctions.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRemoteRepositoryFunctions.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
@@ -29,6 +29,10 @@ import org.junit.Test;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.RepositoryPermission;
 import org.opentravel.schemacompiler.model.NamedEntity;
 import org.opentravel.schemacompiler.model.TLLibrary;
+import org.opentravel.schemacompiler.repository.EntitySearchResult;
+import org.opentravel.schemacompiler.repository.RemoteRepository;
+import org.opentravel.schemacompiler.repository.RepositoryException;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
 
 import java.io.IOException;
 import java.util.List;
@@ -55,7 +59,7 @@ public class TestRemoteRepositoryFunctions extends TestRepositoryFunctions {
     }
 
     /**
-     * @see org.opentravel.schemacompiler.repository.TestRepositoryFunctions#test_01_PublishLibrary()
+     * @see org.opentravel.reposervice.repository.resource.TestRepositoryFunctions#test_01_PublishLibrary()
      */
     @Override
     public void test_01_PublishLibrary() throws Exception {
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryConcurrency.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryConcurrency.java
similarity index 97%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryConcurrency.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryConcurrency.java
index c8145e05..9c648dc0 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryConcurrency.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryConcurrency.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
@@ -26,11 +26,14 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.RepositoryUsers;
 import org.opentravel.ns.ota2.repositoryinfoext_v01_00.UserInfo;
+import org.opentravel.reposervice.svn.SvnserveProcess;
+import org.opentravel.reposervice.svn.TestOptions;
+import org.opentravel.schemacompiler.repository.Repository;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
+import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.impl.ProjectFileUtils;
 import org.opentravel.schemacompiler.repository.testutil.JettyTestServer;
 import org.opentravel.schemacompiler.repository.testutil.RepositoryTestUtils;
-import org.opentravel.schemacompiler.svn.SvnserveProcess;
-import org.opentravel.schemacompiler.svn.TestOptions;
 import org.opentravel.schemacompiler.util.FileUtils;
 import org.opentravel.schemacompiler.util.URLUtils;
 import org.tmatesoft.svn.core.SVNDepth;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryFunctions.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryFunctions.java
similarity index 97%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryFunctions.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryFunctions.java
index a15dfa2a..a79f374f 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryFunctions.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryFunctions.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
@@ -28,6 +28,25 @@ import org.opentravel.ns.ota2.release_v01_00.ReleaseStatus;
 import org.opentravel.schemacompiler.model.TLLibrary;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
 import org.opentravel.schemacompiler.model.TLModel;
+import org.opentravel.schemacompiler.repository.Project;
+import org.opentravel.schemacompiler.repository.ProjectItem;
+import org.opentravel.schemacompiler.repository.ProjectManager;
+import org.opentravel.schemacompiler.repository.PublishWithLocalDependenciesException;
+import org.opentravel.schemacompiler.repository.Release;
+import org.opentravel.schemacompiler.repository.ReleaseItem;
+import org.opentravel.schemacompiler.repository.ReleaseManager;
+import org.opentravel.schemacompiler.repository.ReleaseMember;
+import org.opentravel.schemacompiler.repository.RepositoryException;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
+import org.opentravel.schemacompiler.repository.RepositoryItemCommit;
+import org.opentravel.schemacompiler.repository.RepositoryItemHistory;
+import org.opentravel.schemacompiler.repository.RepositoryItemState;
+import org.opentravel.schemacompiler.repository.RepositoryItemType;
+import org.opentravel.schemacompiler.repository.RepositorySearchResult;
+import org.opentravel.schemacompiler.repository.ServiceAssembly;
+import org.opentravel.schemacompiler.repository.ServiceAssemblyItem;
+import org.opentravel.schemacompiler.repository.ServiceAssemblyManager;
+import org.opentravel.schemacompiler.repository.ServiceAssemblyMember;
 import org.opentravel.schemacompiler.repository.testutil.RepositoryTestUtils;
 import org.opentravel.schemacompiler.task.CompileAllCompilerTask;
 import org.opentravel.schemacompiler.util.URLUtils;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositorySearch.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositorySearch.java
similarity index 97%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositorySearch.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositorySearch.java
index cadf0af7..074e26b6 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositorySearch.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositorySearch.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
@@ -23,6 +23,8 @@ import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.opentravel.schemacompiler.model.TLLibraryStatus;
+import org.opentravel.schemacompiler.repository.Repository;
+import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.impl.RepositoryUtils;
 
 import java.util.ArrayList;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryVersioning.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryVersioning.java
similarity index 97%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryVersioning.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryVersioning.java
index 8e807488..c3c95148 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/repository/TestRepositoryVersioning.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/repository/TestRepositoryVersioning.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.repository;
+package org.opentravel.reposervice.repository;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
@@ -25,6 +25,9 @@ import org.junit.BeforeClass;
 import org.junit.Test;
 import org.opentravel.schemacompiler.model.TLLibrary;
 import org.opentravel.schemacompiler.model.TLModel;
+import org.opentravel.schemacompiler.repository.Project;
+import org.opentravel.schemacompiler.repository.ProjectItem;
+import org.opentravel.schemacompiler.repository.ProjectManager;
 import org.opentravel.schemacompiler.repository.testutil.RepositoryTestUtils;
 import org.opentravel.schemacompiler.validate.FindingType;
 import org.opentravel.schemacompiler.validate.ValidationFindings;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/SvnserveProcess.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/SvnserveProcess.java
similarity index 99%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/SvnserveProcess.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/SvnserveProcess.java
index 4817a469..b10a5454 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/SvnserveProcess.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/SvnserveProcess.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.svn;
+package org.opentravel.reposervice.svn;
 
 import org.tmatesoft.svn.core.SVNException;
 import org.tmatesoft.svn.core.SVNURL;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/TestOptions.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/TestOptions.java
similarity index 99%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/TestOptions.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/TestOptions.java
index b6a2486f..af405db4 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/TestOptions.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/TestOptions.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.svn;
+package org.opentravel.reposervice.svn;
 
 import org.tmatesoft.svn.core.SVNException;
 import org.tmatesoft.svn.core.SVNURL;
diff --git a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/TestUtil.java b/ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/TestUtil.java
similarity index 99%
rename from ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/TestUtil.java
rename to ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/TestUtil.java
index 1fe4760a..d58dfcfe 100644
--- a/ota2-repository-service/src/test/java/org/opentravel/schemacompiler/svn/TestUtil.java
+++ b/ota2-repository-service/src/test/java/org/opentravel/reposervice/svn/TestUtil.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package org.opentravel.schemacompiler.svn;
+package org.opentravel.reposervice.svn;
 
 import org.tmatesoft.svn.core.SVNDepth;
 import org.tmatesoft.svn.core.SVNErrorCode;
diff --git a/ota2-repository-service/src/test/resources/log4j.properties b/ota2-repository-service/src/test/resources/log4j.properties
deleted file mode 100644
index de18c8ec..00000000
--- a/ota2-repository-service/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,9 +0,0 @@
-log4j.rootCategory=OFF, CONSOLE
-
-log4j.logger.org.opentravel=FATAL
-log4j.logger.org.springframework=WARN
-log4j.logger.org.eclipse.jetty=WARN
-
-log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
diff --git a/ota2-repository-service/src/test/resources/log4j2.properties b/ota2-repository-service/src/test/resources/log4j2.properties
new file mode 100644
index 00000000..7127e75e
--- /dev/null
+++ b/ota2-repository-service/src/test/resources/log4j2.properties
@@ -0,0 +1,19 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = off
+rootLogger.appenderRef.stdout.ref = consoleLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = fatal
+
+logger.springframework.name = org.springframework
+logger.springframework.level = warn
+
+logger.jetty.name = org.eclipse.jetty
+logger.jetty.level = warn
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
diff --git a/ota2-repository-service/src/test/resources/ota2-repository-config-jmsindex.xml b/ota2-repository-service/src/test/resources/ota2-repository-config-jmsindex.xml
index 42d501e8..c00bd389 100644
--- a/ota2-repository-service/src/test/resources/ota2-repository-config-jmsindex.xml
+++ b/ota2-repository-service/src/test/resources/ota2-repository-config-jmsindex.xml
@@ -36,7 +36,7 @@
 		-->
 		<!--
 		<constructor-arg>
-			<bean class="org.opentravel.schemacompiler.repository.SVNRepositoryFileManager">
+			<bean class="org.opentravel.repocommon.repository.SVNRepositoryFileManager">
 				<constructor-arg ref="repositoryLocation" />
 				<constructor-arg ref="svnConfigFolder" />
 			</bean>
@@ -50,7 +50,7 @@
 		Provides all authentication and authorization services required for secure operation of the OTA2.0
 		repository.
 	-->
-	<bean id="securityManager" class="org.opentravel.schemacompiler.security.impl.DefaultRepositorySecurityManager">
+	<bean id="securityManager" class="org.opentravel.repocommon.security.impl.DefaultRepositorySecurityManager">
 		<constructor-arg ref="repositoryManager" />
 		<constructor-arg ref="authenticationProvider" />
 		<constructor-arg ref="authorizationProvider" />
@@ -65,7 +65,7 @@
 	-->
 	<!--
 	-->
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.FileAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.FileAuthenticationProvider">
 		<property name="repositoryManager" ref="repositoryManager" />
 	</bean>
 	
@@ -75,7 +75,7 @@
 		Provides information about which operations a particular user is authorized to perform on a namespace
 		in the OTA2.0 repository.
 	-->
-	<bean id="authorizationProvider" class="org.opentravel.schemacompiler.security.impl.DefaultAuthorizationProvider">
+	<bean id="authorizationProvider" class="org.opentravel.repocommon.security.impl.DefaultAuthorizationProvider">
 		<constructor-arg ref="repositoryManager" />
 	</bean>
 	
@@ -113,7 +113,7 @@
 		Optional configuration that defines the implementation class for the notification service and the
 		JMS connection factory and queues used to publish notification events.
 	-->
-	<bean id="notificationService" class="org.opentravel.schemacompiler.notification.JMSNotificationService">
+	<bean id="notificationService" class="org.opentravel.reposervice.notification.JMSNotificationService">
 		<constructor-arg ref="notificationJmsService" />
 	</bean>
 	
@@ -140,12 +140,12 @@
 		
 		Configuration settings used for subscriptions and email notifications.
 	-->
-	<bean id="subscriptionManager" class="org.opentravel.schemacompiler.subscription.SubscriptionManager">
+	<bean id="subscriptionManager" class="org.opentravel.repocommon.subscription.SubscriptionManager">
 		<constructor-arg index="0" ref="repositoryManager" />
 		<property name="baseRepositoryUrl" value="http://www.repohostname.com:8181/ota2-repository-service" />
 		<property name="notificationDelay" value="1000" />
 		<property name="smtpConfig">
-			<bean class="org.opentravel.schemacompiler.subscription.SMTPConfig">
+			<bean class="org.opentravel.repocommon.subscription.SMTPConfig">
 				<property name="smtpHost" value="smtp.example.com" />
 				<property name="smtpPort" value="587" />
 				<property name="smtpUser" value="user1" />
diff --git a/ota2-repository-service/src/test/resources/ota2-repository-config-ldaplookup.xml b/ota2-repository-service/src/test/resources/ota2-repository-config-ldaplookup.xml
index 055cf548..001d5b3e 100644
--- a/ota2-repository-service/src/test/resources/ota2-repository-config-ldaplookup.xml
+++ b/ota2-repository-service/src/test/resources/ota2-repository-config-ldaplookup.xml
@@ -36,7 +36,7 @@
 		-->
 		<!--
 		<constructor-arg>
-			<bean class="org.opentravel.schemacompiler.repository.SVNRepositoryFileManager">
+			<bean class="org.opentravel.repocommon.repository.SVNRepositoryFileManager">
 				<constructor-arg ref="repositoryLocation" />
 				<constructor-arg ref="svnConfigFolder" />
 			</bean>
@@ -50,7 +50,7 @@
 		Provides all authentication and authorization services required for secure operation of the OTA2.0
 		repository.
 	-->
-	<bean id="securityManager" class="org.opentravel.schemacompiler.security.impl.DefaultRepositorySecurityManager">
+	<bean id="securityManager" class="org.opentravel.repocommon.security.impl.DefaultRepositorySecurityManager">
 		<constructor-arg ref="repositoryManager" />
 		<constructor-arg ref="authenticationProvider" />
 		<constructor-arg ref="authorizationProvider" />
@@ -72,7 +72,7 @@
 		defined in the directory.  Once identified, encrypted password credentials are retrieved from the
 		directory and compared with the credentials provided by the remote user of the repository.
 	-->
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.JNDIAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.JNDIAuthenticationProvider">
 		<property name="repositoryManager" ref="repositoryManager" />
 		<property name="connectionUrl" value="ldap://localhost:1389/dc=opentravel,dc=org" />
 		<property name="securityAuthentication" value="simple" />
@@ -92,7 +92,7 @@
 		Provides information about which operations a particular user is authorized to perform on a namespace
 		in the OTA2.0 repository.
 	-->
-	<bean id="authorizationProvider" class="org.opentravel.schemacompiler.security.impl.DefaultAuthorizationProvider">
+	<bean id="authorizationProvider" class="org.opentravel.repocommon.security.impl.DefaultAuthorizationProvider">
 		<constructor-arg ref="repositoryManager" />
 	</bean>
 	
@@ -139,7 +139,7 @@
 		Optional configuration that defines the implementation class for the notification service and the
 		JMS connection factory and queues used to publish notification events.
 	-->
-	<bean id="notificationService" class="org.opentravel.schemacompiler.notification.JMSNotificationService">
+	<bean id="notificationService" class="org.opentravel.reposervice.notification.JMSNotificationService">
 		<constructor-arg ref="notificationJmsService" />
 	</bean>
 	
@@ -166,12 +166,12 @@
 		
 		Configuration settings used for subscriptions and email notifications.
 	-->
-	<bean id="subscriptionManager" class="org.opentravel.schemacompiler.subscription.SubscriptionManager">
+	<bean id="subscriptionManager" class="org.opentravel.repocommon.subscription.SubscriptionManager">
 		<constructor-arg index="0" ref="repositoryManager" />
 		<property name="baseRepositoryUrl" value="http://www.repohostname.com:8181/ota2-repository-service" />
 		<property name="notificationDelay" value="1000" />
 		<property name="smtpConfig">
-			<bean class="org.opentravel.schemacompiler.subscription.SMTPConfig">
+			<bean class="org.opentravel.repocommon.subscription.SMTPConfig">
 				<property name="smtpHost" value="smtp.example.com" />
 				<property name="smtpPort" value="587" />
 				<property name="smtpUser" value="user1" />
diff --git a/ota2-repository-service/src/test/resources/ota2-repository-config-ldapsearch.xml b/ota2-repository-service/src/test/resources/ota2-repository-config-ldapsearch.xml
index 37a62633..c2affd31 100644
--- a/ota2-repository-service/src/test/resources/ota2-repository-config-ldapsearch.xml
+++ b/ota2-repository-service/src/test/resources/ota2-repository-config-ldapsearch.xml
@@ -36,7 +36,7 @@
 		-->
 		<!--
 		<constructor-arg>
-			<bean class="org.opentravel.schemacompiler.repository.SVNRepositoryFileManager">
+			<bean class="org.opentravel.repocommon.repocommon.SVNRepositoryFileManager">
 				<constructor-arg ref="repositoryLocation" />
 				<constructor-arg ref="svnConfigFolder" />
 			</bean>
@@ -50,7 +50,7 @@
 		Provides all authentication and authorization services required for secure operation of the OTA2.0
 		repository.
 	-->
-	<bean id="securityManager" class="org.opentravel.schemacompiler.security.impl.DefaultRepositorySecurityManager">
+	<bean id="securityManager" class="org.opentravel.repocommon.security.impl.DefaultRepositorySecurityManager">
 		<constructor-arg ref="repositoryManager" />
 		<constructor-arg ref="authenticationProvider" />
 		<constructor-arg ref="authorizationProvider" />
@@ -65,7 +65,7 @@
 		located by a search, the user's encrypted password credentials are retrieved from the directory and
 		compared with the credentials provided by the remote user of the repository.
 	-->
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.JNDIAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.JNDIAuthenticationProvider">
 		<property name="repositoryManager" ref="repositoryManager" />
 		<property name="connectionUrl" value="ldap://localhost:1489/dc=opentravel,dc=org" />
 		<property name="securityAuthentication" value="simple" />
@@ -83,7 +83,7 @@
 		Provides information about which operations a particular user is authorized to perform on a namespace
 		in the OTA2.0 repository.
 	-->
-	<bean id="authorizationProvider" class="org.opentravel.schemacompiler.security.impl.DefaultAuthorizationProvider">
+	<bean id="authorizationProvider" class="org.opentravel.repocommon.security.impl.DefaultAuthorizationProvider">
 		<constructor-arg ref="repositoryManager" />
 	</bean>
 	
@@ -130,7 +130,7 @@
 		Optional configuration that defines the implementation class for the notification service and the
 		JMS connection factory and queues used to publish notification events.
 	-->
-	<bean id="notificationService" class="org.opentravel.schemacompiler.notification.JMSNotificationService">
+	<bean id="notificationService" class="org.opentravel.reposervice.notification.JMSNotificationService">
 		<constructor-arg ref="notificationJmsService" />
 	</bean>
 	
@@ -157,12 +157,12 @@
 		
 		Configuration settings used for subscriptions and email notifications.
 	-->
-	<bean id="subscriptionManager" class="org.opentravel.schemacompiler.subscription.SubscriptionManager">
+	<bean id="subscriptionManager" class="org.opentravel.repocommon.subscription.SubscriptionManager">
 		<constructor-arg index="0" ref="repositoryManager" />
 		<property name="baseRepositoryUrl" value="http://www.repohostname.com:8181/ota2-repository-service" />
 		<property name="notificationDelay" value="1000" />
 		<property name="smtpConfig">
-			<bean class="org.opentravel.schemacompiler.subscription.SMTPConfig">
+			<bean class="org.opentravel.repocommon.subscription.SMTPConfig">
 				<property name="smtpHost" value="smtp.example.com" />
 				<property name="smtpPort" value="587" />
 				<property name="smtpUser" value="user1" />
diff --git a/ota2-repository-service/src/test/resources/ota2-repository-config-svn.xml b/ota2-repository-service/src/test/resources/ota2-repository-config-svn.xml
index dcbe1262..a24cab6a 100644
--- a/ota2-repository-service/src/test/resources/ota2-repository-config-svn.xml
+++ b/ota2-repository-service/src/test/resources/ota2-repository-config-svn.xml
@@ -42,7 +42,7 @@
 		 Uncomment for SVN persistence of repository files.
 		-->
 		<constructor-arg>
-			<bean class="org.opentravel.schemacompiler.repository.SVNRepositoryFileManager">
+			<bean class="org.opentravel.repocommon.repository.SVNRepositoryFileManager">
 				<constructor-arg ref="repositoryLocation" />
 				<constructor-arg ref="svnConfigFolder" />
 				<constructor-arg ref="svnCredentialsFile" />
@@ -56,7 +56,7 @@
 		Provides all authentication and authorization services required for secure operation of the OTA2.0
 		repository.
 	-->
-	<bean id="securityManager" class="org.opentravel.schemacompiler.security.impl.DefaultRepositorySecurityManager">
+	<bean id="securityManager" class="org.opentravel.repocommon.security.impl.DefaultRepositorySecurityManager">
 		<constructor-arg ref="repositoryManager" />
 		<constructor-arg ref="authenticationProvider" />
 		<constructor-arg ref="authorizationProvider" />
@@ -71,7 +71,7 @@
 	-->
 	<!--
 	-->
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.FileAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.FileAuthenticationProvider">
 		<property name="repositoryManager" ref="repositoryManager" />
 	</bean>
 	
@@ -86,7 +86,7 @@
 		server itself.
 	-->
 	<!--
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.JNDIAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.JNDIAuthenticationProvider">
 		<property name="connectionUrl" value="ldap://localhost:389/dc=opentravel,dc=com" />
 		<property name="securityAuthentication" value="simple" />
 		<property name="connectionPrincipal" value="cn=Manager,dc=opentravel,dc=com" />
@@ -105,7 +105,7 @@
 		directory and compared with the credentials provided by the remote user of the repository.
 	-->
 	<!--
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.JNDIAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.JNDIAuthenticationProvider">
 		<property name="connectionUrl" value="ldap://localhost:389/dc=opentravel,dc=com" />
 		<property name="securityAuthentication" value="simple" />
 		<property name="connectionPrincipal" value="cn=Manager,dc=opentravel,dc=com" />
@@ -125,7 +125,7 @@
 		compared with the credentials provided by the remote user of the repository.
 	-->
 	<!--
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.JNDIAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.JNDIAuthenticationProvider">
 		<property name="connectionUrl" value="ldap://localhost:389/dc=opentravel,dc=com" />
 		<property name="securityAuthentication" value="simple" />
 		<property name="connectionPrincipal" value="cn=Manager,dc=opentravel,dc=com" />
@@ -142,7 +142,7 @@
 		Provides information about which operations a particular user is authorized to perform on a namespace
 		in the OTA2.0 repository.
 	-->
-	<bean id="authorizationProvider" class="org.opentravel.schemacompiler.security.impl.DefaultAuthorizationProvider">
+	<bean id="authorizationProvider" class="org.opentravel.repocommon.security.impl.DefaultAuthorizationProvider">
 		<constructor-arg ref="repositoryManager" />
 	</bean>
 	
@@ -194,19 +194,19 @@
 		NOTE: The 'notificationAMQConnectionFactory' bean definition may change based upon the MQ provider to
 		which notifications will be sent.  This example assumes an ActiveMQ provider running on localhost.
 	-->
-	<bean id="notificationService" class="org.opentravel.schemacompiler.notification.NoOpNotificationService" />
+	<bean id="notificationService" class="org.opentravel.reposervice.notification.NoOpNotificationService" />
 	
 	<!--
 		Subscription Manager Configuration:
 		
 		Configuration settings used for subscriptions and email notifications.
 	-->
-	<bean id="subscriptionManager" class="org.opentravel.schemacompiler.subscription.SubscriptionManager">
+	<bean id="subscriptionManager" class="org.opentravel.repocommon.subscription.SubscriptionManager">
 		<constructor-arg index="0" ref="repositoryManager" />
 		<property name="baseRepositoryUrl" value="http://www.repohostname.com:8181/ota2-repository-service" />
 		<property name="notificationDelay" value="1000" />
 		<property name="smtpConfig">
-			<bean class="org.opentravel.schemacompiler.subscription.SMTPConfig">
+			<bean class="org.opentravel.repocommon.subscription.SMTPConfig">
 				<property name="smtpHost" value="smtp.example.com" />
 				<property name="smtpPort" value="587" />
 				<property name="smtpUser" value="user1" />
diff --git a/ota2-repository-service/src/test/resources/ota2-repository-config.xml b/ota2-repository-service/src/test/resources/ota2-repository-config.xml
index f44b1637..3e90e708 100644
--- a/ota2-repository-service/src/test/resources/ota2-repository-config.xml
+++ b/ota2-repository-service/src/test/resources/ota2-repository-config.xml
@@ -36,7 +36,7 @@
 		-->
 		<!--
 		<constructor-arg>
-			<bean class="org.opentravel.schemacompiler.repository.SVNRepositoryFileManager">
+			<bean class="org.opentravel.repocommon.repository.SVNRepositoryFileManager">
 				<constructor-arg ref="repositoryLocation" />
 				<constructor-arg ref="svnConfigFolder" />
 			</bean>
@@ -50,7 +50,7 @@
 		Provides all authentication and authorization services required for secure operation of the OTA2.0
 		repository.
 	-->
-	<bean id="securityManager" class="org.opentravel.schemacompiler.security.impl.DefaultRepositorySecurityManager">
+	<bean id="securityManager" class="org.opentravel.repocommon.security.impl.DefaultRepositorySecurityManager">
 		<constructor-arg ref="repositoryManager" />
 		<constructor-arg ref="authenticationProvider" />
 		<constructor-arg ref="authorizationProvider" />
@@ -65,7 +65,7 @@
 	-->
 	<!--
 	-->
-	<bean id="authenticationProvider" class="org.opentravel.schemacompiler.security.impl.FileAuthenticationProvider">
+	<bean id="authenticationProvider" class="org.opentravel.repocommon.security.impl.FileAuthenticationProvider">
 		<property name="repositoryManager" ref="repositoryManager" />
 	</bean>
 	
@@ -75,7 +75,7 @@
 		Provides information about which operations a particular user is authorized to perform on a namespace
 		in the OTA2.0 repository.
 	-->
-	<bean id="authorizationProvider" class="org.opentravel.schemacompiler.security.impl.DefaultAuthorizationProvider">
+	<bean id="authorizationProvider" class="org.opentravel.repocommon.security.impl.DefaultAuthorizationProvider">
 		<constructor-arg ref="repositoryManager" />
 	</bean>
 	
@@ -122,7 +122,7 @@
 		Optional configuration that defines the implementation class for the notification service and the
 		JMS connection factory and queues used to publish notification events.
 	-->
-	<bean id="notificationService" class="org.opentravel.schemacompiler.notification.JMSNotificationService">
+	<bean id="notificationService" class="org.opentravel.reposervice.notification.JMSNotificationService">
 		<constructor-arg ref="notificationJmsService" />
 	</bean>
 	
@@ -149,12 +149,12 @@
 		
 		Configuration settings used for subscriptions and email notifications.
 	-->
-	<bean id="subscriptionManager" class="org.opentravel.schemacompiler.subscription.SubscriptionManager">
+	<bean id="subscriptionManager" class="org.opentravel.repocommon.subscription.SubscriptionManager">
 		<constructor-arg index="0" ref="repositoryManager" />
 		<property name="baseRepositoryUrl" value="http://www.repohostname.com:8181/ota2-repository-service" />
 		<property name="notificationDelay" value="1000" />
 		<property name="smtpConfig">
-			<bean class="org.opentravel.schemacompiler.subscription.SMTPConfig">
+			<bean class="org.opentravel.repocommon.subscription.SMTPConfig">
 				<property name="smtpHost" value="localhost" />
 				<property name="smtpPort" value="#{systemProperties['smtp.port']}" />
 				<property name="smtpUser" value="testuser" />
diff --git a/ota2-repository-testutil/pom.xml b/ota2-repository-testutil/pom.xml
index d6de92bd..0b9415ce 100644
--- a/ota2-repository-testutil/pom.xml
+++ b/ota2-repository-testutil/pom.xml
@@ -1,5 +1,4 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
 	<modelVersion>4.0.0</modelVersion>
 	<artifactId>ota2-repository-testutil</artifactId>
@@ -8,14 +7,14 @@
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
 		<checkstyle.config>${basedir}/../checkstyle.xml</checkstyle.config>
 		<license.file>${basedir}/../apache2-license.txt</license.file>
 	</properties>
-	
+
 	<dependencies>
 		<dependency>
 			<groupId>org.opentravel.otm</groupId>
@@ -38,6 +37,14 @@
 			<groupId>org.glassfish.jersey.core</groupId>
 			<artifactId>jersey-server</artifactId>
 		</dependency>
+		<dependency>
+			<groupId>org.glassfish.jersey.media</groupId>
+			<artifactId>jersey-media-jaxb</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.glassfish.jersey.media</groupId>
+			<artifactId>jersey-media-multipart</artifactId>
+		</dependency>
 		<dependency>
 			<groupId>org.glassfish.jersey.inject</groupId>
 			<artifactId>jersey-hk2</artifactId>
diff --git a/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/AbstractRepositoryTest.java b/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/AbstractRepositoryTest.java
index 52a33b16..2bb9d7cc 100644
--- a/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/AbstractRepositoryTest.java
+++ b/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/AbstractRepositoryTest.java
@@ -16,7 +16,7 @@
 
 package org.opentravel.schemacompiler.repository.testutil;
 
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
 import org.opentravel.schemacompiler.model.TLModel;
 import org.opentravel.schemacompiler.repository.Project;
 import org.opentravel.schemacompiler.repository.ProjectItem;
@@ -180,6 +180,7 @@ public abstract class AbstractRepositoryTest {
             jettyServer.get().start( enableWebConsole );
 
         } catch (Exception e) {
+            e.printStackTrace( System.out );
             throw new RepositoryException( "Error starting Jetty test server", e );
         }
 
diff --git a/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/JettyTestServer.java b/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/JettyTestServer.java
index c8b476f8..f27d49b1 100644
--- a/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/JettyTestServer.java
+++ b/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/JettyTestServer.java
@@ -16,28 +16,25 @@
 
 package org.opentravel.schemacompiler.repository.testutil;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
 import org.apache.jasper.compiler.TldCache;
 import org.apache.jasper.runtime.JspFactoryImpl;
 import org.apache.jasper.servlet.JspServlet;
 import org.apache.jasper.servlet.TldScanner;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.apache.tomcat.InstanceManager;
 import org.apache.tomcat.JarScanner;
 import org.apache.tomcat.SimpleInstanceManager;
 import org.apache.tomcat.util.scan.StandardJarScanner;
 import org.eclipse.jetty.server.Server;
 import org.eclipse.jetty.server.handler.ErrorHandler;
-import org.eclipse.jetty.servlet.DefaultServlet;
 import org.eclipse.jetty.servlet.ServletContextHandler;
 import org.eclipse.jetty.servlet.ServletHolder;
-import org.eclipse.jetty.util.log.Logger;
 import org.glassfish.jersey.server.ResourceConfig;
-import org.glassfish.jersey.server.ServerProperties;
-import org.opentravel.schemacompiler.index.FreeTextSearchService;
-import org.opentravel.schemacompiler.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.index.FreeTextSearchService;
+import org.opentravel.repocommon.index.FreeTextSearchServiceFactory;
+import org.opentravel.repocommon.repository.RepositoryComponentFactory;
 import org.opentravel.schemacompiler.repository.RemoteRepository;
-import org.opentravel.schemacompiler.repository.RepositoryComponentFactory;
 import org.opentravel.schemacompiler.repository.RepositoryException;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.repository.impl.RemoteRepositoryUtils;
@@ -50,8 +47,6 @@ import java.lang.reflect.Constructor;
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.util.EnumSet;
-import java.util.HashMap;
-import java.util.Map;
 
 import javax.servlet.DispatcherType;
 import javax.servlet.Filter;
@@ -70,11 +65,11 @@ public class JettyTestServer {
     private static final String CONTEXT_PATH = "/ota2-repository-service";
     @SuppressWarnings("squid:S1075")
     private static final String SEARCH_INDEX_PATH = "/search-index";
-    private static final String REPOSITORY_SERVLET_CLASS = "org.opentravel.schemacompiler.repository.RepositoryServlet";
-    private static final String AUTH_FILTER_CLASS = "org.opentravel.schemacompiler.repository.BasicAuthFilter";
+    private static final String REPOSITORY_SERVLET_CLASS = "org.opentravel.reposervice.repository.RepositoryServlet";
+    private static final String AUTH_FILTER_CLASS = "org.opentravel.reposervice.repository.BasicAuthFilter";
     private static final String USER_DIR = "user.dir";
 
-    private static Log log = LogFactory.getLog( JettyTestServer.class );
+    private static Logger log = LogManager.getLogger( JettyTestServer.class );
 
     private Server jettyServer;
     private File repositorySnapshotLocation;
@@ -97,9 +92,6 @@ public class JettyTestServer {
         this.repositoryIndexLocation = new File( repositoryRuntimeLocation.getParentFile(), SEARCH_INDEX_PATH );
         this.port = port;
 
-        // disable logging becouse of invalid slf4j version
-        org.eclipse.jetty.util.log.Log.setLog( new NoLogging() );
-
         if ((repositorySnapshotLocation != null) && !repositorySnapshotLocation.exists()) {
             throw new IllegalArgumentException(
                 "Repository Snapshot Not Found: " + repositorySnapshotLocation.getAbsolutePath() );
@@ -138,11 +130,8 @@ public class JettyTestServer {
         Constructor<? extends Servlet> servletConstructor = servletClass.getConstructor( ResourceConfig.class );
         ServletContextHandler context = new ServletContextHandler( ServletContextHandler.SESSIONS );
         ResourceConfig resourceConfig = new ResourceConfig();
-        Map<String,Object> resourceProps = new HashMap<>();
 
-        resourceProps.put( ServerProperties.PROVIDER_PACKAGES,
-            "org.opentravel.schemacompiler.repository org.opentravel.schemacompiler.providers" );
-        resourceConfig.addProperties( resourceProps );
+        resourceConfig.packages( "org.opentravel.reposervice.repository", "org.opentravel.reposervice.providers" );
 
         context.setContextPath( CONTEXT_PATH );
         context.setResourceBase( System.getProperty( USER_DIR ) + "/src/main/webapp" );
@@ -179,7 +168,7 @@ public class JettyTestServer {
     private void configureConsoleSupport(ServletContextHandler context)
         throws IOException, SAXException, ClassNotFoundException {
         File targetTemp = new File( System.getProperty( USER_DIR ), "target/jsp-temp" );
-        ServletHolder holderDefault = new ServletHolder( "default", new DefaultServlet() );
+        // ServletHolder holderDefault = new ServletHolder( "default", new DefaultServlet() );
         ServletHolder holderJsp = new ServletHolder( "jsp", new JspServlet() );
         Class<? extends Filter> authFilterClass = (Class<? extends Filter>) Class.forName( AUTH_FILTER_CLASS );
         TldScanner scanner = new TldScanner( context.getServletContext(), true, false, true );
@@ -196,7 +185,8 @@ public class JettyTestServer {
         context.setClassLoader( new URLClassLoader( new URL[0], this.getClass().getClassLoader() ) );
 
         holderJsp.setInitOrder( 0 );
-        holderJsp.setInitParameter( "logVerbosityLevel", "DEBUG" );
+        // holderJsp.setInitParameter( "logVerbosityLevel", "DEBUG" );
+        holderJsp.setInitParameter( "development", "true" );
         holderJsp.setInitParameter( "fork", "false" );
         holderJsp.setInitParameter( "xpoweredBy", "false" );
         holderJsp.setInitParameter( "compilerTargetVM", "1.8" );
@@ -204,10 +194,10 @@ public class JettyTestServer {
         holderJsp.setInitParameter( "keepgenerated", "true" );
         JspFactory.setDefaultFactory( new JspFactoryImpl() );
 
-        holderDefault.setInitParameter( "resourceBase", context.getResourceBase() );
-        holderDefault.setInitParameter( "dirAllowed", "true" );
+        // holderDefault.setInitParameter( "resourceBase", context.getResourceBase() );
+        // holderDefault.setInitParameter( "dirAllowed", "true" );
 
-        context.addServlet( holderDefault, "/" );
+        // context.addServlet( holderDefault, "/" );
         context.addServlet( holderJsp, "*.jsp" );
 
         scanner.scan();
@@ -315,82 +305,4 @@ public class JettyTestServer {
         RepositoryTestUtils.deleteContents( repositoryIndexLocation );
     }
 
-    public class NoLogging implements Logger {
-        @Override
-        public String getName() {
-            return "no";
-        }
-
-        @Override
-        public void warn(String msg, Object... args) {
-            // No action
-        }
-
-        @Override
-        public void warn(Throwable thrown) {
-            // No action
-        }
-
-        @Override
-        public void warn(String msg, Throwable thrown) {
-            // No action
-        }
-
-        @Override
-        public void info(String msg, Object... args) {
-            // No action
-        }
-
-        @Override
-        public void info(Throwable thrown) {
-            // No action
-        }
-
-        @Override
-        public void info(String msg, Throwable thrown) {
-            // No action
-        }
-
-        @Override
-        public boolean isDebugEnabled() {
-            return false;
-        }
-
-        @Override
-        public void setDebugEnabled(boolean enabled) {
-            // No action
-        }
-
-        @Override
-        public void debug(String msg, Object... args) {
-            // No action
-        }
-
-        @Override
-        public void debug(String msg, long level) {
-            // No action
-        }
-
-        @Override
-        public void debug(Throwable thrown) {
-            // No action
-        }
-
-        @Override
-        public void debug(String msg, Throwable thrown) {
-            // No action
-        }
-
-        @Override
-        public Logger getLogger(String name) {
-            return this;
-        }
-
-        @Override
-        public void ignore(Throwable ignored) {
-            // No action
-        }
-
-    }
-
 }
diff --git a/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/RepositoryTestUtils.java b/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/RepositoryTestUtils.java
index 1bb33af9..ca8d7f98 100644
--- a/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/RepositoryTestUtils.java
+++ b/ota2-repository-testutil/src/main/java/org/opentravel/schemacompiler/repository/testutil/RepositoryTestUtils.java
@@ -16,8 +16,8 @@
 
 package org.opentravel.schemacompiler.repository.testutil;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.util.FileUtils;
 import org.opentravel.schemacompiler.validate.FindingMessageFormat;
 import org.opentravel.schemacompiler.validate.FindingType;
@@ -37,7 +37,7 @@ import java.io.OutputStream;
  */
 public class RepositoryTestUtils {
 
-    private static Log log = LogFactory.getLog( RepositoryTestUtils.class );
+    private static Logger log = LogManager.getLogger( RepositoryTestUtils.class );
 
     /**
      * Private constructor to prevent instantiation.
diff --git a/ota2-schema-compiler/pom.xml b/ota2-schema-compiler/pom.xml
index a45648b8..f12b4b78 100644
--- a/ota2-schema-compiler/pom.xml
+++ b/ota2-schema-compiler/pom.xml
@@ -9,7 +9,7 @@
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
@@ -26,6 +26,7 @@
 		<dependency>
 			<groupId>org.apache.maven</groupId>
 			<artifactId>maven-plugin-api</artifactId>
+			<scope>provided</scope>
 		</dependency>
 		<dependency>
 			<groupId>org.apache.maven.plugin-tools</groupId>
diff --git a/ota2-schema-compiler/src/main/resources/log4j.properties b/ota2-schema-compiler/src/main/resources/log4j.properties
deleted file mode 100644
index 9ff0f83a..00000000
--- a/ota2-schema-compiler/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,8 +0,0 @@
-log4j.rootCategory=OFF, CONSOLE
-
-log4j.logger.org.opentravel=OFF
-log4j.logger.org.springframework=OFF
-
-log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
diff --git a/ota2-schema-compiler/src/main/resources/log4j2.properties b/ota2-schema-compiler/src/main/resources/log4j2.properties
new file mode 100644
index 00000000..41373cfe
--- /dev/null
+++ b/ota2-schema-compiler/src/main/resources/log4j2.properties
@@ -0,0 +1,16 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = off
+rootLogger.appenderRef.stdout.ref = consoleLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = off
+
+logger.springframework.name = org.springframework
+logger.springframework.level = off
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
diff --git a/pom.xml b/pom.xml
index 9fbcaac4..deec7949 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,13 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
-	xmlns="http://maven.apache.org/POM/4.0.0"
-	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
+<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 
 	<modelVersion>4.0.0</modelVersion>
 	<groupId>org.opentravel.otm</groupId>
 	<artifactId>ota-parent-pom</artifactId>
-	<version>4.0-SNAPSHOT</version>
+	<version>5.0-SNAPSHOT</version>
 	<packaging>pom</packaging>
 	<inceptionYear>2014</inceptionYear>
 
@@ -28,21 +25,20 @@
 
 	<properties>
 		<!-- General Build Properties -->
-		<java.version>1.8</java.version>
+		<java.version>17</java.version>
 		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
 
 		<!-- Dependency Versions -->
-		<jaxb.api.version>2.4.0-b180830.0359</jaxb.api.version>
-		<jaxb.core.version>2.3.0.1</jaxb.core.version>
-		<jaxb.runtime.version>2.4.0-b180830.0438</jaxb.runtime.version>
-		<jaxb.xjc.version>2.3.2</jaxb.xjc.version>
-		<jakarta.activation.version>1.2.1</jakarta.activation.version>
+		<jaxb.impl.version>2.3.3</jaxb.impl.version>
+		<jaxb.xjc.version>2.3.3</jaxb.xjc.version>
+		<jakarta.activation.version>2.0.0</jakarta.activation.version>
+		<jakarta.xml.bind.version>2.3.3</jakarta.xml.bind.version>
 		<gson.version>2.5</gson.version>
 		<jackson.version>2.10.3</jackson.version>
 		<jackson.databind.version>2.10.3</jackson.databind.version>
-		<spring.version>4.3.21.RELEASE</spring.version>
+		<spring.version>5.3.15</spring.version>
 		<httpcomponents.version>4.5.8</httpcomponents.version>
-		<maven.plugin.api.version>3.5.4</maven.plugin.api.version>
+		<maven.plugin.api.version>3.8.4</maven.plugin.api.version>
 		<maven.annotations.version>3.5.2</maven.annotations.version>
 		<maven.aether.provider.version>3.3.9</maven.aether.provider.version>
 		<maven.testing.harness.version>3.3.0</maven.testing.harness.version>
@@ -51,20 +47,21 @@
 		<commons.codec.version>1.9</commons.codec.version>
 		<commons.validator.version>1.6</commons.validator.version>
 		<commons.collections.version>3.2.2</commons.collections.version>
-		<jersey.version>2.28</jersey.version>
+		<jakarta.servlet.version>4.0.4</jakarta.servlet.version>
+		<jakarta.ws.rs.version>2.1.6</jakarta.ws.rs.version>
+		<jakarta.jms.version>2.0.3</jakarta.jms.version>
+		<jersey.version>2.34</jersey.version>
 		<lucene.version>5.0.0</lucene.version>
 		<svnkit.version>1.8.7</svnkit.version>
-		<jms.version>1.1</jms.version>
-		<activemq.version>5.15.9</activemq.version>
-		<activemq.broker.version>5.15.8</activemq.broker.version>
+		<activemq.version>5.16.3</activemq.version>
 		<javax.mail.version>1.5.5</javax.mail.version>
-		<tiles.version>3.0.5</tiles.version>
-		<jstl.version>1.2</jstl.version>
-		<jetty.version>9.4.17.v20190418</jetty.version>
-		<servlet.api.version>2.5</servlet.api.version>
+		<tiles.version>3.0.8</tiles.version>
+		<jstl.version>1.2.6</jstl.version>
+		<jetty.version>10.0.8</jetty.version>
 		<jsp.api.version>2.1</jsp.api.version>
-		<slf4j.version>1.7.10</slf4j.version>
-		<junit.version>4.12</junit.version>
+		<log4j.version>2.17.1</log4j.version>
+		<slf4j.nop.version>1.7.30</slf4j.nop.version>
+		<junit.version>4.13.2</junit.version>
 		<htmlunit.version>2.35.0</htmlunit.version>
 		<xercesimpl.version>2.12.0</xercesimpl.version>
 		<mockito.version>2.23.4</mockito.version>
@@ -79,23 +76,23 @@
 		<commons-lang3.version>3.5</commons-lang3.version>
 
 		<!-- Plugin Versions -->
-		<compiler.plugin.version>3.8.0</compiler.plugin.version>
+		<compiler.plugin.version>3.9.0</compiler.plugin.version>
 		<resources.plugin.version>3.1.0</resources.plugin.version>
 		<source.plugin.version>2.3</source.plugin.version>
 		<enforcer.plugin.version>3.0.0-M2</enforcer.plugin.version>
 		<versions.plugin.version>2.7</versions.plugin.version>
 		<dependency.plugin.version>2.8</dependency.plugin.version>
-		<jar.plugin.version>2.4</jar.plugin.version>
+		<jar.plugin.version>3.2.2</jar.plugin.version>
 		<war.plugin.version>3.2.2</war.plugin.version>
 		<install.plugin.version>3.0.0-M1</install.plugin.version>
 		<deploy.plugin.version>3.0.0-M1</deploy.plugin.version>
 		<clean.plugin.version>3.1.0</clean.plugin.version>
 		<site.plugin.version>3.7.1</site.plugin.version>
 		<assembly.plugin.version>2.2-beta-5</assembly.plugin.version>
-		<maven.plugin.plugin.version>3.6.0</maven.plugin.plugin.version>
+		<maven.plugin.plugin.version>3.6.2</maven.plugin.plugin.version>
 		<surefire.plugin.version>2.19.1</surefire.plugin.version>
-		<jacoco.plugin.version>0.8.3</jacoco.plugin.version>
-		<checkstyle.plugin.version>3.0.0</checkstyle.plugin.version>
+		<jacoco.plugin.version>0.8.7</jacoco.plugin.version>
+		<checkstyle.plugin.version>3.1.2</checkstyle.plugin.version>
 		<javadoc.plugin.version>3.1.0</javadoc.plugin.version>
 		<license.plugin.version>3.0</license.plugin.version>
 		<jaxb2.plugin.version>2.4</jaxb2.plugin.version>
@@ -182,21 +179,10 @@
 					</execution>
 				</executions>
 			</plugin>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-checkstyle-plugin</artifactId>
-				<configuration>
-					<configLocation>${checkstyle.config}</configLocation>
-					<skip>${skipTests}</skip>
-				</configuration>
-				<executions>
-					<execution>
-						<goals>
-							<goal>check</goal>
-						</goals>
-					</execution>
-				</executions>
-			</plugin>
+			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
+				<configuration> <configLocation>${checkstyle.config}</configLocation> <skip>${skipTests}</skip> 
+				</configuration> <executions> <execution> <goals> <goal>check</goal> </goals> 
+				</execution> </executions> </plugin> -->
 			<plugin>
 				<groupId>org.apache.maven.plugins</groupId>
 				<artifactId>maven-javadoc-plugin</artifactId>
@@ -231,6 +217,7 @@
 						<exclude>**/*.sql</exclude>
 						<exclude>**/*.jrxml</exclude>
 						<exclude>**/check_jmx</exclude>
+						<exclude>**/module-info.java</exclude>
 						<exclude>src/test/resources/**</exclude>
 						<exclude>src/main/resources/**</exclude>
 					</excludes>
@@ -358,19 +345,19 @@
 	<dependencyManagement>
 		<dependencies>
 			<dependency>
-				<groupId>javax.xml.bind</groupId>
-				<artifactId>jaxb-api</artifactId>
-				<version>${jaxb.api.version}</version>
+				<groupId>jakarta.xml.bind</groupId>
+				<artifactId>jakarta.xml.bind-api</artifactId>
+				<version>${jakarta.xml.bind.version}</version>
 			</dependency>
 			<dependency>
-				<groupId>org.glassfish.jaxb</groupId>
-				<artifactId>jaxb-core</artifactId>
-				<version>${jaxb.core.version}</version>
+				<groupId>com.sun.xml.bind</groupId>
+				<artifactId>jaxb-impl</artifactId>
+				<version>${jaxb.impl.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>org.glassfish.jaxb</groupId>
 				<artifactId>jaxb-runtime</artifactId>
-				<version>${jaxb.runtime.version}</version>
+				<version>${jaxb.xjc.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>com.google.code.gson</groupId>
@@ -462,6 +449,16 @@
 				<artifactId>commons-codec</artifactId>
 				<version>${commons.codec.version}</version>
 			</dependency>
+			<dependency>
+				<groupId>jakarta.servlet</groupId>
+				<artifactId>jakarta.servlet-api</artifactId>
+				<version>${jakarta.servlet.version}</version>
+			</dependency>
+			<dependency>
+				<groupId>jakarta.ws.rs</groupId>
+				<artifactId>jakarta.ws.rs-api</artifactId>
+				<version>${jakarta.ws.rs.version}</version>
+			</dependency>
 			<dependency>
 				<groupId>org.glassfish.jersey.core</groupId>
 				<artifactId>jersey-server</artifactId>
@@ -482,6 +479,11 @@
 				<artifactId>jersey-common</artifactId>
 				<version>${jersey.version}</version>
 			</dependency>
+			<dependency>
+				<groupId>org.glassfish.jersey.media</groupId>
+				<artifactId>jersey-media-jaxb</artifactId>
+				<version>${jersey.version}</version>
+			</dependency>
 			<dependency>
 				<groupId>org.glassfish.jersey.media</groupId>
 				<artifactId>jersey-media-multipart</artifactId>
@@ -508,29 +510,29 @@
 				<version>${svnkit.version}</version>
 			</dependency>
 			<dependency>
-				<groupId>javax.jms</groupId>
-				<artifactId>jms</artifactId>
-				<version>${jms.version}</version>
+				<groupId>jakarta.jms</groupId>
+				<artifactId>jakarta.jms-api</artifactId>
+				<version>${jakarta.jms.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>org.apache.activemq</groupId>
-				<artifactId>activemq-client</artifactId>
+				<artifactId>activemq-broker</artifactId>
 				<version>${activemq.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>org.apache.activemq</groupId>
-				<artifactId>activemq-spring</artifactId>
+				<artifactId>activemq-client</artifactId>
 				<version>${activemq.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>org.apache.activemq</groupId>
-				<artifactId>activemq-broker</artifactId>
-				<version>${activemq.broker.version}</version>
+				<artifactId>activemq-spring</artifactId>
+				<version>${activemq.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>org.apache.activemq</groupId>
 				<artifactId>activemq-kahadb-store</artifactId>
-				<version>${activemq.broker.version}</version>
+				<version>${activemq.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>com.sun.mail</groupId>
@@ -543,8 +545,8 @@
 				<version>${tiles.version}</version>
 			</dependency>
 			<dependency>
-				<groupId>javax.servlet</groupId>
-				<artifactId>jstl</artifactId>
+				<groupId>org.glassfish.web</groupId>
+				<artifactId>jakarta.servlet.jsp.jstl</artifactId>
 				<version>${jstl.version}</version>
 			</dependency>
 			<dependency>
@@ -573,19 +575,14 @@
 				<version>${jetty.version}</version>
 			</dependency>
 			<dependency>
-				<groupId>javax.servlet</groupId>
-				<artifactId>servlet-api</artifactId>
-				<version>${servlet.api.version}</version>
-			</dependency>
-			<dependency>
-				<groupId>javax.servlet.jsp</groupId>
-				<artifactId>jsp-api</artifactId>
-				<version>${jsp.api.version}</version>
+				<groupId>org.apache.logging.log4j</groupId>
+				<artifactId>log4j-core</artifactId>
+				<version>${log4j.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>org.slf4j</groupId>
-				<artifactId>slf4j-log4j12</artifactId>
-				<version>${slf4j.version}</version>
+				<artifactId>slf4j-nop</artifactId>
+				<version>${slf4j.nop.version}</version>
 			</dependency>
 			<dependency>
 				<groupId>junit</groupId>
@@ -676,4 +673,4 @@
 		</repository>
 	</repositories>
 
-</project>
+</project>
\ No newline at end of file
diff --git a/schema-compiler-cli/pom.xml b/schema-compiler-cli/pom.xml
index 697650c8..316698a5 100755
--- a/schema-compiler-cli/pom.xml
+++ b/schema-compiler-cli/pom.xml
@@ -9,7 +9,7 @@
 	<parent>
 	    <groupId>org.opentravel.otm</groupId>
 	    <artifactId>ota-parent-pom</artifactId>
-	    <version>4.0-SNAPSHOT</version>
+	    <version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
diff --git a/schema-compiler-cli/src/main/java/module-info.java b/schema-compiler-cli/src/main/java/module-info.java
new file mode 100644
index 00000000..d2576d01
--- /dev/null
+++ b/schema-compiler-cli/src/main/java/module-info.java
@@ -0,0 +1,5 @@
+module org.opentravel.schemacompilercli {
+    requires commons.cli;
+    requires org.opentravel.schemacompiler;
+    requires org.apache.logging.log4j;
+}
diff --git a/schema-compiler-cli/src/main/java/org/opentravel/schemacompiler/cli/Main.java b/schema-compiler-cli/src/main/java/org/opentravel/schemacompiler/cli/Main.java
index 4066f153..b0621b5f 100644
--- a/schema-compiler-cli/src/main/java/org/opentravel/schemacompiler/cli/Main.java
+++ b/schema-compiler-cli/src/main/java/org/opentravel/schemacompiler/cli/Main.java
@@ -21,14 +21,14 @@ import org.apache.commons.cli.GnuParser;
 import org.apache.commons.cli.HelpFormatter;
 import org.apache.commons.cli.Options;
 import org.apache.commons.cli.ParseException;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.ioc.CompilerExtensionRegistry;
 import org.opentravel.schemacompiler.task.CompileAllCompilerTask;
 import org.opentravel.schemacompiler.task.TaskFactory;
 import org.opentravel.schemacompiler.util.SchemaCompilerException;
 import org.opentravel.schemacompiler.validate.FindingMessageFormat;
 import org.opentravel.schemacompiler.validate.ValidationFindings;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.io.File;
 import java.io.IOException;
@@ -55,7 +55,7 @@ public class Main {
     private static final String MESSAGE_RB = "/org/opentravel/schemacompiler/cli/cli-messages.properties";
     private static final ResourceBundle messageBundle;
 
-    private static final Logger log = LoggerFactory.getLogger( Main.class );
+    private static final Logger log = LogManager.getLogger( Main.class );
 
     @SuppressWarnings("squid:S106")
     private PrintWriter out = new PrintWriter( System.out );
diff --git a/schema-compiler-cli/src/main/resources/log4j.properties b/schema-compiler-cli/src/main/resources/log4j.properties
deleted file mode 100644
index ab7695c9..00000000
--- a/schema-compiler-cli/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,9 +0,0 @@
-log4j.rootCategory=OFF, CONSOLE
-
-log4j.logger.org.opentravel.schemacompiler.cli=INFO
-log4j.logger.org.opentravel=OFF
-log4j.logger.org.springframework=OFF
-
-log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
diff --git a/schema-compiler-cli/src/main/resources/log4j2.properties b/schema-compiler-cli/src/main/resources/log4j2.properties
new file mode 100644
index 00000000..41373cfe
--- /dev/null
+++ b/schema-compiler-cli/src/main/resources/log4j2.properties
@@ -0,0 +1,16 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = off
+rootLogger.appenderRef.stdout.ref = consoleLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = off
+
+logger.springframework.name = org.springframework
+logger.springframework.level = off
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
diff --git a/schema-compiler-ext-ota2/pom.xml b/schema-compiler-ext-ota2/pom.xml
index 06bfe4d4..be1e4f06 100644
--- a/schema-compiler-ext-ota2/pom.xml
+++ b/schema-compiler-ext-ota2/pom.xml
@@ -8,7 +8,7 @@
 	<parent>
 	    <groupId>org.opentravel.otm</groupId>
 	    <artifactId>ota-parent-pom</artifactId>
-	    <version>4.0-SNAPSHOT</version>
+	    <version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
diff --git a/schema-compiler-ext-ota2/src/main/java/module-info.java b/schema-compiler-ext-ota2/src/main/java/module-info.java
new file mode 100644
index 00000000..4f2c722a
--- /dev/null
+++ b/schema-compiler-ext-ota2/src/main/java/module-info.java
@@ -0,0 +1,10 @@
+module org.opentravel.schemacompilerextota2 {
+    requires spring.context;
+    requires spring.beans;
+    requires spring.core;
+    requires java.xml;
+
+    exports org.opentravel.schemacompiler.extension;
+    exports org.opentravel.schemacompiler.ota2;
+
+}
diff --git a/schema-compiler/pom.xml b/schema-compiler/pom.xml
index 2102899e..a4a0ff6a 100755
--- a/schema-compiler/pom.xml
+++ b/schema-compiler/pom.xml
@@ -1,6 +1,4 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 
 	<modelVersion>4.0.0</modelVersion>
 	<artifactId>schema-compiler</artifactId>
@@ -10,7 +8,7 @@
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
@@ -25,8 +23,12 @@
 			<version>${project.version}</version>
 		</dependency>
 		<dependency>
-			<groupId>org.glassfish.jaxb</groupId>
-			<artifactId>jaxb-core</artifactId>
+			<groupId>jakarta.xml.bind</groupId>
+			<artifactId>jakarta.xml.bind-api</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>com.sun.xml.bind</groupId>
+			<artifactId>jaxb-impl</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>org.glassfish.jaxb</groupId>
@@ -68,9 +70,13 @@
 			<groupId>org.apache.velocity</groupId>
 			<artifactId>velocity</artifactId>
 		</dependency>
+		<dependency>
+			<groupId>org.apache.logging.log4j</groupId>
+			<artifactId>log4j-core</artifactId>
+		</dependency>
 		<dependency>
 			<groupId>org.slf4j</groupId>
-			<artifactId>slf4j-log4j12</artifactId>
+			<artifactId>slf4j-nop</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
@@ -138,6 +144,7 @@
 			<plugin>
 				<groupId>org.codehaus.mojo</groupId>
 				<artifactId>jaxb2-maven-plugin</artifactId>
+				<version>2.5.0</version>
 				<executions>
 					<execution>
 						<id>xjc</id>
@@ -157,6 +164,28 @@
 					<verbose>false</verbose>
 				</configuration>
 				<dependencies>
+					<dependency>
+						<groupId>org.glassfish.jaxb</groupId>
+						<artifactId>jaxb-xjc</artifactId>
+						<version>${jaxb.xjc.version}</version>
+					</dependency>
+					<dependency>
+						<groupId>jakarta.activation</groupId>
+						<artifactId>jakarta.activation-api</artifactId>
+						<version>${jakarta.activation.version}</version>
+					</dependency>
+					<dependency>
+						<groupId>jakarta.xml.bind</groupId>
+						<artifactId>jakarta.xml.bind-api</artifactId>
+						<version>${jakarta.xml.bind.version}</version>
+					</dependency>
+					<dependency>
+						<groupId>com.sun.xml.bind</groupId>
+						<artifactId>jaxb-impl</artifactId>
+						<version>${jaxb.impl.version}</version>
+					</dependency>
+
+					<!--
 					<dependency>
 						<groupId>javax.xml.bind</groupId>
 						<artifactId>jaxb-api</artifactId>
@@ -177,44 +206,9 @@
 						<artifactId>jakarta.activation</artifactId>
 						<version>${jakarta.activation.version}</version>
 					</dependency>
+					-->
 				</dependencies>
 			</plugin>
-			<plugin>
-				<groupId>org.apache.felix</groupId>
-				<artifactId>maven-bundle-plugin</artifactId>
-				<extensions>true</extensions>
-				<configuration>
-					<archive>
-						<addMavenDescriptor>true</addMavenDescriptor>
-					</archive>
-					<supportedProjectTypes>
-						<supportedProjectType>jar</supportedProjectType>
-					</supportedProjectTypes>
-					<instructions>
-						<Built-By>${project.organization.name}</Built-By>
-						<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
-						<Bundle-ContactAddress>${project.organization.url}</Bundle-ContactAddress>
-						<Bundle-Description>${project.description}</Bundle-Description>
-						<Bundle-DocURL>${bundle.doc.url}</Bundle-DocURL>
-						<Bundle-Category>${bundle.category}</Bundle-Category>
-						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
-						<Bundle-Version>${project.version}</Bundle-Version>
-						<Import-Package>*</Import-Package>
-						<Export-Package>*</Export-Package>
-						<SPI-Consumer>*</SPI-Consumer>
-					</instructions>
-				</configuration>
-				<executions>
-					<execution>
-						<id>bundle</id>
-						<goals>
-							<goal>manifest</goal>
-						</goals>
-						<phase>prepare-package</phase>
-						<inherited>true</inherited>
-					</execution>
-				</executions>
-			</plugin>
 			<plugin>
 				<groupId>org.apache.maven.plugins</groupId>
 				<artifactId>maven-jar-plugin</artifactId>
@@ -241,6 +235,4 @@
 		</resources>
 	</build>
 
-</project>
-
-
+</project>
\ No newline at end of file
diff --git a/schema-compiler/src/main/java/module-info.java b/schema-compiler/src/main/java/module-info.java
new file mode 100644
index 00000000..2fc1237f
--- /dev/null
+++ b/schema-compiler/src/main/java/module-info.java
@@ -0,0 +1,92 @@
+module org.opentravel.schemacompiler {
+    requires spring.context;
+    requires spring.core;
+    requires spring.beans;
+    requires transitive com.fasterxml.jackson.databind;
+    requires gson;
+    requires commons.text;
+    requires commons.collections;
+    requires commons.logging;
+    requires transitive org.apache.httpcomponents.httpclient;
+    requires commons.lang3;
+    requires transitive org.apache.httpcomponents.httpcore;
+    requires transitive org.apache.httpcomponents.httpmime;
+    requires org.opentravel.schemacompilerextota2;
+    requires commons.codec;
+    requires commons.lang;
+    requires commons.beanutils;
+    requires velocity;
+    requires commons.validator;
+    requires org.apache.logging.log4j;
+    requires com.sun.xml.bind;
+    requires transitive java.xml;
+    requires java.xml.bind;
+
+    exports org.opentravel.schemacompiler.codegen;
+    exports org.opentravel.schemacompiler.codegen.example;
+    exports org.opentravel.schemacompiler.codegen.html;
+    exports org.opentravel.schemacompiler.codegen.html.builders;
+    exports org.opentravel.schemacompiler.codegen.html.markup;
+    exports org.opentravel.schemacompiler.codegen.html.writers;
+    exports org.opentravel.schemacompiler.codegen.html.writers.info;
+    exports org.opentravel.schemacompiler.codegen.impl;
+    exports org.opentravel.schemacompiler.codegen.json;
+    exports org.opentravel.schemacompiler.codegen.json.facet;
+    exports org.opentravel.schemacompiler.codegen.json.model;
+    exports org.opentravel.schemacompiler.codegen.openapi;
+    exports org.opentravel.schemacompiler.codegen.openapi.model;
+    exports org.opentravel.schemacompiler.codegen.swagger;
+    exports org.opentravel.schemacompiler.codegen.swagger.model;
+    exports org.opentravel.schemacompiler.codegen.util;
+    exports org.opentravel.schemacompiler.codegen.wsdl;
+    exports org.opentravel.schemacompiler.codegen.xsd;
+    exports org.opentravel.schemacompiler.codegen.xsd.facet;
+    exports org.opentravel.schemacompiler.diff;
+    exports org.opentravel.schemacompiler.diff.impl;
+    exports org.opentravel.schemacompiler.event;
+    exports org.opentravel.schemacompiler.ic;
+    exports org.opentravel.schemacompiler.ioc;
+    exports org.opentravel.schemacompiler.loader;
+    exports org.opentravel.schemacompiler.loader.impl;
+    exports org.opentravel.schemacompiler.model;
+    exports org.opentravel.schemacompiler.repository;
+    exports org.opentravel.schemacompiler.repository.impl;
+    exports org.opentravel.schemacompiler.saver;
+    exports org.opentravel.schemacompiler.saver.impl;
+    exports org.opentravel.schemacompiler.security;
+    exports org.opentravel.schemacompiler.security.impl;
+    exports org.opentravel.schemacompiler.task;
+    exports org.opentravel.schemacompiler.transform;
+    exports org.opentravel.schemacompiler.transform.jaxb14_2tl;
+    exports org.opentravel.schemacompiler.transform.jaxb15_2tl;
+    exports org.opentravel.schemacompiler.transform.jaxb16_2tl;
+    exports org.opentravel.schemacompiler.transform.jaxb2xsd;
+    exports org.opentravel.schemacompiler.transform.symbols;
+    exports org.opentravel.schemacompiler.transform.tl2jaxb;
+    exports org.opentravel.schemacompiler.transform.tl2jaxb16;
+    exports org.opentravel.schemacompiler.transform.util;
+    exports org.opentravel.schemacompiler.util;
+    exports org.opentravel.schemacompiler.validate;
+    exports org.opentravel.schemacompiler.validate.assembly;
+    exports org.opentravel.schemacompiler.validate.base;
+    exports org.opentravel.schemacompiler.validate.compile;
+    exports org.opentravel.schemacompiler.validate.impl;
+    exports org.opentravel.schemacompiler.validate.save;
+    exports org.opentravel.schemacompiler.version;
+    exports org.opentravel.schemacompiler.version.handlers;
+    exports org.opentravel.schemacompiler.visitor;
+    exports org.opentravel.schemacompiler.xml;
+    exports org.opentravel.ns.ota2.appinfo_v01_00;
+    exports org.opentravel.ns.ota2.assembly_v01_00;
+    exports org.opentravel.ns.ota2.librarycatalog_v01_00;
+    exports org.opentravel.ns.ota2.librarymodel_v01_04;
+    exports org.opentravel.ns.ota2.librarymodel_v01_05;
+    exports org.opentravel.ns.ota2.librarymodel_v01_06;
+    exports org.opentravel.ns.ota2.project_v01_00;
+    exports org.opentravel.ns.ota2.release_v01_00;
+    exports org.opentravel.ns.ota2.repositoryinfo_v01_00;
+    exports org.w3._2001.xmlschema;
+    exports org.xmlsoap.schemas.wsdl;
+    exports org.xmlsoap.schemas.wsdl.soap;
+
+}
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/CodeGeneratorFactory.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/CodeGeneratorFactory.java
index 49c1e3de..1a4e568c 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/CodeGeneratorFactory.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/CodeGeneratorFactory.java
@@ -109,7 +109,7 @@ public final class CodeGeneratorFactory {
 
             if (codegenClass != null) {
                 try {
-                    codeGenerator = codegenClass.newInstance();
+                    codeGenerator = codegenClass.getConstructor().newInstance();
 
                 } catch (Exception e) {
                     throw new CodeGenerationException( "Unable to create code generator instance.", e );
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/example/AbstractExampleVisitor.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/example/AbstractExampleVisitor.java
index 59a4a772..f9c99bba 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/example/AbstractExampleVisitor.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/example/AbstractExampleVisitor.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.codegen.example;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.codegen.util.AliasCodegenUtils;
 import org.opentravel.schemacompiler.codegen.util.FacetCodegenUtils;
 import org.opentravel.schemacompiler.codegen.util.XsdCodegenUtils;
@@ -52,8 +54,6 @@ import org.opentravel.schemacompiler.model.XSDComplexType;
 import org.opentravel.schemacompiler.model.XSDElement;
 import org.opentravel.schemacompiler.model.XSDSimpleType;
 import org.opentravel.schemacompiler.util.ClassSpecificFunction;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.springframework.context.ApplicationContext;
 
 import java.math.BigDecimal;
@@ -75,7 +75,7 @@ import javax.xml.namespace.QName;
  */
 public abstract class AbstractExampleVisitor<T> implements ExampleVisitor {
 
-    private static final Logger log = LoggerFactory.getLogger( AbstractExampleVisitor.class );
+    private static final Logger log = LogManager.getLogger( AbstractExampleVisitor.class );
 
     private static FacetCodegenDelegateFactory facetDelegateFactory = new FacetCodegenDelegateFactory( null );
 
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/AbstractDoclet.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/AbstractDoclet.java
index 2430e2ce..a862cd01 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/AbstractDoclet.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/AbstractDoclet.java
@@ -16,11 +16,11 @@
 
 package org.opentravel.schemacompiler.codegen.html;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.codegen.CodeGenerationException;
 import org.opentravel.schemacompiler.codegen.html.writers.LibraryListWriter;
 import org.opentravel.schemacompiler.model.TLModel;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 /**
  * An abstract implementation of a Doclet.
@@ -28,7 +28,7 @@ import org.slf4j.LoggerFactory;
  */
 public abstract class AbstractDoclet {
 
-    private static final Logger log = LoggerFactory.getLogger( AbstractDoclet.class );
+    private static final Logger log = LogManager.getLogger( AbstractDoclet.class );
 
     /**
      * The global configuration information for this run.
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/Messager.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/Messager.java
index be715b6c..854ac81b 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/Messager.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/html/Messager.java
@@ -16,9 +16,9 @@
 
 package org.opentravel.schemacompiler.codegen.html;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.util.SchemaCompilerRuntimeException;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.io.IOException;
 import java.text.MessageFormat;
@@ -36,7 +36,7 @@ import java.util.ResourceBundle;
  */
 public class Messager {
 
-    private static final Logger log = LoggerFactory.getLogger( Messager.class );
+    private static final Logger log = LogManager.getLogger( Messager.class );
 
     /**
      * The maximum number of errors/warnings that are reported.
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/impl/AbstractCodeGenerator.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/impl/AbstractCodeGenerator.java
index c436d8b0..c9f9dea9 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/impl/AbstractCodeGenerator.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/codegen/impl/AbstractCodeGenerator.java
@@ -25,8 +25,6 @@ import org.opentravel.schemacompiler.model.AbstractLibrary;
 import org.opentravel.schemacompiler.model.ModelElement;
 import org.opentravel.schemacompiler.util.URLUtils;
 import org.opentravel.schemacompiler.validate.ValidationException;
-import org.slf4j.Logger;
-import org.slf4j.helpers.NOPLogger;
 
 import java.io.File;
 import java.net.URL;
@@ -48,7 +46,6 @@ public abstract class AbstractCodeGenerator<S extends ModelElement> implements C
     private CodeGenerationFilter filter;
     private CodeGenerationFilenameBuilder<S> filenameBuilder;
     private Map<String,File> generatedFiles = new TreeMap<>();
-    protected Logger log = NOPLogger.NOP_LOGGER;
 
     /**
      * Default constructor.
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/BuiltInLibraryFactory.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/BuiltInLibraryFactory.java
index 54bcfdf2..26414e63 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/BuiltInLibraryFactory.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/BuiltInLibraryFactory.java
@@ -16,10 +16,10 @@
 
 package org.opentravel.schemacompiler.loader;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.ioc.SchemaCompilerApplicationContext;
 import org.opentravel.schemacompiler.model.BuiltInLibrary;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -32,7 +32,7 @@ import java.util.List;
  */
 public final class BuiltInLibraryFactory {
 
-    private static final Logger log = LoggerFactory.getLogger( BuiltInLibraryFactory.class );
+    private static final Logger log = LogManager.getLogger( BuiltInLibraryFactory.class );
 
     private List<BuiltInLibraryLoader> loaders;
 
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/LibraryModelLoader.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/LibraryModelLoader.java
index 9b8076e8..17ba5cdc 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/LibraryModelLoader.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/LibraryModelLoader.java
@@ -18,6 +18,8 @@ package org.opentravel.schemacompiler.loader;
 
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang.StringUtils;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.ioc.SchemaCompilerApplicationContext;
 import org.opentravel.schemacompiler.loader.impl.DefaultLibraryNamespaceResolver;
 import org.opentravel.schemacompiler.loader.impl.LibraryValidationSource;
@@ -50,8 +52,6 @@ import org.opentravel.schemacompiler.validate.compile.TLModelCompileValidator;
 import org.opentravel.schemacompiler.version.VersionScheme;
 import org.opentravel.schemacompiler.version.VersionSchemeException;
 import org.opentravel.schemacompiler.version.VersionSchemeFactory;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.w3._2001.xmlschema.Schema;
 import org.w3._2001.xmlschema.TopLevelElement;
 
@@ -88,7 +88,7 @@ public final class LibraryModelLoader<C> {
     private static final String INVALID_NAMESPACE_URI = "Invalid namespace URI on import: ";
     private static final boolean ENFORCE_CRC_VALIDATION = false;
 
-    private static final Logger log = LoggerFactory.getLogger( LibraryModelLoader.class );
+    private static final Logger log = LogManager.getLogger( LibraryModelLoader.class );
 
     /** Internal indicator used to define the possible types of loader operations. */
     private enum OperationType {
@@ -1214,7 +1214,7 @@ public final class LibraryModelLoader<C> {
     private void initializeDefaultModuleLoader() throws LibraryLoaderException {
         try {
             Class<?> moduleLoaderClass = MultiVersionLibraryModuleLoader.class;
-            setModuleLoader( (LibraryModuleLoader<C>) moduleLoaderClass.newInstance() );
+            setModuleLoader( (LibraryModuleLoader<C>) moduleLoaderClass.getConstructor().newInstance() );
 
         } catch (Exception e) {
             throw new LibraryLoaderException( e );
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/impl/AbstractLibraryModuleLoader.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/impl/AbstractLibraryModuleLoader.java
index 6547daa4..d5b83cd8 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/impl/AbstractLibraryModuleLoader.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/loader/impl/AbstractLibraryModuleLoader.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.loader.impl;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.codegen.CodeGeneratorFactory;
 import org.opentravel.schemacompiler.ioc.SchemaDeclarations;
 import org.opentravel.schemacompiler.loader.LibraryInputSource;
@@ -30,8 +32,6 @@ import org.opentravel.schemacompiler.util.ExceptionUtils;
 import org.opentravel.schemacompiler.util.URLUtils;
 import org.opentravel.schemacompiler.validate.FindingType;
 import org.opentravel.schemacompiler.validate.ValidationFindings;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.w3._2001.xmlschema.Schema;
 
 import java.io.IOException;
@@ -63,7 +63,7 @@ import javax.xml.validation.SchemaFactory;
  */
 public abstract class AbstractLibraryModuleLoader implements LibraryModuleLoader<InputStream> {
 
-    protected static final Logger log = LoggerFactory.getLogger( AbstractLibraryModuleLoader.class );
+    protected static final Logger log = LogManager.getLogger( AbstractLibraryModuleLoader.class );
 
     private static final String MISSING_URL = "[MISSING URL]";
     private static final String SCHEMA_CONTEXT = ":org.w3._2001.xmlschema";
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ProjectManager.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ProjectManager.java
index a9c7c4c4..bfcd30aa 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ProjectManager.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ProjectManager.java
@@ -1752,7 +1752,8 @@ public final class ProjectManager {
                         new LibraryModelSaver().saveLibrary( itemLibrary );
 
                     } catch (LibrarySaveException e) {
-                        throw new RepositoryException( "Error saving current state of library: " + item.getFilename() );
+                        throw new RepositoryException( "Error saving current state of library: " + item.getFilename(),
+                            e );
                     }
                     ImportManagementIntegrityChecker.verifyReferencedLibraries( itemLibrary, libraryUrlOverrides );
                     preparedLibraries.add( itemLibrary );
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ReleaseManager.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ReleaseManager.java
index f24c9250..75adb611 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ReleaseManager.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ReleaseManager.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.repository;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.project_v01_00.ManagedProjectItemType;
 import org.opentravel.ns.ota2.project_v01_00.ProjectItemType;
 import org.opentravel.ns.ota2.project_v01_00.ProjectType;
@@ -43,8 +45,6 @@ import org.opentravel.schemacompiler.validate.ValidationFindings;
 import org.opentravel.schemacompiler.validate.compile.TLModelCompileValidator;
 import org.opentravel.schemacompiler.version.VersionScheme;
 import org.opentravel.schemacompiler.version.VersionSchemeFactory;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.io.File;
 import java.io.FileInputStream;
@@ -66,7 +66,7 @@ public class ReleaseManager {
 
     private static final String INITIAL_VERSION = "1.0.0";
 
-    private static final Logger log = LoggerFactory.getLogger( ReleaseManager.class );
+    private static final Logger log = LogManager.getLogger( ReleaseManager.class );
     private static final VersionScheme versionScheme;
 
     private Release release;
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/RepositoryFileManager.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/RepositoryFileManager.java
index 5c820443..9a636f7b 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/RepositoryFileManager.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/RepositoryFileManager.java
@@ -16,8 +16,8 @@
 
 package org.opentravel.schemacompiler.repository;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.LibraryInfoType;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.ObjectFactory;
 import org.opentravel.ns.ota2.repositoryinfo_v01_00.RepositoryInfoType;
@@ -96,7 +96,7 @@ public abstract class RepositoryFileManager {
     private static final String SCHEMA_CONTEXT = ":org.w3._2001.xmlschema:org.opentravel.ns.ota2.repositoryinfo_v01_00";
     private static final String REPOSITORY_NAMESPACE = "http://www.OpenTravel.org/ns/OTA2/RepositoryInfo_v01_00";
 
-    private static Log log = LogFactory.getLog( RepositoryFileManager.class );
+    private static Logger log = LogManager.getLogger( RepositoryFileManager.class );
 
     private static final ThreadLocal<Set<File>> changeSet = ThreadLocal.withInitial( HashSet::new );
 
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ServiceAssemblyManager.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ServiceAssemblyManager.java
index 8befbf75..ca52b952 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ServiceAssemblyManager.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/ServiceAssemblyManager.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.repository;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.loader.LibraryInputSource;
 import org.opentravel.schemacompiler.loader.LibraryLoaderException;
 import org.opentravel.schemacompiler.loader.LibraryModelLoader;
@@ -39,8 +41,6 @@ import org.opentravel.schemacompiler.version.VersionSchemeFactory;
 import org.opentravel.schemacompiler.visitor.DependencyNavigator;
 import org.opentravel.schemacompiler.visitor.ModelElementVisitor;
 import org.opentravel.schemacompiler.visitor.ModelElementVisitorAdapter;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.io.File;
 import java.io.FileInputStream;
@@ -61,7 +61,7 @@ import javax.xml.namespace.QName;
  */
 public class ServiceAssemblyManager {
 
-    private static final Logger log = LoggerFactory.getLogger( ServiceAssemblyManager.class );
+    private static final Logger log = LogManager.getLogger( ServiceAssemblyManager.class );
 
     private RepositoryManager repositoryManager;
     private ServiceAssemblyFileUtils fileUtils;
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/MultiReleaseModuleLoader.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/MultiReleaseModuleLoader.java
index 7b364a9d..b011f5f3 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/MultiReleaseModuleLoader.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/MultiReleaseModuleLoader.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.repository.impl;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.loader.LibraryInputSource;
 import org.opentravel.schemacompiler.loader.LibraryLoaderException;
 import org.opentravel.schemacompiler.loader.LibraryModuleInfo;
@@ -27,8 +29,6 @@ import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.util.URLUtils;
 import org.opentravel.schemacompiler.validate.ValidationFindings;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.w3._2001.xmlschema.Schema;
 
 import java.io.File;
@@ -45,7 +45,7 @@ import java.util.Map;
  */
 public class MultiReleaseModuleLoader implements LibraryModuleLoader<InputStream> {
 
-    private static final Logger log = LoggerFactory.getLogger( MultiReleaseModuleLoader.class );
+    private static final Logger log = LogManager.getLogger( MultiReleaseModuleLoader.class );
 
     private Map<String,ReleaseMember> libraryUrltoReleaseMemberMap = new HashMap<>();
     private LibraryModuleLoader<InputStream> delegate;
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/ReleaseLibraryModuleLoader.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/ReleaseLibraryModuleLoader.java
index 4f318123..421efbf3 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/ReleaseLibraryModuleLoader.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/repository/impl/ReleaseLibraryModuleLoader.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.repository.impl;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.loader.LibraryInputSource;
 import org.opentravel.schemacompiler.loader.LibraryLoaderException;
 import org.opentravel.schemacompiler.loader.LibraryModuleInfo;
@@ -28,8 +30,6 @@ import org.opentravel.schemacompiler.repository.RepositoryItem;
 import org.opentravel.schemacompiler.repository.RepositoryItemCommit;
 import org.opentravel.schemacompiler.util.URLUtils;
 import org.opentravel.schemacompiler.validate.ValidationFindings;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.w3._2001.xmlschema.Schema;
 
 import java.io.File;
@@ -52,7 +52,7 @@ import java.util.Set;
  */
 public class ReleaseLibraryModuleLoader implements LibraryModuleLoader<InputStream> {
 
-    private static final Logger log = LoggerFactory.getLogger( ReleaseLibraryModuleLoader.class );
+    private static final Logger log = LogManager.getLogger( ReleaseLibraryModuleLoader.class );
 
     private ReleaseManager releaseManager;
     private LibraryModuleLoader<InputStream> delegate;
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/TransformerFactory.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/TransformerFactory.java
index 1664ac1e..c62418ab 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/TransformerFactory.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/TransformerFactory.java
@@ -16,9 +16,9 @@
 
 package org.opentravel.schemacompiler.transform;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.ioc.SchemaCompilerApplicationContext;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.springframework.context.ApplicationContext;
 
 import java.util.Collection;
@@ -38,7 +38,7 @@ import java.util.Set;
  */
 public class TransformerFactory<C extends ObjectTransformerContext> {
 
-    private static final Logger log = LoggerFactory.getLogger( TransformerFactory.class );
+    private static final Logger log = LogManager.getLogger( TransformerFactory.class );
 
     private Map<Class<?>,Map<Class<?>,Class<?>>> sourceTypeMappings = new HashMap<>();
     private C transformerContext;
@@ -193,7 +193,7 @@ public class TransformerFactory<C extends ObjectTransformerContext> {
 
             try {
                 if (transformerClass != null) {
-                    transformer = transformerClass.newInstance();
+                    transformer = transformerClass.getConstructor().newInstance();
                     transformer.setContext( transformerContext );
                 }
             } catch (Exception e) {
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ModelReferenceResolver.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ModelReferenceResolver.java
index 710bb189..4d0fb35c 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ModelReferenceResolver.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ModelReferenceResolver.java
@@ -16,21 +16,23 @@
 
 package org.opentravel.schemacompiler.transform.util;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.model.TLLibrary;
 import org.opentravel.schemacompiler.model.TLModel;
 import org.opentravel.schemacompiler.model.TLParamGroup;
 import org.opentravel.schemacompiler.model.TLParameter;
 import org.opentravel.schemacompiler.model.TLResource;
 import org.opentravel.schemacompiler.visitor.ModelNavigator;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+
+import java.lang.reflect.InvocationTargetException;
 
 /**
  * Provides a global static method for resolving all entity references within an OTM model.
  */
 public final class ModelReferenceResolver {
 
-    private static Logger log = LoggerFactory.getLogger( ModelReferenceResolver.class );
+    private static Logger log = LogManager.getLogger( ModelReferenceResolver.class );
 
     private static Class<? extends ObsoleteBuiltInVisitor> obsoleteBuiltInVisitorType = ObsoleteBuiltInVisitor.class;
 
@@ -90,12 +92,13 @@ public final class ModelReferenceResolver {
      */
     private static void resolveObsoleteBuiltInReferences(TLModel model) {
         try {
-            ObsoleteBuiltInVisitor visitor = obsoleteBuiltInVisitorType.newInstance();
+            ObsoleteBuiltInVisitor visitor = obsoleteBuiltInVisitorType.getConstructor().newInstance();
 
             ModelNavigator.navigate( model, visitor );
             visitor.resolveObsoleteBuiltInReferences();
 
-        } catch (InstantiationException | IllegalAccessException e) {
+        } catch (InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException
+            | NoSuchMethodException | SecurityException e) {
             log.error( "Error initializing ObsoleteBuiltInVisitor.", e );
         }
     }
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ObsoleteBuiltInVisitor.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ObsoleteBuiltInVisitor.java
index 73568dee..c7b0504a 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ObsoleteBuiltInVisitor.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/transform/util/ObsoleteBuiltInVisitor.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.transform.util;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.ic.ImportManagementIntegrityChecker;
 import org.opentravel.schemacompiler.loader.LibraryInputSource;
 import org.opentravel.schemacompiler.loader.LibraryModelLoader;
@@ -38,8 +40,6 @@ import org.opentravel.schemacompiler.repository.RepositoryManager;
 import org.opentravel.schemacompiler.transform.symbols.AbstractSymbolResolver;
 import org.opentravel.schemacompiler.util.URLUtils;
 import org.opentravel.schemacompiler.visitor.ModelElementVisitorAdapter;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.io.File;
 import java.io.InputStream;
@@ -62,7 +62,7 @@ public class ObsoleteBuiltInVisitor extends ModelElementVisitorAdapter {
     protected static final String OTA_REPOSITORY_ID = "Opentravel";
     protected static final String OTA_REPOSITORY_URL = "http://www.opentravelmodel.net";
 
-    private static Logger log = LoggerFactory.getLogger( ObsoleteBuiltInVisitor.class );
+    private static Logger log = LogManager.getLogger( ObsoleteBuiltInVisitor.class );
 
     private static List<String> obsoleteTypeNames = Arrays.asList( "String_AlphaNumeric", "String_Long", "String",
         "String_Short", "String_Tiny", "String_Character_One", "String_UpperCaseAlpha", "String_UpperCaseAlphaNumeric",
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/ClasspathResourceResolver.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/ClasspathResourceResolver.java
index afdde742..e12baf6d 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/ClasspathResourceResolver.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/ClasspathResourceResolver.java
@@ -16,11 +16,11 @@
 
 package org.opentravel.schemacompiler.util;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.codegen.CodeGeneratorFactory;
 import org.opentravel.schemacompiler.ioc.SchemaCompilerApplicationContext;
 import org.opentravel.schemacompiler.ioc.SchemaDeclaration;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.springframework.context.ApplicationContext;
 import org.w3c.dom.ls.LSInput;
 import org.w3c.dom.ls.LSResourceResolver;
@@ -40,7 +40,7 @@ import java.util.Map;
 public class ClasspathResourceResolver implements LSResourceResolver {
 
     private static final String SYSTEM_ID_MAPPINGS_CONTEXT_ID = "systemIdMappings";
-    private static final Logger log = LoggerFactory.getLogger( ClasspathResourceResolver.class );
+    private static final Logger log = LogManager.getLogger( ClasspathResourceResolver.class );
 
     private Map<String,SchemaDeclaration> systemIdMappings;
 
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/FileUtils.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/FileUtils.java
index a619f908..d3f1baaa 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/FileUtils.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/util/FileUtils.java
@@ -16,8 +16,8 @@
 
 package org.opentravel.schemacompiler.util;
 
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 
 import java.io.File;
 import java.io.FileReader;
@@ -35,7 +35,7 @@ import javax.xml.bind.Unmarshaller;
  */
 public class FileUtils {
 
-    private static final Logger log = LoggerFactory.getLogger( FileUtils.class );
+    private static final Logger log = LogManager.getLogger( FileUtils.class );
 
     /**
      * Private constructor to prevent instantiation.
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/ValidatorFactory.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/ValidatorFactory.java
index d6d2665e..12024f23 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/ValidatorFactory.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/ValidatorFactory.java
@@ -16,10 +16,10 @@
 
 package org.opentravel.schemacompiler.validate;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.ioc.SchemaCompilerApplicationContext;
 import org.opentravel.schemacompiler.validate.impl.CompositeValidator;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import org.springframework.context.ApplicationContext;
 
 import java.util.ArrayList;
@@ -36,7 +36,7 @@ public class ValidatorFactory {
     public static final String SAVE_RULE_SET_ID = "defaultSaveValidationRules";
     public static final String ASSEMBLY_RULE_SET_ID = "assemblyValidationRules";
 
-    private static final Logger log = LoggerFactory.getLogger( ValidatorFactory.class );
+    private static final Logger log = LogManager.getLogger( ValidatorFactory.class );
 
     private ValidationRuleSet ruleSet;
     private ValidationContext context;
@@ -132,7 +132,7 @@ public class ValidatorFactory {
 
         try {
             if (validatorClass != null) {
-                Validator<T> newValidator = validatorClass.newInstance();
+                Validator<T> newValidator = validatorClass.getConstructor().newInstance();
 
                 newValidator.setValidatorFactory( this );
                 newValidator.setValidationContext( context );
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/assembly/AssemblyValidationContext.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/assembly/AssemblyValidationContext.java
index 2bd2c6ff..f705cf41 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/assembly/AssemblyValidationContext.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/assembly/AssemblyValidationContext.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.validate.assembly;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.repository.ReleaseItem;
 import org.opentravel.schemacompiler.repository.ReleaseManager;
 import org.opentravel.schemacompiler.repository.ReleaseMember;
@@ -29,8 +31,6 @@ import org.opentravel.schemacompiler.repository.ServiceAssemblyMember;
 import org.opentravel.schemacompiler.validate.FindingType;
 import org.opentravel.schemacompiler.validate.ValidationContext;
 import org.opentravel.schemacompiler.validate.ValidationFindings;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.util.ArrayList;
 import java.util.Date;
@@ -45,7 +45,7 @@ import java.util.Set;
  */
 public class AssemblyValidationContext implements ValidationContext {
 
-    private static final Logger log = LoggerFactory.getLogger( ValidationContext.class );
+    private static final Logger log = LogManager.getLogger( ValidationContext.class );
 
     private RepositoryManager repositoryManager;
     private Map<String,Set<Integer>> libraryCommitNumbers = new HashMap<>();
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/impl/TLModelValidationContext.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/impl/TLModelValidationContext.java
index f5bcdc91..f208aa52 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/impl/TLModelValidationContext.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/validate/impl/TLModelValidationContext.java
@@ -20,6 +20,7 @@ import org.opentravel.schemacompiler.model.TLModel;
 import org.opentravel.schemacompiler.transform.SymbolResolver;
 import org.opentravel.schemacompiler.validate.ValidationContext;
 
+import java.lang.reflect.InvocationTargetException;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -86,9 +87,10 @@ public class TLModelValidationContext implements ValidationContext {
     public <T> T getContextCacheEntry(String cacheKey, Class<T> entryType) {
         return (T) validationCache.computeIfAbsent( cacheKey, k -> {
             try {
-                return entryType.newInstance();
+                return entryType.getConstructor().newInstance();
 
-            } catch (InstantiationException | IllegalAccessException e) {
+            } catch (InstantiationException | IllegalAccessException | IllegalArgumentException
+                | InvocationTargetException | NoSuchMethodException | SecurityException e) {
                 return null;
             }
         } );
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/MajorVersionHelper.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/MajorVersionHelper.java
index 596cd481..34c8212d 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/MajorVersionHelper.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/MajorVersionHelper.java
@@ -16,6 +16,8 @@
 
 package org.opentravel.schemacompiler.version;
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.opentravel.schemacompiler.codegen.util.FacetCodegenUtils;
 import org.opentravel.schemacompiler.ic.ImportManagementIntegrityChecker;
 import org.opentravel.schemacompiler.model.AbstractLibrary;
@@ -43,8 +45,6 @@ import org.opentravel.schemacompiler.version.handlers.RollupReferenceHandler;
 import org.opentravel.schemacompiler.version.handlers.VersionHandler;
 import org.opentravel.schemacompiler.version.handlers.VersionHandlerFactory;
 import org.opentravel.schemacompiler.version.handlers.VersionHandlerMergeUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -62,7 +62,7 @@ import java.util.Set;
  */
 public final class MajorVersionHelper extends AbstractVersionHelper {
 
-    private static final Logger log = LoggerFactory.getLogger( MajorVersionHelper.class );
+    private static final Logger log = LogManager.getLogger( MajorVersionHelper.class );
 
     /**
      * Default constructor. NOTE: When working in an environment where a <code>ProjectManager</code> is being used, the
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/VersionSchemeFactory.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/VersionSchemeFactory.java
index f14fe03a..2c4c252f 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/VersionSchemeFactory.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/version/VersionSchemeFactory.java
@@ -68,7 +68,7 @@ public class VersionSchemeFactory {
 
         if (versionSchemeClass != null) {
             try {
-                versionScheme = versionSchemeClass.newInstance();
+                versionScheme = versionSchemeClass.getConstructor().newInstance();
 
             } catch (Exception e) {
                 throw new VersionSchemeException(
diff --git a/schema-compiler/src/main/java/org/opentravel/schemacompiler/xml/XMLPrettyPrinter.java b/schema-compiler/src/main/java/org/opentravel/schemacompiler/xml/XMLPrettyPrinter.java
index af6d9967..13b8e796 100644
--- a/schema-compiler/src/main/java/org/opentravel/schemacompiler/xml/XMLPrettyPrinter.java
+++ b/schema-compiler/src/main/java/org/opentravel/schemacompiler/xml/XMLPrettyPrinter.java
@@ -16,8 +16,8 @@
 
 package org.opentravel.schemacompiler.xml;
 
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.w3c.dom.Document;
 import org.w3c.dom.ls.DOMImplementationLS;
 import org.w3c.dom.ls.LSOutput;
@@ -45,7 +45,7 @@ public class XMLPrettyPrinter {
     public static final String LINE_BREAK_TOKEN = "__LINE_BREAK__";
     public static final String LINE_BREAK_COMMENT = "<!--" + LINE_BREAK_TOKEN + "-->";
 
-    private static final Logger log = LoggerFactory.getLogger( XMLPrettyPrinter.class );
+    private static final Logger log = LogManager.getLogger( XMLPrettyPrinter.class );
 
     private static final DocumentBuilder docBuilder;
     private static final DOMImplementationLS domLS;
diff --git a/schema-compiler/src/main/resources/META-INF/MANIFEST.MF b/schema-compiler/src/main/resources/META-INF/MANIFEST.MF
new file mode 100644
index 00000000..6713d96d
--- /dev/null
+++ b/schema-compiler/src/main/resources/META-INF/MANIFEST.MF
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Created-By: Apache Maven ${maven.version}
+Build-Jdk: ${java.version}
\ No newline at end of file
diff --git a/schema-compiler/src/test/resources/log4j.properties b/schema-compiler/src/test/resources/log4j.properties
deleted file mode 100644
index f54a52fb..00000000
--- a/schema-compiler/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,10 +0,0 @@
-log4j.rootCategory=INFO, SILENT
-
-log4j.logger.org.opentravel=DEBUG
-log4j.logger.org.springframework=WARN
-
-log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
-log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
-log4j.appender.CONSOLE.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
-
-log4j.appender.SILENT = org.apache.log4j.varia.NullAppender
diff --git a/schema-compiler/src/test/resources/log4j2.properties b/schema-compiler/src/test/resources/log4j2.properties
new file mode 100644
index 00000000..8098d0db
--- /dev/null
+++ b/schema-compiler/src/test/resources/log4j2.properties
@@ -0,0 +1,19 @@
+status = warn
+name = LogConfig
+
+rootLogger.level = off
+rootLogger.appenderRef.stdout.ref = silentLogger
+
+logger.opentravel.name = org.opentravel
+logger.opentravel.level = debug
+
+logger.springframework.name = org.springframework
+logger.springframework.level = warn
+
+appender.console.type = Console
+appender.console.name = consoleLogger
+appender.console.layout.type = PatternLayout
+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}:%L - %m%n
+
+appender.silent.type = Null
+appender.silent.name = silentLogger
diff --git a/test-aggregate/pom.xml b/test-aggregate/pom.xml
index d048499e..8c34193e 100644
--- a/test-aggregate/pom.xml
+++ b/test-aggregate/pom.xml
@@ -9,7 +9,7 @@
 	<parent>
 		<groupId>org.opentravel.otm</groupId>
 		<artifactId>ota-parent-pom</artifactId>
-		<version>4.0-SNAPSHOT</version>
+		<version>5.0-SNAPSHOT</version>
 	</parent>
 
 	<properties>
