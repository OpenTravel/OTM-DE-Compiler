<?xml version="1.0" encoding="UTF-8"?>
<Library xmlns="http://www.OpenTravel.org/ns/OTA2/LibraryModel_v01_04"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.OpenTravel.org/ns/OTA2/LibraryModel_v01_04 OTA2_LibraryModel_v1.4.7.xsd">
    
    <VersionScheme>OTA2</VersionScheme>
    <Status>Final</Status>
    <CrcValue>1022353747</CrcValue>
    <Namespace>http://www.opentravel.org/OTM/Common/v0</Namespace>
    <Prefix>ota2</Prefix>
    <Name>OTA_SimpleTypes</Name>
    <Import namespace="http://www.w3.org/2001/XMLSchema" prefix="xsd"/>
    <Context applicationContext="http://www.opentravel.org/OTM/Common" context="OTA2"/>
    
    <Simple maxLength="4096" name="String_AlphaNumeric"
        pattern="([0-9a-zA-Z]+)?" type="xsd:string">
        <Documentation>
            <Description>Alpha Numeric string with no whitespace
Minimum length of 0 and a maximum length of 4096</Description>
        </Documentation>
        <Example context="OTA2">Abc123</Example>
    </Simple>
    
    <Simple maxLength="4096" name="String_Long" type="xsd:string">
        <Documentation>
            <Description>A long string  
Minimum length of 0 and a maximum length of 4096</Description>
        </Documentation>
        <Example context="OTA2">I am a long string.</Example>
    </Simple>
    
    <Simple maxLength="512" name="String" type="xsd:string">
        <Documentation>
            <Description>A string with a minimum length of 0 and a maximum length of 512.</Description>
        </Documentation>
        <Example context="OTA2">I am a medium string.</Example>
    </Simple>
    
    <Simple maxLength="128" name="String_Short" type="xsd:string">
        <Documentation>
            <Description>A short string  
Minimum length of 0 and a maximum length of 128</Description>
        </Documentation>
        <Example context="OTA2">I am a short string.</Example>
    </Simple>
    
    <Simple maxLength="32" name="String_Tiny" type="xsd:string">
        <Documentation>
            <Description>A tiny string  
Minimum length of 0 and a maximum length of 32</Description>
        </Documentation>
        <Example context="OTA2">I am a tiny string.</Example>
    </Simple>
    
    <Simple maxLength="1" name="String_Character_One" type="xsd:string">
        <Documentation>
            <Description>Single  character string
Minimum length of 0 and a maximum length of 1</Description>
        </Documentation>
        <Example context="OTA2">A</Example>
    </Simple>
    
    <Simple maxLength="4096" name="String_UpperCaseAlpha"
        pattern="([A-Z]+)?" type="xsd:string">
        <Documentation>
            <Description>Upper Case Alpha string with no whitespace 
Minimum length of 0 and maximum length of 4096</Description>
            <Implementer>Assigned XSD Type:
				{http://services.sabre.com/STL/v01}UpperCaseString</Implementer>
        </Documentation>
        <Example context="OTA2">ADCDEF</Example>
    </Simple>
    
    <Simple maxLength="4096" name="String_UpperCaseAlphaNumeric"
        pattern="([A-Z0-9]+)?" type="xsd:string">
        <Documentation>
            <Description>Upper Case Alpha Numeric string with no whitespace
Minimum length of 0 and maximum length of 4096</Description>
            <Implementer>Assigned XSD Type:
				{http://services.sabre.com/STL/v01}UpperCaseString</Implementer>
        </Documentation>
        <Example context="OTA2">STRING123</Example>
    </Simple>
    
    <Simple maxLength="4096" name="String_Text" type="xsd:string">
        <Documentation>
            <Description>A string intended for free text 
Minimum length of 0 and maximum length of 4096</Description>
        </Documentation>
    </Simple>
    
    <Simple name="Code_Airline_IATA" pattern="([a-zA-Z0-9]{2})?" type="xsd:string">
        <Documentation>
            <Description>IATA defined 2 character airline designator codes, (IATA Airline Coding Directory, Section 3)
This type will not support  IATA 3 char airline designator codes. There are no IATA 3 char airline codes assigned at this time.</Description>
        </Documentation>
        <Example context="OTA2">LH</Example>
    </Simple>
    
    <Simple name="Code_Airline_ICAO" pattern="([a-zA-Z]{3})?" type="xsd:string">
        <Documentation>
            <Description>ICAO defined 3 Letter Airline Code 
(defined by ICAO 8585)</Description>
        </Documentation>
        <Example context="OTA2">UAL</Example>
    </Simple>
    
    <Simple name="Code_Airport_IATA" pattern="([A-Z]{3})?" type="xsd:string">
        <Documentation>
            <Description>IATA defined 3 char airport code or location identifier</Description>
        </Documentation>
        <Example context="OTA2">LGA</Example>
    </Simple>
    
    <Simple name="Code_Airport_ICAO" pattern="([A-Z0-9]{4})?" type="xsd:string">
        <Documentation>
            <Description>ICAO defined 4 char airport or location code as per ICAO doc 7910</Description>
        </Documentation>
        <Example context="OTA2">KDFW</Example>
    </Simple>
    
    <Simple name="Code_Agency_IATA_Number" pattern="([0-9]{8})?" type="xsd:string">
        <Documentation>
            <Description>IATA agency number - An 8-digit numerical code that uniquely identifies travel agencies and other entities engaged in the sale of travel</Description>
        </Documentation>
        <Example context="OTA2">77123456</Example>
    </Simple>
    
    <Simple name="Code_Country" pattern="([a-zA-Z]{2})?" type="xsd:string">
        <Documentation>
            <Description>ISO 2 char country code  - Preferred country code is the 2 character country code as defined in ISO 3166-1</Description>
        </Documentation>
        <Example context="OTA2">US</Example>
    </Simple>
    
    <Simple name="Code_Country_ISO_3" pattern="([a-zA-Z]{3})?" type="xsd:string">
        <Documentation>
            <Description>ISO 3 char country code as defined in ISO 3166-1 standard</Description>
        </Documentation>
        <Example context="OTA2">USA</Example>
    </Simple>
    
    <Simple maxLength="1" name="FlightNumber_Suffix" pattern="([A-Z])?" type="String_Character_One">
        <Documentation>
            <Description>Single upper case letter used to distinguish multiple flights of the same number originating on the same date.</Description>
            <Implementer>Assigned XSD Type:
				{http://www.w3.org/2001/XMLSchema}string</Implementer>
        </Documentation>
        <Example context="OTA2">A</Example>
    </Simple>
    
    <Simple name="DateTime" type="xsd:dateTime">
        <Documentation>
            <Description>XSD DateTime allows either a time-zone specification or allows the time-zone to be omitted. 
When omitted, times are "local". XSD DateTime with either a "Z" or a "+/-hh:mm" value are UTC. Time is the time "in the indicated time zone". When a element or attribute has xsd:dateTime type, the data in a message can be either local or UTC and software can easily determine which it is.</Description>
        </Documentation>
        <Example context="OTA2">2010-12-31T11:55:00Z</Example>
    </Simple>
    
    <Simple name="DateTime_WithTimeZone"
        pattern=".+(Z|[+\-]\d{2}:\d{2})" type="xsd:dateTime">
        <Documentation>
            <Description>ISO date time type with restriction to assure time has the UTC offset or Z for Zulu. Example: 2010-12-31T11:55:00+06:00  or 2010-12-31T11:55:00Z</Description>
            <Implementer>Assigned XSD Type:
				{http://www.w3.org/2001/XMLSchema}dateTime</Implementer>
        </Documentation>
        <Example context="OTA2">2010-12-31T11:55:00+06:00</Example>
    </Simple>
    
    <Simple name="Empty" type="xsd:string">
        <Documentation>
            <Description>An empty string used when the simple content of an element or attribute is to be omitted.</Description>
        </Documentation>
    </Simple>
    
    <Simple maxLength="2" minLength="2" name="Code_Language"
        pattern="([a-zA-Z]{2})?" type="xsd:language">
        <Documentation>
            <Description>Preferred language code is the 2 character ISO 639-1 defined Language code - common usage</Description>
        </Documentation>
        <Example context="OTA2">en</Example>
    </Simple>
    
    <Simple name="Code_Language_ISO_3" type="xsd:language">
        <Documentation>
            <Description>ISO 3 char  language code defined in  ISO639-2</Description>
        </Documentation>
        <Example context="OTA2">eng</Example>
    </Simple>
    
    <Simple name="DateTime_Local" pattern=".+T[^Z+\-]+" type="xsd:dateTime">
        <Documentation>
            <Description>ISO date time type without UTC offset or Z for Zulu restriction indicating it is representing Local Time
Example: 2010-12-31T11:55:00</Description>
            <Implementer>Assigned XSD Type:
				{http://www.w3.org/2001/XMLSchema}dateTime</Implementer>
        </Documentation>
        <Example context="OTA2">2010-12-31T11:55:00</Example>
    </Simple>
    
    <Simple name="Code_Currency" pattern="([a-zA-Z]{3})?" type="xsd:string">
        <Documentation>
            <Description>Currency code - Preferred currencty code is a 3 char currency code as defined in ISO 4127</Description>
        </Documentation>
        <Example context="OTA2">USD</Example>
    </Simple>
    
    <Simple name="Code_Railway_Station_IATA" pattern="([A-Z]{3})?" type="xsd:string">
        <Documentation>
            <Description>IATA codes for railway stations begin with Q, X or Z, except when the station shares the code with an airport.

Railway stations are typically used in air-rail alliances or code sharing agreements (commonly known as "Rail Fly"). Commonly used in Europe</Description>
        </Documentation>
    </Simple>
    
    <Enumeration_Closed name="Enum_DayOfWeek">
        <Documentation>
            <Description>Day of the Week types.</Description>
        </Documentation>
        <Value literal="Monday"/>
        <Value literal="Tuesday"/>
        <Value literal="Wednesday"/>
        <Value literal="Thursday"/>
        <Value literal="Friday"/>
        <Value literal="Saturday"/>
        <Value literal="Sunday"/>
    </Enumeration_Closed>
    
    <Enumeration_Closed name="Enum_MonthOfYear">
        <Documentation>
            <Description>Month of year types</Description>
        </Documentation>
        <Value literal="January"/>
        <Value literal="February"/>
        <Value literal="March"/>
        <Value literal="April"/>
        <Value literal="May"/>
        <Value literal="June"/>
        <Value literal="July"/>
        <Value literal="August"/>
        <Value literal="September"/>
        <Value literal="October"/>
        <Value literal="November"/>
        <Value literal="December"/>
    </Enumeration_Closed>
    
    <Simple name="FlightNumber_With_Suffix"
        pattern="([0-9]{1,4}[A-Z]{1})?" type="xsd:string">
        <Documentation>
            <Description>a 1-4 numeric flight number with an alpha suffix</Description>
        </Documentation>
        <Example context="OTA2">1234S</Example>
    </Simple>
    
    <Simple name="Code_Agency_IATA" pattern="([0-9a-zA-Z]{1,3})?" type="xsd:string">
        <Documentation>
            <Description>IATA  defined 2 or 3 char code for an agency or airline acting as an agency</Description>
        </Documentation>
        <Example context="OTA2">AA</Example>
    </Simple>
    
</Library>
